        -:    0:Source:C:/Users/JackyChang/Desktop/tutorial/RailSystem/src/RailSystems.ads
        -:    0:Programs:38
        -:    1:with Trains;
        -:    2:with Stations;
        -:    3:with Tracks;
        -:    4:with Trains;
        -:    5:with sPrint;
        -:    6:with LIST;
        -:    7:with TYPES;
        2:    8:package RailSystems
        -:    9:--  is
        -:   10:with SPARK_Mode=>On is
        -:   11:   use all type TYPES.Station_Locations;
        -:   12:   use all type TYPES.Train_State;
        -:   13:   use all type Trains.Train;
        2:   14:   tn : Trains.Train;
        -:   15:   ID: Natural;
        -:   16:   package LIST_TRAINS is new LIST
        -:   17:     ( DATA_TYPE => Trains.Train,
        -:   18:       E_ID=>ID,
        -:   19:--         MAX_SIZE=>100,
        -:   20:       NO_FOUND => tn);
        -:   21:
        2:   22:   sn : Stations.Station;
        -:   23:   package LIST_STATIONS is new LIST
        -:   24:     ( DATA_TYPE => Stations.Station,
        -:   25:       E_ID=>ID,
        -:   26:--         MAX_SIZE=>100,
        -:   27:       NO_FOUND => sn);
        -:   28:
        -:   29:
        2:   30:   type RailSystem is
        -:   31:      record
        2:   32:         All_Trains: LIST_TRAINS.LIST_PTR(MAX_SIZE => 100);
        2:   33:         All_Stations: LIST_STATIONS.LIST_PTR(MAX_SIZE => 100);
        2:   34:         All_Tracks: Stations.LIST_TRACKS.LIST_PTR(MAX_SIZE => 100);
        -:   35:      end record;
        -:   36:
        -:   37:   --procedure
        -:   38:   procedure Init(r_system: in out RailSystem);
        -:   39:   procedure addTrain (r_system: in out RailSystem; ID: in Natural)
        -:   40:   with
       44:   41:       Pre =>(ID > 0
       40:   42:              and ID < 101
       40:   43:              and (
       40:   44:                      for all Index in 1 .. RailSystems.LIST_TRAINS.GET_SIZE(r_system.All_Trains)
       12:   45:                =>RailSystems.LIST_TRAINS.GET_ELEMENT(r_system.All_Trains,Index).ID /= ID )
        -:   46:             );
        -:   47:
        -:   48:   procedure addTrack(r_system: in out RailSystem; ID: in Natural; Origin: in TYPES.Station_Locations; Destination: in TYPES.Station_Locations; LineOrigin: in TYPES.Station_Locations; LineDestination: in TYPES.Station_Locations)
        -:   49:     with
      276:   50:       Pre =>(ID >=1
      262:   51:              and ID<=100
      262:   52:              and Origin /= TYPES.No
      262:   53:              and Destination /= TYPES.No
      262:   54:              and LineOrigin /= TYPES.No
      262:   55:              and LineDestination /= TYPES.No
      262:   56:              and Origin /= Destination
      262:   57:              and LineOrigin /= LineDestination
      262:   58:              and (if ID/=0 then Stations.LIST_TRACKS.GET_ELEMENT_BY_ID(r_system.All_Tracks, ID).id = 0)
      266:   59:              and (for all Index in 1 .. Stations.LIST_TRACKS.GET_SIZE(r_system.All_Tracks)
     1420:   60:                => Stations.LIST_TRACKS.GET_ELEMENT(r_system.All_Tracks,Index).ID /= ID ));
        -:   61:--       post => (Stations.LIST_TRACKS.CONTAINS(r_system.All_Tracks,Stations.LIST_TRACKS.GET_ELEMENT_BY_ID(r_system.All_Tracks,ID)));
        -:   62:--       post => (Stations.LIST_TRACKS.GET_ELEMENT_BY_ID(r_system.All_Tracks,ID).Origin = Origin );
        -:   63:--       post =>(if Stations.LIST_TRACKS.GET_SIZE(r_system'Old.All_Tracks )< 100 and Stations.LIST_TRACKS.GET_SIZE(r_system'Old.All_Tracks )>=0
        -:   64:--                   then Stations.LIST_TRACKS.GET_SIZE(r_system'Old.All_Tracks ) <= Stations.LIST_TRACKS.GET_SIZE(r_system.All_Tracks)
        -:   65:--                  );
        -:   66:--       Post=>(if  Origin /= TYPES.No and Destination /= TYPES.No then
        -:   67:--                (for some Index in 1..Stations.LIST_TRACKS.GET_SIZE(r_system.All_Tracks) =>
        -:   68:--
        -:   69:--                         Stations.LIST_TRACKS.GET_ELEMENT(r_system.All_Tracks,Index).Origin =Origin
        -:   70:--                 and Stations.LIST_TRACKS.GET_ELEMENT(r_system.All_Tracks,Index).Destination =Destination));
        -:   71:   procedure addStation(r_system: in out RailSystem; ID: in Natural; Location: TYPES.Station_Locations)
        -:   72:     with
      164:   73:       pre =>(ID >=1
      156:   74:              and ID <=100
      156:   75:              and (if ID /= 0 then LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, ID).ID = 0)
      156:   76:              and (
      158:   77:                      for all Index in 1 .. LIST_STATIONS.GET_SIZE(r_system.All_Stations)
      400:   78:                => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations,Index).ID /= ID )
        -:   79:
      156:   80:              and (
      158:   81:                      for all Index in 1 .. LIST_STATIONS.GET_SIZE(r_system.All_Stations)
      400:   82:                => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations,Index).Location /= Location )
        -:   83:             );
        -:   84:   --       post =>(if LIST_STATIONS.GET_SIZE(r_system'Old.All_Stations )< 100 and LIST_STATIONS.GET_SIZE(r_system'Old.All_Stations )>=0
        -:   85:   --                   then LIST_STATIONS.GET_SIZE(r_system'Old.All_Stations ) <= LIST_STATIONS.GET_SIZE(r_system.All_Stations)
        -:   86:   --                  );
        -:   87:
        -:   88:
        -:   89:   procedure go(r_system: in out RailSystem; train: in out Trains.Train; count: in Positive)
        -:   90:     with
        8:   91:       pre =>(train.ID /=0
        6:   92:              and train.Origin /= TYPES.No
        6:   93:              and train.Destination /= types.No
        6:   94:              and train.State = Open
        6:   95:              and (
        6:   96:                      if train.Location.currentLocation = "Station"
        6:   97:                and train.Location.Station.ID /=0 then
        8:   98:                  (for all Index in 1 .. Stations.LIST_TRACKS.GET_SIZE(LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing)
        -:   99:                   =>
       10:  100:                     (if Stations.LIST_TRACKS.GET_ELEMENT(RailSystems.LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing, Index).TracksLineDestination = train.Destination
       10:  101:                      and Stations.LIST_TRACKS.GET_ELEMENT(RailSystems.LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing, Index).Origin /=TYPES.No
       10:  102:                      and Stations.LIST_TRACKS.GET_ELEMENT(RailSystems.LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing, Index).Destination /=TYPES.No
        -:  103:                        then
       12:  104:                          RailSystems.getTrackByName(r_system,
        6:  105:                        Stations.LIST_TRACKS.GET_ELEMENT(RailSystems.LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing, Index).Origin,
       12:  106:                        Stations.LIST_TRACKS.GET_ELEMENT(RailSystems.LIST_STATIONS.GET_ELEMENT_BY_ID(r_system.All_Stations, train.Location.Station.ID).Outgoing, Index).Destination ).TrainID =0
        -:  107:                     )
        -:  108:                  )
        -:  109:               )
        6:  110:              and (
        -:  111:                      if train.Location.currentLocation = "Track "
        -:  112:                and train.Location.Track.Origin /= TYPES.No
        -:  113:                and train.Location.Track.Destination /= TYPES.No
        -:  114:                and train.Location.Track.ID /=0
        6:  115:                and RailSystems.getStationByName(r_system.All_Stations, train.Location.Track.Destination).Location /=TYPES.No
        -:  116:                  then
        -:  117:                    RailSystems.getStationByName(r_system.All_Stations, train.Location.Track.Destination).TrainID = 0
        -:  118:               )
        -:  119:             );
        -:  120:
        -:  121:   procedure prepareTrain(r_system: in out RailSystem; train: in out Trains.Train; Origin: in TYPES.Station_Locations; Destination: in TYPES.Station_Locations; StartTime: in TYPES.TimeTable)
        -:  122:     with
       30:  123:       pre =>(Origin /= TYPES.No
       20:  124:              and Destination /= TYPES.No
       20:  125:              and Origin /= Destination
       20:  126:              and train.Location.Station.TrainID = 0
       32:  127:              and (if Origin /=TYPES.No then (for some Index in 1.. TYPES.LIST_OD.GET_SIZE(RailSystems.getStationByName(r_system.All_Stations,Origin).TracksLineOriginAndDestination)
       24:  128:                =>(TYPES.LIST_OD.GET_ELEMENT(RailSystems.getStationByName(r_system.All_Stations,Origin).TracksLineOriginAndDestination, Index).Origin = Origin
       24:  129:                   or TYPES.LIST_OD.GET_ELEMENT(RailSystems.getStationByName(r_system.All_Stations,Origin).TracksLineOriginAndDestination, Index).Destination = Origin)
       48:  130:                and (TYPES.LIST_OD.GET_ELEMENT(RailSystems.getStationByName(r_system.All_Stations,Origin).TracksLineOriginAndDestination, Index).Origin = Destination
       24:  131:                  or TYPES.LIST_OD.GET_ELEMENT(RailSystems.getStationByName(r_system.All_Stations,Origin).TracksLineOriginAndDestination, Index).Destination = Destination)))),
       10:  132:     post => (train.Origin = Origin
       10:  133:              and train.Destination = Destination
       10:  134:              and train.State = TYPES.Open);
        -:  135:
        -:  136:
        -:  137:   --function
        -:  138:   function dfs_station_reachability_by_train(r_system: in RailSystem; train: in Trains.Train) return Boolean
        -:  139:     with
        -:  140:       pre =>(
        2:  141:                train.ID/=0
        2:  142:              and train.Origin /=TYPES.No
        2:  143:              and train.Destination /= TYPES.No
        2:  144:              and train.State /= types.Close
        2:  145:              and train.Origin /= train.Destination
        2:  146:              and RailSystems.LIST_TRAINS.GET_SIZE(A => r_system.All_Trains) >0
        2:  147:              and RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)>1
        4:  148:              and  (for some Index in 1 ..RailSystems.LIST_TRAINS.GET_SIZE(A => r_system.All_Trains)
        2:  149:                => LIST_TRAINS.GET_ELEMENT(r_system.All_Trains, Index).ID = train.ID)
        4:  150:              and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
        6:  151:                => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = train.Origin)
        4:  152:              and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
        4:  153:                => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = train.Destination)
        -:  154:             );
        -:  155:   --       post =>(
        -:  156:   --                 if dfs_station_reachability'Result =train.Destination then
        -:  157:   --                   (for some Index in 1 .. LIST_STATIONS.GET_SIZE(r_system.All_Stations)
        -:  158:   --                    => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations,Index).Location = dfs_station_reachability'Result )
        -:  159:--              );
        -:  160:--
        -:  161:   function dfs_station_reachability_by_stations(r_system: in RailSystem; from_station: in TYPES.Station_Locations; to_Station: in TYPES.Station_Locations) return Boolean
        -:  162:     with
        -:  163:       pre => (
        8:  164:                 from_station /=TYPES.No
        8:  165:               and to_Station /=TYPES.No
        8:  166:               and RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)>1
       16:  167:               and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
       12:  168:                 => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = from_station)
       16:  169:               and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
       18:  170:                 => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = to_Station)
        -:  171:              );
        -:  172:--         post => (
        -:  173:--                    if from_station /=TYPES.No
        -:  174:--                  and to_Station /=TYPES.No
        -:  175:--                  and RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)>1
        -:  176:--                  and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
        -:  177:--                    => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = from_station)
        -:  178:--                  and (for some Index in 1 ..RailSystems.LIST_STATIONS.GET_SIZE(A => r_system.All_Stations)
        -:  179:--                    => LIST_STATIONS.GET_ELEMENT(r_system.All_Stations, Index).Location = to_Station) then
        -:  180:--                    dfs_station_reachability_by_stations'Result = True
        -:  181:--                 )
        -:  182:--     ;
        -:  183:
        -:  184:   function getStationByName(stations_list: in RailSystems.LIST_STATIONS.List_PTR; stationLocation: in TYPES.Station_Locations) return Stations.Station;
        -:  185:
        -:  186:   function getTrackByName(r_system: in RailSystem; Origin: in TYPES.Station_Locations; Destination: in TYPES.Station_Locations) return Tracks.Track
        -:  187:     with
       46:  188:       pre => (Origin/= TYPES.No
       46:  189:               and Destination /= TYPES.No);
        -:  190:
        -:  191:   function getTrainById(r_system: in RailSystem; ID: in Natural) return Trains.Train
        -:  192:     with
       40:  193:       pre => (ID >=1
       36:  194:               and ID <= LIST_TRAINS.GET_SIZE(r_system.All_Trains));
        -:  195:    procedure replaceStation(r_system: in out RailSystem; station: in Stations.Station)
        -:  196:     with
      184:  197:       pre => station.ID /=0;
        -:  198:
        -:  199:   procedure replaceTrain(r_system: in out RailSystem; train: in Trains.Train)
        -:  200:     with
       46:  201:       pre => train.ID > 0;
        -:  202:
        -:  203:   procedure replaceTrack(r_system: in out RailSystem;track: in Tracks.Track)
        -:  204:     with
       36:  205:       pre => track.ID > 0;
        -:  206:
        -:  207:   procedure addIncomingOutgoingTracksForEachStation(r_system: in out RailSystem);
        2:  208:end RailSystems;
