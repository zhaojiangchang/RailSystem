(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__Tmax_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tmax_sizeB #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  ( -128 )
 
 function last #"types.ads" 3 0 0# 
   : int =
  127
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tmax_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tmax_sizeB__ref #"types.ads" 3 0 0# =
  { mutable tmax_sizeB__content "model_trace:" : tmax_sizeB }
 
 function tmax_sizeB__ref___projection #"types.ads" 3 0 0# 
   (a : tmax_sizeB__ref) : tmax_sizeB =
  a.tmax_sizeB__content
 
 meta "model_projection" function tmax_sizeB__ref___projection
 
 meta "inline : no" function tmax_sizeB__ref___projection
 
 val tmax_sizeB__havoc #"types.ads" 3 0 0# 
   (x : tmax_sizeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__max_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type max_size #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  0
 
 function last #"types.ads" 3 0 0# 
   : int =
  100
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = max_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type max_size__ref #"types.ads" 3 0 0# =
  { mutable max_size__content "model_trace:" : max_size }
 
 function max_size__ref___projection #"types.ads" 3 0 0# 
   (a : max_size__ref) : max_size =
  a.max_size__content
 
 meta "model_projection" function max_size__ref___projection
 
 meta "inline : no" function max_size__ref___projection
 
 val max_size__havoc #"types.ads" 3 0 0# 
   (x : max_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Types__train_state
 use import "_gnatprove_standard".Main
 use import "int".Int

 type train_state #"types.ads" 8 0 0# 
 
 function first #"types.ads" 8 0 0# 
   : int =
  0
 
 function last #"types.ads" 8 0 0# 
   : int =
  3
 
 predicate in_range #"types.ads" 8 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = train_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type train_state__ref #"types.ads" 8 0 0# =
  { mutable train_state__content "model_trace:" : train_state }
 
 function train_state__ref___projection #"types.ads" 8 0 0# 
   (a : train_state__ref) : train_state =
  a.train_state__content
 
 meta "model_projection" function train_state__ref___projection
 
 meta "inline : no" function train_state__ref___projection
 
 val train_state__havoc #"types.ads" 8 0 0# 
   (x : train_state__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Types__station_locations
 use import "_gnatprove_standard".Main
 use import "int".Int

 type station_locations #"types.ads" 11 0 0# 
 
 function first #"types.ads" 11 0 0# 
   : int =
  0
 
 function last #"types.ads" 11 0 0# 
   : int =
  8
 
 predicate in_range #"types.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = station_locations, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type station_locations__ref #"types.ads" 11 0 0# =
  { mutable station_locations__content "model_trace:" : station_locations }
 
 function station_locations__ref___projection #"types.ads" 11 0 0# 
   (a : station_locations__ref) : station_locations =
  a.station_locations__content
 
 meta "model_projection" function station_locations__ref___projection
 
 meta "inline : no" function station_locations__ref___projection
 
 val station_locations__havoc #"types.ads" 11 0 0# 
   (x : station_locations__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Types__timetable
 use import "_gnatprove_standard".Main
 use import "int".Int

 type timetable #"types.ads" 14 0 0# 
 
 function first #"types.ads" 14 0 0# 
   : int =
  0
 
 function last #"types.ads" 14 0 0# 
   : int =
  14
 
 predicate in_range #"types.ads" 14 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = timetable, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type timetable__ref #"types.ads" 14 0 0# =
  { mutable timetable__content "model_trace:" : timetable }
 
 function timetable__ref___projection #"types.ads" 14 0 0# 
   (a : timetable__ref) : timetable =
  a.timetable__content
 
 meta "model_projection" function timetable__ref___projection
 
 meta "inline : no" function timetable__ref___projection
 
 val timetable__havoc #"types.ads" 14 0 0# 
   (x : timetable__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Types__odrecord
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 type __split_fields #"types.ads" 14 0 0# =
  { rec__origin "model_trace:.5005" : Types__station_locations.station_locations; rec__destination "model_trace:.5016" : Types__station_locations.station_locations }
 
 function __split_fields_Origin__projection #"types.ads" 11 0 0# "model_trace:.5005" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin__projection
 
 meta "inline : no" function __split_fields_Origin__projection
 
 function __split_fields_Destination__projection #"types.ads" 16 0 0# "model_trace:.5016" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination__projection
 
 meta "inline : no" function __split_fields_Destination__projection
 
 type __split_fields__ref #"types.ads" 16 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"types.ads" 16 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"types.ads" 16 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type odrecord #"types.ads" 16 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function odrecord___projection #"types.ads" 16 0 0# 
   (a : odrecord) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function odrecord___projection
 
 meta "inline : no" function odrecord___projection
 
 predicate origin__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__origin_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__destination_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 function bool_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool =
  (if (( ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) )) then (
   True) else (
   False))
 
 function user_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool
 
 function value__size #"types.ads" 16 0 0# 
   : int
 
 function object__size #"types.ads" 16 0 0# 
   (a : odrecord) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : odrecord.
   ((object__size a) >= 0))
 
 function dummy #"types.ads" 16 0 0# 
   : odrecord
 
 type odrecord__ref #"types.ads" 16 0 0# =
  { mutable odrecord__content "model_trace:" : odrecord }
 
 function odrecord__ref___projection #"types.ads" 16 0 0# 
   (a : odrecord__ref) : odrecord =
  a.odrecord__content
 
 meta "model_projection" function odrecord__ref___projection
 
 meta "inline : no" function odrecord__ref___projection
 
 val odrecord__havoc #"types.ads" 16 0 0# 
   (x : odrecord__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data_type
 use export Types__odrecord
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  odrecord
 
 function to_base #"types.ads" 16 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref___projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref___projection
 
 meta "inline : no" function data_type__ref___projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:7058" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__no_found
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:7067" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__list_od__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.6930" : Types__list_od__data_type.data_type; rec__id "model_trace:.6940" : Standard__natural.natural }
 
 function __split_fields_DATA__projection #"system.ads" 1 0 0# "model_trace:.6930" 
   (a : __split_fields) : Types__list_od__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA__projection
 
 meta "inline : no" function __split_fields_DATA__projection
 
 function __split_fields_ID__projection #"list.ads" 90 0 0# "model_trace:.6940" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID__projection
 
 meta "inline : no" function __split_fields_ID__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data___projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data___projection
 
 meta "inline : no" function data___projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Types__list_od__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Types__list_od__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref___projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref___projection
 
 meta "inline : no" function data__ref___projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Types__list_od__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"list.ads" 90 0 0# =
  Types__list_od__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref___projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref___projection
 
 meta "inline : no" function list_array__ref___projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref___projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref___projection
 
 meta "inline : no" function t3s__ref___projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Types__list_od__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Types__list_od__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref___projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref___projection
 
 meta "inline : no" function t4s__ref___projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.6607" : Standard__positive.positive }
 
 function __split_discrs___projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs___projection
 
 meta "inline : no" function __split_discrs___projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref___projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___projection
 
 meta "inline : no" function __split_discrs__ref___projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.6974" : Standard__natural.natural; rec__elements "model_trace:.6985" : Types__list_od__list_ptr__T4s.t4s; rec__head "model_trace:.7000" : Standard__positive.positive }
 
 function __split_fields_SIZE__projection #"system.ads" 1 0 0# "model_trace:.6974" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE__projection
 
 meta "inline : no" function __split_fields_SIZE__projection
 
 function __split_fields_ELEMENTS__projection #"list.ads" 99 0 0# "model_trace:.6985" 
   (a : __split_fields) : Types__list_od__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS__projection
 
 meta "inline : no" function __split_fields_ELEMENTS__projection
 
 function __split_fields_HEAD__projection #"list.ads" 99 0 0# "model_trace:.7000" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD__projection
 
 meta "inline : no" function __split_fields_HEAD__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr___projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr___projection
 
 meta "inline : no" function list_ptr___projection
 
 function list_ptr_2__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_2__projection
 
 meta "inline : no" function list_ptr_2__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Types__list_od__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Types__list_od__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref___projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref___projection
 
 meta "inline : no" function list_ptr__ref___projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 46 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:6634" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__contains
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_first__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 48 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_first
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_last__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 51 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_last
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_size__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 54 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_size
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 57 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:6719" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 60 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:6747" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__full__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 62 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__full
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:6794" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:6803" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:6848" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Types__list_od__data

 function newvalue #"list.ads" 78 0 0# 
   : Types__list_od__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:6884" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:6893" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Tracks__track
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations

 type __split_fields #"list.ads" 21 0 0# =
  { rec__id "model_trace:.5572" : Standard__natural.natural; rec__origin "model_trace:.5583" : Types__station_locations.station_locations; rec__destination "model_trace:.5598" : Types__station_locations.station_locations; rec__trainid "model_trace:.5613" : Standard__natural.natural; rec__trackslineorigin "model_trace:.5624" : Types__station_locations.station_locations; rec__trackslinedestination "model_trace:.5639" : Types__station_locations.station_locations }
 
 function __split_fields_ID2__projection #"types.ads" 11 0 0# "model_trace:.5572" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID2__projection
 
 meta "inline : no" function __split_fields_ID2__projection
 
 function __split_fields_Origin2__projection #"tracks.ads" 7 0 0# "model_trace:.5583" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin2__projection
 
 meta "inline : no" function __split_fields_Origin2__projection
 
 function __split_fields_Destination2__projection #"tracks.ads" 7 0 0# "model_trace:.5598" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination2__projection
 
 meta "inline : no" function __split_fields_Destination2__projection
 
 function __split_fields_TrainID__projection #"tracks.ads" 7 0 0# "model_trace:.5613" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID__projection
 
 meta "inline : no" function __split_fields_TrainID__projection
 
 function __split_fields_TracksLineOrigin__projection #"tracks.ads" 7 0 0# "model_trace:.5624" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslineorigin
 
 meta "model_projection" function __split_fields_TracksLineOrigin__projection
 
 meta "inline : no" function __split_fields_TracksLineOrigin__projection
 
 function __split_fields_TracksLineDestination__projection #"tracks.ads" 7 0 0# "model_trace:.5639" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslinedestination
 
 meta "model_projection" function __split_fields_TracksLineDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineDestination__projection
 
 type __split_fields__ref #"tracks.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"tracks.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"tracks.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type track #"tracks.ads" 7 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function track___projection #"tracks.ads" 7 0 0# 
   (a : track) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function track___projection
 
 meta "inline : no" function track___projection
 
 predicate id__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__id_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate origin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__origin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__destination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate trainid__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trainid_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate trackslineorigin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslineorigin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslineorigin__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineorigin) }
 
 predicate trackslinedestination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslinedestination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslinedestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslinedestination) }
 
 function bool_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslineorigin) = (Types__station_locations.to_rep b.__split_fields.rec__trackslineorigin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslinedestination) = (Types__station_locations.to_rep b.__split_fields.rec__trackslinedestination)) )) then (
   True) else (
   False))
 
 function user_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool
 
 function value__size #"tracks.ads" 7 0 0# 
   : int
 
 function object__size #"tracks.ads" 7 0 0# 
   (a : track) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : track.
   ((object__size a) >= 0))
 
 function dummy #"tracks.ads" 7 0 0# 
   : track
 
 type track__ref #"tracks.ads" 7 0 0# =
  { mutable track__content "model_trace:" : track }
 
 function track__ref___projection #"tracks.ads" 7 0 0# 
   (a : track__ref) : track =
  a.track__content
 
 meta "model_projection" function track__ref___projection
 
 meta "inline : no" function track__ref___projection
 
 val track__havoc #"tracks.ads" 7 0 0# 
   (x : track__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data_type
 use export Tracks__track
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  track
 
 function to_base #"tracks.ads" 7 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_2__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_2__projection
 
 meta "inline : no" function data_type__ref_2__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:7679" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__no_found
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:7688" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.7551" : Stations__list_tracks__data_type.data_type; rec__id "model_trace:.7561" : Standard__natural.natural }
 
 function __split_fields_DATA2__projection #"system.ads" 1 0 0# "model_trace:.7551" 
   (a : __split_fields) : Stations__list_tracks__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA2__projection
 
 meta "inline : no" function __split_fields_DATA2__projection
 
 function __split_fields_ID3__projection #"list.ads" 90 0 0# "model_trace:.7561" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID3__projection
 
 meta "inline : no" function __split_fields_ID3__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_2__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_2__projection
 
 meta "inline : no" function data_2__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Stations__list_tracks__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Stations__list_tracks__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_2__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_2__projection
 
 meta "inline : no" function data__ref_2__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Stations__list_tracks__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"list.ads" 90 0 0# =
  Stations__list_tracks__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_2__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_2__projection
 
 meta "inline : no" function list_array__ref_2__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_2__projection
 
 meta "inline : no" function t3s__ref_2__projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Stations__list_tracks__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Stations__list_tracks__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_2__projection
 
 meta "inline : no" function t4s__ref_2__projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.7228" : Standard__positive.positive }
 
 function __split_discrs_2__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_2__projection
 
 meta "inline : no" function __split_discrs_2__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_2__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_2__projection
 
 meta "inline : no" function __split_discrs__ref_2__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.7595" : Standard__natural.natural; rec__elements "model_trace:.7606" : Stations__list_tracks__list_ptr__T4s.t4s; rec__head "model_trace:.7621" : Standard__positive.positive }
 
 function __split_fields_SIZE2__projection #"system.ads" 1 0 0# "model_trace:.7595" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE2__projection
 
 meta "inline : no" function __split_fields_SIZE2__projection
 
 function __split_fields_ELEMENTS2__projection #"list.ads" 99 0 0# "model_trace:.7606" 
   (a : __split_fields) : Stations__list_tracks__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS2__projection
 
 meta "inline : no" function __split_fields_ELEMENTS2__projection
 
 function __split_fields_HEAD2__projection #"list.ads" 99 0 0# "model_trace:.7621" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD2__projection
 
 meta "inline : no" function __split_fields_HEAD2__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_3__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_3__projection
 
 meta "inline : no" function list_ptr_3__projection
 
 function list_ptr_4__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_4__projection
 
 meta "inline : no" function list_ptr_4__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Stations__list_tracks__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__list_tracks__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_2__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_2__projection
 
 meta "inline : no" function list_ptr__ref_2__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 46 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:7255" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__contains
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_first__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 48 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_first
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_last__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 51 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_last
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_size__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 54 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_size
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 57 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:7340" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 60 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:7368" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__full__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 62 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__full
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:7415" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:7424" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:7469" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data

 function newvalue #"list.ads" 78 0 0# 
   : Stations__list_tracks__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:7505" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:7514" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TT5sP1" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS__TT5sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT5sP1 #"stations.ads" 14 0 0# 
 
 function first #"stations.ads" 14 0 0# 
   : int =
  1
 
 function last #"stations.ads" 14 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 14 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT5sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT5sP1__ref #"stations.ads" 14 0 0# =
  { mutable tT5sP1__content "model_trace:" : tT5sP1 }
 
 function tT5sP1__ref___projection #"stations.ads" 14 0 0# 
   (a : tT5sP1__ref) : tT5sP1 =
  a.tT5sP1__content
 
 meta "model_projection" function tT5sP1__ref___projection
 
 meta "inline : no" function tT5sP1__ref___projection
 
 val tT5sP1__havoc #"stations.ads" 14 0 0# 
   (x : tT5sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 14 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TintracksS" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__TintracksS__TT5sP1
 use        Stations__TintracksS__T5s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.7786" : Standard__natural.natural; rec__elements "model_trace:.7793" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.7821" : Standard__positive.positive }
 
 function __split_fields_SIZE3__projection #"system.ads" 1 0 0# "model_trace:.7786" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE3__projection
 
 meta "inline : no" function __split_fields_SIZE3__projection
 
 function __split_fields_ELEMENTS3__projection #"stations.ads" 14 0 0# "model_trace:.7793" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS3__projection
 
 meta "inline : no" function __split_fields_ELEMENTS3__projection
 
 function __split_fields_HEAD3__projection #"stations.ads" 14 0 0# "model_trace:.7821" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD3__projection
 
 meta "inline : no" function __split_fields_HEAD3__projection
 
 type __split_fields__ref #"stations.ads" 14 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"stations.ads" 14 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"stations.ads" 14 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type tintracksS #"stations.ads" 14 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function tintracksS___projection #"stations.ads" 14 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function tintracksS___projection
 
 meta "inline : no" function tintracksS___projection
 
 function tintracksS_2__projection #"stations.ads" 14 0 0# 
   (a : tintracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function tintracksS_2__projection
 
 meta "inline : no" function tintracksS_2__projection
 
 function to_base #"stations.ads" 14 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__TintracksS__TT5sP1.first Stations__TintracksS__TT5sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 14 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : tintracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___141 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___141)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__size_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 14 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__elements_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 14 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__head_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 14 0 0# 
   (a : tintracksS) (b : tintracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__TintracksS__T5s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 14 0 0# 
   (a : tintracksS) (b : tintracksS) : bool
 
 function value__size #"stations.ads" 14 0 0# 
   : int
 
 function object__size #"stations.ads" 14 0 0# 
   (a : tintracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : tintracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 14 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 14 0 0# 
   : tintracksS
 
 type tintracksS__ref #"stations.ads" 14 0 0# =
  { mutable tintracksS__content "model_trace:" : tintracksS }
 
 function tintracksS__ref___projection #"stations.ads" 14 0 0# 
   (a : tintracksS__ref) : tintracksS =
  a.tintracksS__content
 
 meta "model_projection" function tintracksS__ref___projection
 
 meta "inline : no" function tintracksS__ref___projection
 
 val tintracksS__havoc #"stations.ads" 14 0 0# 
   (x : tintracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT6sP1" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS__TT6sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT6sP1 #"stations.ads" 15 0 0# 
 
 function first #"stations.ads" 15 0 0# 
   : int =
  1
 
 function last #"stations.ads" 15 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 15 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT6sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT6sP1__ref #"stations.ads" 15 0 0# =
  { mutable tT6sP1__content "model_trace:" : tT6sP1 }
 
 function tT6sP1__ref___projection #"stations.ads" 15 0 0# 
   (a : tT6sP1__ref) : tT6sP1 =
  a.tT6sP1__content
 
 meta "model_projection" function tT6sP1__ref___projection
 
 meta "inline : no" function tT6sP1__ref___projection
 
 val tT6sP1__havoc #"stations.ads" 15 0 0# 
   (x : tT6sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6s" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 15 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TouttracksS" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__TouttracksS__TT6sP1
 use        Stations__TouttracksS__T6s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.7851" : Standard__natural.natural; rec__elements "model_trace:.7858" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.7886" : Standard__positive.positive }
 
 function __split_fields_SIZE4__projection #"system.ads" 1 0 0# "model_trace:.7851" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE4__projection
 
 meta "inline : no" function __split_fields_SIZE4__projection
 
 function __split_fields_ELEMENTS4__projection #"stations.ads" 15 0 0# "model_trace:.7858" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS4__projection
 
 meta "inline : no" function __split_fields_ELEMENTS4__projection
 
 function __split_fields_HEAD4__projection #"stations.ads" 15 0 0# "model_trace:.7886" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD4__projection
 
 meta "inline : no" function __split_fields_HEAD4__projection
 
 type __split_fields__ref #"stations.ads" 15 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"stations.ads" 15 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"stations.ads" 15 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type touttracksS #"stations.ads" 15 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function touttracksS___projection #"stations.ads" 15 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function touttracksS___projection
 
 meta "inline : no" function touttracksS___projection
 
 function touttracksS_2__projection #"stations.ads" 15 0 0# 
   (a : touttracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function touttracksS_2__projection
 
 meta "inline : no" function touttracksS_2__projection
 
 function to_base #"stations.ads" 15 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__TouttracksS__TT6sP1.first Stations__TouttracksS__TT6sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 15 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : touttracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___142 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___142)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__size_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 15 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__elements_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 15 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__head_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 15 0 0# 
   (a : touttracksS) (b : touttracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__TouttracksS__T6s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 15 0 0# 
   (a : touttracksS) (b : touttracksS) : bool
 
 function value__size #"stations.ads" 15 0 0# 
   : int
 
 function object__size #"stations.ads" 15 0 0# 
   (a : touttracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : touttracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 15 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 15 0 0# 
   : touttracksS
 
 type touttracksS__ref #"stations.ads" 15 0 0# =
  { mutable touttracksS__content "model_trace:" : touttracksS }
 
 function touttracksS__ref___projection #"stations.ads" 15 0 0# 
   (a : touttracksS__ref) : touttracksS =
  a.touttracksS__content
 
 meta "model_projection" function touttracksS__ref___projection
 
 meta "inline : no" function touttracksS__ref___projection
 
 val touttracksS__havoc #"stations.ads" 15 0 0# 
   (x : touttracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT8sP1" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s__TT8sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT8sP1 #"stations.ads" 22 0 0# 
 
 function first #"stations.ads" 22 0 0# 
   : int =
  1
 
 function last #"stations.ads" 22 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 22 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT8sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT8sP1__ref #"stations.ads" 22 0 0# =
  { mutable tT8sP1__content "model_trace:" : tT8sP1 }
 
 function tT8sP1__ref___projection #"stations.ads" 22 0 0# 
   (a : tT8sP1__ref) : tT8sP1 =
  a.tT8sP1__content
 
 meta "model_projection" function tT8sP1__ref___projection
 
 meta "inline : no" function tT8sP1__ref___projection
 
 val tT8sP1__havoc #"stations.ads" 22 0 0# 
   (x : tT8sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 22 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s__T8s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.7914" : Standard__natural.natural; rec__elements "model_trace:.7921" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.7949" : Standard__positive.positive }
 
 function __split_fields_SIZE5__projection #"system.ads" 1 0 0# "model_trace:.7914" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE5__projection
 
 meta "inline : no" function __split_fields_SIZE5__projection
 
 function __split_fields_ELEMENTS5__projection #"stations.ads" 22 0 0# "model_trace:.7921" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS5__projection
 
 meta "inline : no" function __split_fields_ELEMENTS5__projection
 
 function __split_fields_HEAD5__projection #"stations.ads" 22 0 0# "model_trace:.7949" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD5__projection
 
 meta "inline : no" function __split_fields_HEAD5__projection
 
 type __split_fields__ref #"stations.ads" 22 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"stations.ads" 22 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"stations.ads" 22 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t7s #"stations.ads" 22 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t7s___projection #"stations.ads" 22 0 0# 
   (a : t7s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t7s___projection
 
 meta "inline : no" function t7s___projection
 
 function t7s_2__projection #"stations.ads" 22 0 0# 
   (a : t7s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t7s_2__projection
 
 meta "inline : no" function t7s_2__projection
 
 function to_base #"stations.ads" 22 0 0# 
   (a : t7s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T7s__TT8sP1.first Stations__station__T7s__TT8sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 22 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t7s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___143 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___143)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t7s)  =
  true
 
 val rec__size_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 22 0 0# 
   (a : t7s)  =
  true
 
 val rec__elements_ #"stations.ads" 22 0 0# 
   (a : t7s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 22 0 0# 
   (a : t7s)  =
  true
 
 val rec__head_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 22 0 0# 
   (a : t7s) (b : t7s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T7s__T8s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 22 0 0# 
   (a : t7s) (b : t7s) : bool
 
 function value__size #"stations.ads" 22 0 0# 
   : int
 
 function object__size #"stations.ads" 22 0 0# 
   (a : t7s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t7s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 22 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 22 0 0# 
   : t7s
 
 type t7s__ref #"stations.ads" 22 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"stations.ads" 22 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"stations.ads" 22 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT10sP1" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s__TT10sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT10sP1 #"stations.ads" 23 0 0# 
 
 function first #"stations.ads" 23 0 0# 
   : int =
  1
 
 function last #"stations.ads" 23 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 23 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT10sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT10sP1__ref #"stations.ads" 23 0 0# =
  { mutable tT10sP1__content "model_trace:" : tT10sP1 }
 
 function tT10sP1__ref___projection #"stations.ads" 23 0 0# 
   (a : tT10sP1__ref) : tT10sP1 =
  a.tT10sP1__content
 
 meta "model_projection" function tT10sP1__ref___projection
 
 meta "inline : no" function tT10sP1__ref___projection
 
 val tT10sP1__havoc #"stations.ads" 23 0 0# 
   (x : tT10sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 23 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9s" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s__T10s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.7977" : Standard__natural.natural; rec__elements "model_trace:.7984" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.8012" : Standard__positive.positive }
 
 function __split_fields_SIZE6__projection #"system.ads" 1 0 0# "model_trace:.7977" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE6__projection
 
 meta "inline : no" function __split_fields_SIZE6__projection
 
 function __split_fields_ELEMENTS6__projection #"stations.ads" 23 0 0# "model_trace:.7984" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS6__projection
 
 meta "inline : no" function __split_fields_ELEMENTS6__projection
 
 function __split_fields_HEAD6__projection #"stations.ads" 23 0 0# "model_trace:.8012" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD6__projection
 
 meta "inline : no" function __split_fields_HEAD6__projection
 
 type __split_fields__ref #"stations.ads" 23 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_10__projection #"stations.ads" 23 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_10__projection
 
 meta "inline : no" function __split_fields__ref_10__projection
 
 val __split_fields__havoc #"stations.ads" 23 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t9s #"stations.ads" 23 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t9s___projection #"stations.ads" 23 0 0# 
   (a : t9s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t9s___projection
 
 meta "inline : no" function t9s___projection
 
 function t9s_2__projection #"stations.ads" 23 0 0# 
   (a : t9s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t9s_2__projection
 
 meta "inline : no" function t9s_2__projection
 
 function to_base #"stations.ads" 23 0 0# 
   (a : t9s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T9s__TT10sP1.first Stations__station__T9s__TT10sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 23 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t9s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___144 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___144)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t9s)  =
  true
 
 val rec__size_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 23 0 0# 
   (a : t9s)  =
  true
 
 val rec__elements_ #"stations.ads" 23 0 0# 
   (a : t9s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 23 0 0# 
   (a : t9s)  =
  true
 
 val rec__head_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 23 0 0# 
   (a : t9s) (b : t9s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T9s__T10s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 23 0 0# 
   (a : t9s) (b : t9s) : bool
 
 function value__size #"stations.ads" 23 0 0# 
   : int
 
 function object__size #"stations.ads" 23 0 0# 
   (a : t9s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t9s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 23 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 23 0 0# 
   : t9s
 
 type t9s__ref #"stations.ads" 23 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"stations.ads" 23 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"stations.ads" 23 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT12sP1" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s__TT12sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT12sP1 #"stations.ads" 24 0 0# 
 
 function first #"stations.ads" 24 0 0# 
   : int =
  1
 
 function last #"stations.ads" 24 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 24 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT12sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT12sP1__ref #"stations.ads" 24 0 0# =
  { mutable tT12sP1__content "model_trace:" : tT12sP1 }
 
 function tT12sP1__ref___projection #"stations.ads" 24 0 0# 
   (a : tT12sP1__ref) : tT12sP1 =
  a.tT12sP1__content
 
 meta "model_projection" function tT12sP1__ref___projection
 
 meta "inline : no" function tT12sP1__ref___projection
 
 val tT12sP1__havoc #"stations.ads" 24 0 0# 
   (x : tT12sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"stations.ads" 24 0 0# =
  Types__list_od__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s__T12s
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.8040" : Standard__natural.natural; rec__elements "model_trace:.8047" : Array__Int__Types__list_od__data.map; rec__head "model_trace:.8075" : Standard__positive.positive }
 
 function __split_fields_SIZE7__projection #"system.ads" 1 0 0# "model_trace:.8040" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE7__projection
 
 meta "inline : no" function __split_fields_SIZE7__projection
 
 function __split_fields_ELEMENTS7__projection #"stations.ads" 24 0 0# "model_trace:.8047" 
   (a : __split_fields) : Array__Int__Types__list_od__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS7__projection
 
 meta "inline : no" function __split_fields_ELEMENTS7__projection
 
 function __split_fields_HEAD7__projection #"stations.ads" 24 0 0# "model_trace:.8075" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD7__projection
 
 meta "inline : no" function __split_fields_HEAD7__projection
 
 type __split_fields__ref #"stations.ads" 24 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_11__projection #"stations.ads" 24 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_11__projection
 
 meta "inline : no" function __split_fields__ref_11__projection
 
 val __split_fields__havoc #"stations.ads" 24 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t11s #"stations.ads" 24 0 0# =
  { __split_discrs "model_trace:" : Types__list_od__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t11s___projection #"stations.ads" 24 0 0# 
   (a : t11s) : Types__list_od__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t11s___projection
 
 meta "inline : no" function t11s___projection
 
 function t11s_2__projection #"stations.ads" 24 0 0# 
   (a : t11s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t11s_2__projection
 
 meta "inline : no" function t11s_2__projection
 
 function to_base #"stations.ads" 24 0 0# 
   (a : t11s) : Types__list_od__list_ptr.list_ptr =
  { Types__list_od__list_ptr.__split_discrs = a.__split_discrs; Types__list_od__list_ptr.__split_fields = { Types__list_od__list_ptr.rec__size = a.__split_fields.rec__size; Types__list_od__list_ptr.rec__elements = (Types__list_od__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T11s__TT12sP1.first Stations__station__T11s__TT12sP1.last); Types__list_od__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 24 0 0# 
   (r : Types__list_od__list_ptr.list_ptr) : t11s =
  { __split_discrs = r.Types__list_od__list_ptr.__split_discrs; __split_fields = { rec__size = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__size; rec__elements = (let temp___145 = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__elements in (
   (Types__list_od__list_ptr__T4s.to_array temp___145)))
  ; rec__head = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Types__list_od__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t11s)  =
  true
 
 val rec__size_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 24 0 0# 
   (a : t11s)  =
  true
 
 val rec__elements_ #"stations.ads" 24 0 0# 
   (a : t11s) : Array__Int__Types__list_od__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 24 0 0# 
   (a : t11s)  =
  true
 
 val rec__head_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 24 0 0# 
   (a : t11s) (b : t11s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Types__list_od__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Types__list_od__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T11s__T12s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 24 0 0# 
   (a : t11s) (b : t11s) : bool
 
 function value__size #"stations.ads" 24 0 0# 
   : int
 
 function object__size #"stations.ads" 24 0 0# 
   (a : t11s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t11s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 24 0 0# 
   (rec__max_size : int) (a : Types__list_od__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size a.Types__list_od__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 24 0 0# 
   : t11s
 
 type t11s__ref #"stations.ads" 24 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref___projection #"stations.ads" 24 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref___projection
 
 meta "inline : no" function t11s__ref___projection
 
 val t11s__havoc #"stations.ads" 24 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "station" defined at stations.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Stations__station
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s

 type __split_fields #"stations.ads" 24 0 0# =
  { rec__id "model_trace:.5757" : Standard__natural.natural; rec__location "model_trace:.5768" : Types__station_locations.station_locations; rec__trainid "model_trace:.5783" : Standard__natural.natural; rec__incoming "model_trace:.5794" : Stations__station__T7s.t7s; rec__outgoing "model_trace:.5811" : Stations__station__T9s.t9s; rec__trackslineoriginanddestination "model_trace:.5828" : Stations__station__T11s.t11s }
 
 function __split_fields_ID4__projection #"stations.ads" 24 0 0# "model_trace:.5757" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID4__projection
 
 meta "inline : no" function __split_fields_ID4__projection
 
 function __split_fields_Location__projection #"stations.ads" 17 0 0# "model_trace:.5768" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location__projection
 
 meta "inline : no" function __split_fields_Location__projection
 
 function __split_fields_TrainID2__projection #"stations.ads" 17 0 0# "model_trace:.5783" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID2__projection
 
 meta "inline : no" function __split_fields_TrainID2__projection
 
 function __split_fields_Incoming__projection #"stations.ads" 17 0 0# "model_trace:.5794" 
   (a : __split_fields) : Stations__station__T7s.t7s =
  a.rec__incoming
 
 meta "model_projection" function __split_fields_Incoming__projection
 
 meta "inline : no" function __split_fields_Incoming__projection
 
 function __split_fields_Outgoing__projection #"stations.ads" 17 0 0# "model_trace:.5811" 
   (a : __split_fields) : Stations__station__T9s.t9s =
  a.rec__outgoing
 
 meta "model_projection" function __split_fields_Outgoing__projection
 
 meta "inline : no" function __split_fields_Outgoing__projection
 
 function __split_fields_TracksLineOriginAndDestination__projection #"stations.ads" 17 0 0# "model_trace:.5828" 
   (a : __split_fields) : Stations__station__T11s.t11s =
  a.rec__trackslineoriginanddestination
 
 meta "model_projection" function __split_fields_TracksLineOriginAndDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineOriginAndDestination__projection
 
 type __split_fields__ref #"stations.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_12__projection #"stations.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_12__projection
 
 meta "inline : no" function __split_fields__ref_12__projection
 
 val __split_fields__havoc #"stations.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type station #"stations.ads" 17 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function station___projection #"stations.ads" 17 0 0# 
   (a : station) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function station___projection
 
 meta "inline : no" function station___projection
 
 predicate id__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__id_ #"stations.ads" 17 0 0# 
   (a : station) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__location_ #"stations.ads" 17 0 0# 
   (a : station) : Types__station_locations.station_locations
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate trainid__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__trainid_ #"stations.ads" 17 0 0# 
   (a : station) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate incoming__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__incoming_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T7s.t7s
  requires { (incoming__pred a) }
  ensures { (result = a.__split_fields.rec__incoming) }
 
 predicate outgoing__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__outgoing_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T9s.t9s
  requires { (outgoing__pred a) }
  ensures { (result = a.__split_fields.rec__outgoing) }
 
 predicate trackslineoriginanddestination__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__trackslineoriginanddestination_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T11s.t11s
  requires { (trackslineoriginanddestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineoriginanddestination) }
 
 function bool_eq #"stations.ads" 17 0 0# 
   (a : station) (b : station) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__location) = (Types__station_locations.to_rep b.__split_fields.rec__location)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Stations__station__T7s.bool_eq a.__split_fields.rec__incoming b.__split_fields.rec__incoming) = True) ) /\ ((Stations__station__T9s.bool_eq a.__split_fields.rec__outgoing b.__split_fields.rec__outgoing) = True) ) /\ ((Stations__station__T11s.bool_eq a.__split_fields.rec__trackslineoriginanddestination b.__split_fields.rec__trackslineoriginanddestination) = True) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 17 0 0# 
   (a : station) (b : station) : bool
 
 function value__size #"stations.ads" 17 0 0# 
   : int
 
 function object__size #"stations.ads" 17 0 0# 
   (a : station) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : station.
   ((object__size a) >= 0))
 
 function dummy #"stations.ads" 17 0 0# 
   : station
 
 type station__ref #"stations.ads" 17 0 0# =
  { mutable station__content "model_trace:" : station }
 
 function station__ref___projection #"stations.ads" 17 0 0# 
   (a : station__ref) : station =
  a.station__content
 
 meta "model_projection" function station__ref___projection
 
 meta "inline : no" function station__ref___projection
 
 val station__havoc #"stations.ads" 17 0 0# 
   (x : station__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT1sP1" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS__TT1sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT1sP1 #"trains.ads" 7 0 0# 
 
 function first #"trains.ads" 7 0 0# 
   : int =
  1
 
 function last #"trains.ads" 7 0 0# 
   : int =
  100
 
 predicate in_range #"trains.ads" 7 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT1sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT1sP1__ref #"trains.ads" 7 0 0# =
  { mutable tT1sP1__content "model_trace:" : tT1sP1 }
 
 function tT1sP1__ref___projection #"trains.ads" 7 0 0# 
   (a : tT1sP1__ref) : tT1sP1 =
  a.tT1sP1__content
 
 meta "model_projection" function tT1sP1__ref___projection
 
 meta "inline : no" function tT1sP1__ref___projection
 
 val tT1sP1__havoc #"trains.ads" 7 0 0# 
   (x : tT1sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"trains.ads" 7 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TintracksS" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Trains__TintracksS__TT1sP1
 use        Trains__TintracksS__T1s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.8122" : Standard__natural.natural; rec__elements "model_trace:.8129" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.8157" : Standard__positive.positive }
 
 function __split_fields_SIZE8__projection #"system.ads" 1 0 0# "model_trace:.8122" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE8__projection
 
 meta "inline : no" function __split_fields_SIZE8__projection
 
 function __split_fields_ELEMENTS8__projection #"trains.ads" 7 0 0# "model_trace:.8129" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS8__projection
 
 meta "inline : no" function __split_fields_ELEMENTS8__projection
 
 function __split_fields_HEAD8__projection #"trains.ads" 7 0 0# "model_trace:.8157" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD8__projection
 
 meta "inline : no" function __split_fields_HEAD8__projection
 
 type __split_fields__ref #"trains.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_13__projection #"trains.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_13__projection
 
 meta "inline : no" function __split_fields__ref_13__projection
 
 val __split_fields__havoc #"trains.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type tintracksS #"trains.ads" 7 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function tintracksS_3__projection #"trains.ads" 7 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function tintracksS_3__projection
 
 meta "inline : no" function tintracksS_3__projection
 
 function tintracksS_4__projection #"trains.ads" 7 0 0# 
   (a : tintracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function tintracksS_4__projection
 
 meta "inline : no" function tintracksS_4__projection
 
 function to_base #"trains.ads" 7 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Trains__TintracksS__TT1sP1.first Trains__TintracksS__TT1sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"trains.ads" 7 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : tintracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___146 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___146)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__size_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"trains.ads" 7 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__elements_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"trains.ads" 7 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__head_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"trains.ads" 7 0 0# 
   (a : tintracksS) (b : tintracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Trains__TintracksS__T1s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 7 0 0# 
   (a : tintracksS) (b : tintracksS) : bool
 
 function value__size #"trains.ads" 7 0 0# 
   : int
 
 function object__size #"trains.ads" 7 0 0# 
   (a : tintracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : tintracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"trains.ads" 7 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"trains.ads" 7 0 0# 
   : tintracksS
 
 type tintracksS__ref #"trains.ads" 7 0 0# =
  { mutable tintracksS__content "model_trace:" : tintracksS }
 
 function tintracksS__ref_2__projection #"trains.ads" 7 0 0# 
   (a : tintracksS__ref) : tintracksS =
  a.tintracksS__content
 
 meta "model_projection" function tintracksS__ref_2__projection
 
 meta "inline : no" function tintracksS__ref_2__projection
 
 val tintracksS__havoc #"trains.ads" 7 0 0# 
   (x : tintracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT2sP1" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS__TT2sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT2sP1 #"trains.ads" 8 0 0# 
 
 function first #"trains.ads" 8 0 0# 
   : int =
  1
 
 function last #"trains.ads" 8 0 0# 
   : int =
  100
 
 predicate in_range #"trains.ads" 8 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT2sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT2sP1__ref #"trains.ads" 8 0 0# =
  { mutable tT2sP1__content "model_trace:" : tT2sP1 }
 
 function tT2sP1__ref___projection #"trains.ads" 8 0 0# 
   (a : tT2sP1__ref) : tT2sP1 =
  a.tT2sP1__content
 
 meta "model_projection" function tT2sP1__ref___projection
 
 meta "inline : no" function tT2sP1__ref___projection
 
 val tT2sP1__havoc #"trains.ads" 8 0 0# 
   (x : tT2sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T2s" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"trains.ads" 8 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TouttracksS" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Trains__TouttracksS__TT2sP1
 use        Trains__TouttracksS__T2s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.8187" : Standard__natural.natural; rec__elements "model_trace:.8194" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.8222" : Standard__positive.positive }
 
 function __split_fields_SIZE9__projection #"system.ads" 1 0 0# "model_trace:.8187" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE9__projection
 
 meta "inline : no" function __split_fields_SIZE9__projection
 
 function __split_fields_ELEMENTS9__projection #"trains.ads" 8 0 0# "model_trace:.8194" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS9__projection
 
 meta "inline : no" function __split_fields_ELEMENTS9__projection
 
 function __split_fields_HEAD9__projection #"trains.ads" 8 0 0# "model_trace:.8222" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD9__projection
 
 meta "inline : no" function __split_fields_HEAD9__projection
 
 type __split_fields__ref #"trains.ads" 8 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_14__projection #"trains.ads" 8 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_14__projection
 
 meta "inline : no" function __split_fields__ref_14__projection
 
 val __split_fields__havoc #"trains.ads" 8 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type touttracksS #"trains.ads" 8 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function touttracksS_3__projection #"trains.ads" 8 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function touttracksS_3__projection
 
 meta "inline : no" function touttracksS_3__projection
 
 function touttracksS_4__projection #"trains.ads" 8 0 0# 
   (a : touttracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function touttracksS_4__projection
 
 meta "inline : no" function touttracksS_4__projection
 
 function to_base #"trains.ads" 8 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Trains__TouttracksS__TT2sP1.first Trains__TouttracksS__TT2sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"trains.ads" 8 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : touttracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___147 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___147)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__size_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"trains.ads" 8 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__elements_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"trains.ads" 8 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__head_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"trains.ads" 8 0 0# 
   (a : touttracksS) (b : touttracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Trains__TouttracksS__T2s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 8 0 0# 
   (a : touttracksS) (b : touttracksS) : bool
 
 function value__size #"trains.ads" 8 0 0# 
   : int
 
 function object__size #"trains.ads" 8 0 0# 
   (a : touttracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : touttracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"trains.ads" 8 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"trains.ads" 8 0 0# 
   : touttracksS
 
 type touttracksS__ref #"trains.ads" 8 0 0# =
  { mutable touttracksS__content "model_trace:" : touttracksS }
 
 function touttracksS__ref_2__projection #"trains.ads" 8 0 0# 
   (a : touttracksS__ref) : touttracksS =
  a.touttracksS__content
 
 meta "model_projection" function touttracksS__ref_2__projection
 
 meta "inline : no" function touttracksS__ref_2__projection
 
 val touttracksS__havoc #"trains.ads" 8 0 0# 
   (x : touttracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"trains.ads" 11 0 0# 
 
 function first #"trains.ads" 11 0 0# 
   : int =
  1
 
 function last #"trains.ads" 11 0 0# 
   : int =
  7
 
 predicate in_range #"trains.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"trains.ads" 11 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_3__projection #"trains.ads" 11 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_3__projection
 
 meta "inline : no" function t3s__ref_3__projection
 
 val t3s__havoc #"trains.ads" 11 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 11 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t6s #"trains.ads" 12 0 0# 
 
 function first #"trains.ads" 12 0 0# 
   : int =
  1
 
 function last #"trains.ads" 12 0 0# 
   : int =
  4
 
 predicate in_range #"trains.ads" 12 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t6s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t6s__ref #"trains.ads" 12 0 0# =
  { mutable t6s__content "model_trace:" : t6s }
 
 function t6s__ref___projection #"trains.ads" 12 0 0# 
   (a : t6s__ref) : t6s =
  a.t6s__content
 
 meta "model_projection" function t6s__ref___projection
 
 meta "inline : no" function t6s__ref___projection
 
 val t6s__havoc #"trains.ads" 12 0 0# 
   (x : t6s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 12 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T8s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Tracks__track
 use        Stations__station
 use        Trains__train_location__T4s
 use        Trains__train_location__T7s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"system.ads" 1 0 0# =
  { rec__currentlocation "model_trace:.4590" : Array__Int__Standard__character.map; rec__none "model_trace:.4606" : Array__Int__Standard__character.map; rec__track "model_trace:.4622" : Tracks__track.track; rec__station "model_trace:.4634" : Stations__station.station }
 
 function __split_fields_currentLocation__projection #"stations.ads" 17 0 0# "model_trace:.4590" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__currentlocation
 
 meta "model_projection" function __split_fields_currentLocation__projection
 
 meta "inline : no" function __split_fields_currentLocation__projection
 
 function __split_fields_None__projection #"trains.ads" 9 0 0# "model_trace:.4606" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__none
 
 meta "model_projection" function __split_fields_None__projection
 
 meta "inline : no" function __split_fields_None__projection
 
 function __split_fields_Track__projection #"trains.ads" 9 0 0# "model_trace:.4622" 
   (a : __split_fields) : Tracks__track.track =
  a.rec__track
 
 meta "model_projection" function __split_fields_Track__projection
 
 meta "inline : no" function __split_fields_Track__projection
 
 function __split_fields_Station__projection #"trains.ads" 9 0 0# "model_trace:.4634" 
   (a : __split_fields) : Stations__station.station =
  a.rec__station
 
 meta "model_projection" function __split_fields_Station__projection
 
 meta "inline : no" function __split_fields_Station__projection
 
 type __split_fields__ref #"trains.ads" 9 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_15__projection #"trains.ads" 9 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_15__projection
 
 meta "inline : no" function __split_fields__ref_15__projection
 
 val __split_fields__havoc #"trains.ads" 9 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train_location #"trains.ads" 9 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train_location___projection #"trains.ads" 9 0 0# 
   (a : train_location) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train_location___projection
 
 meta "inline : no" function train_location___projection
 
 predicate currentlocation__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__currentlocation_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (currentlocation__pred a) }
  ensures { (result = a.__split_fields.rec__currentlocation) }
 
 predicate none__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__none_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (none__pred a) }
  ensures { (result = a.__split_fields.rec__none) }
 
 predicate track__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__track_ #"trains.ads" 9 0 0# 
   (a : train_location) : Tracks__track.track
  requires { (track__pred a) }
  ensures { (result = a.__split_fields.rec__track) }
 
 predicate station__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__station_ #"trains.ads" 9 0 0# 
   (a : train_location) : Stations__station.station
  requires { (station__pred a) }
  ensures { (result = a.__split_fields.rec__station) }
 
 function bool_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool =
  (if (( ( ( ((Trains__train_location__T4s.bool_eq a.__split_fields.rec__currentlocation b.__split_fields.rec__currentlocation) = True) /\ ((Trains__train_location__T7s.bool_eq a.__split_fields.rec__none b.__split_fields.rec__none) = True) ) /\ ((Tracks__track.bool_eq a.__split_fields.rec__track b.__split_fields.rec__track) = True) ) /\ ((Stations__station.bool_eq a.__split_fields.rec__station b.__split_fields.rec__station) = True) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool
 
 function value__size #"trains.ads" 9 0 0# 
   : int
 
 function object__size #"trains.ads" 9 0 0# 
   (a : train_location) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train_location.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 9 0 0# 
   : train_location
 
 type train_location__ref #"trains.ads" 9 0 0# =
  { mutable train_location__content "model_trace:" : train_location }
 
 function train_location__ref___projection #"trains.ads" 9 0 0# 
   (a : train_location__ref) : train_location =
  a.train_location__content
 
 meta "model_projection" function train_location__ref___projection
 
 meta "inline : no" function train_location__ref___projection
 
 val train_location__havoc #"trains.ads" 9 0 0# 
   (x : train_location__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train" defined at trains.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Trains__train
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Trains__train_location

 type __split_fields #"trains.ads" 9 0 0# =
  { rec__id "model_trace:.4658" : Standard__natural.natural; rec__location "model_trace:.4669" : Trains__train_location.train_location; rec__origin "model_trace:.4679" : Types__station_locations.station_locations; rec__destination "model_trace:.4694" : Types__station_locations.station_locations; rec__state "model_trace:.4709" : Types__train_state.train_state; rec__start_run_time "model_trace:.4724" : Types__timetable.timetable }
 
 function __split_fields_ID5__projection #"types.ads" 14 0 0# "model_trace:.4658" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID5__projection
 
 meta "inline : no" function __split_fields_ID5__projection
 
 function __split_fields_Location2__projection #"trains.ads" 17 0 0# "model_trace:.4669" 
   (a : __split_fields) : Trains__train_location.train_location =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location2__projection
 
 meta "inline : no" function __split_fields_Location2__projection
 
 function __split_fields_Origin3__projection #"trains.ads" 17 0 0# "model_trace:.4679" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin3__projection
 
 meta "inline : no" function __split_fields_Origin3__projection
 
 function __split_fields_Destination3__projection #"trains.ads" 17 0 0# "model_trace:.4694" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination3__projection
 
 meta "inline : no" function __split_fields_Destination3__projection
 
 function __split_fields_State__projection #"trains.ads" 17 0 0# "model_trace:.4709" 
   (a : __split_fields) : Types__train_state.train_state =
  a.rec__state
 
 meta "model_projection" function __split_fields_State__projection
 
 meta "inline : no" function __split_fields_State__projection
 
 function __split_fields_Start_Run_Time__projection #"trains.ads" 17 0 0# "model_trace:.4724" 
   (a : __split_fields) : Types__timetable.timetable =
  a.rec__start_run_time
 
 meta "model_projection" function __split_fields_Start_Run_Time__projection
 
 meta "inline : no" function __split_fields_Start_Run_Time__projection
 
 type __split_fields__ref #"trains.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_16__projection #"trains.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_16__projection
 
 meta "inline : no" function __split_fields__ref_16__projection
 
 val __split_fields__havoc #"trains.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train #"trains.ads" 17 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train___projection #"trains.ads" 17 0 0# 
   (a : train) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train___projection
 
 meta "inline : no" function train___projection
 
 predicate id__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__id_ #"trains.ads" 17 0 0# 
   (a : train) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__location_ #"trains.ads" 17 0 0# 
   (a : train) : Trains__train_location.train_location
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate origin__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__origin_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__destination_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate state__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__state_ #"trains.ads" 17 0 0# 
   (a : train) : Types__train_state.train_state
  requires { (state__pred a) }
  ensures { (result = a.__split_fields.rec__state) }
 
 predicate start_run_time__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__start_run_time_ #"trains.ads" 17 0 0# 
   (a : train) : Types__timetable.timetable
  requires { (start_run_time__pred a) }
  ensures { (result = a.__split_fields.rec__start_run_time) }
 
 function bool_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Trains__train_location.bool_eq a.__split_fields.rec__location b.__split_fields.rec__location) = True) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Types__train_state.to_rep a.__split_fields.rec__state) = (Types__train_state.to_rep b.__split_fields.rec__state)) ) /\ ((Types__timetable.to_rep a.__split_fields.rec__start_run_time) = (Types__timetable.to_rep b.__split_fields.rec__start_run_time)) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool
 
 function value__size #"trains.ads" 17 0 0# 
   : int
 
 function object__size #"trains.ads" 17 0 0# 
   (a : train) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 17 0 0# 
   : train
 
 type train__ref #"trains.ads" 17 0 0# =
  { mutable train__content "model_trace:" : train }
 
 function train__ref___projection #"trains.ads" 17 0 0# 
   (a : train__ref) : train =
  a.train__content
 
 meta "model_projection" function train__ref___projection
 
 meta "inline : no" function train__ref___projection
 
 val train__havoc #"trains.ads" 17 0 0# 
   (x : train__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at sprint.ads:3, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 3 0 0# "model_projected" "model_trace:5873" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:3, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 4 0 0# "model_projected" "model_trace:5891" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 4 0 0# "model" "model_trace:5900" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 5 0 0# "model_projected" "model_trace:5918" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 5 0 0# "model" "model_trace:5927" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 8 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 6 0 0# "model_projected" "model_trace:5947" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 6 0 0# "model" "model_trace:5956" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data_type
 use export Trains__train
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  train
 
 function to_base #"trains.ads" 17 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_3__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_3__projection
 
 meta "inline : no" function data_type__ref_3__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:8800" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:8809" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.8672" : Railsystems__list_trains__data_type.data_type; rec__id "model_trace:.8682" : Standard__natural.natural }
 
 function __split_fields_DATA3__projection #"system.ads" 1 0 0# "model_trace:.8672" 
   (a : __split_fields) : Railsystems__list_trains__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA3__projection
 
 meta "inline : no" function __split_fields_DATA3__projection
 
 function __split_fields_ID6__projection #"list.ads" 90 0 0# "model_trace:.8682" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID6__projection
 
 meta "inline : no" function __split_fields_ID6__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_17__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_17__projection
 
 meta "inline : no" function __split_fields__ref_17__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_3__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_3__projection
 
 meta "inline : no" function data_3__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Railsystems__list_trains__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_trains__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_3__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_3__projection
 
 meta "inline : no" function data__ref_3__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_trains__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_trains__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_3__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_3__projection
 
 meta "inline : no" function list_array__ref_3__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_4__projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_4__projection
 
 meta "inline : no" function t3s__ref_4__projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Railsystems__list_trains__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Railsystems__list_trains__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_3__projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_3__projection
 
 meta "inline : no" function t4s__ref_3__projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.8349" : Standard__positive.positive }
 
 function __split_discrs_3__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_3__projection
 
 meta "inline : no" function __split_discrs_3__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_3__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_3__projection
 
 meta "inline : no" function __split_discrs__ref_3__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.8716" : Standard__natural.natural; rec__elements "model_trace:.8727" : Railsystems__list_trains__list_ptr__T4s.t4s; rec__head "model_trace:.8742" : Standard__positive.positive }
 
 function __split_fields_SIZE10__projection #"system.ads" 1 0 0# "model_trace:.8716" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE10__projection
 
 meta "inline : no" function __split_fields_SIZE10__projection
 
 function __split_fields_ELEMENTS10__projection #"list.ads" 99 0 0# "model_trace:.8727" 
   (a : __split_fields) : Railsystems__list_trains__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS10__projection
 
 meta "inline : no" function __split_fields_ELEMENTS10__projection
 
 function __split_fields_HEAD10__projection #"list.ads" 99 0 0# "model_trace:.8742" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD10__projection
 
 meta "inline : no" function __split_fields_HEAD10__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_18__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_18__projection
 
 meta "inline : no" function __split_fields__ref_18__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_5__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_5__projection
 
 meta "inline : no" function list_ptr_5__projection
 
 function list_ptr_6__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_6__projection
 
 meta "inline : no" function list_ptr_6__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Railsystems__list_trains__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__list_trains__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_3__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_3__projection
 
 meta "inline : no" function list_ptr__ref_3__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 46 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:8376" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_first__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 48 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_first
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_last__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 51 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_last
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 54 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 57 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:8461" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:8489" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 62 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:8536" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:8545" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:8590" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data

 function newvalue #"list.ads" 78 0 0# 
   : Railsystems__list_trains__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:8626" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:8635" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data_type
 use export Stations__station
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  station
 
 function to_base #"stations.ads" 17 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_4__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_4__projection
 
 meta "inline : no" function data_type__ref_4__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:9385" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:9394" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_stations__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.9257" : Railsystems__list_stations__data_type.data_type; rec__id "model_trace:.9267" : Standard__natural.natural }
 
 function __split_fields_DATA4__projection #"system.ads" 1 0 0# "model_trace:.9257" 
   (a : __split_fields) : Railsystems__list_stations__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA4__projection
 
 meta "inline : no" function __split_fields_DATA4__projection
 
 function __split_fields_ID7__projection #"list.ads" 90 0 0# "model_trace:.9267" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID7__projection
 
 meta "inline : no" function __split_fields_ID7__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_19__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_19__projection
 
 meta "inline : no" function __split_fields__ref_19__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_4__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_4__projection
 
 meta "inline : no" function data_4__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Railsystems__list_stations__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_stations__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_4__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_4__projection
 
 meta "inline : no" function data__ref_4__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_stations__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_stations__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_4__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_4__projection
 
 meta "inline : no" function list_array__ref_4__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t7s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t7s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t7s__ref #"list.ads" 102 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref_2__projection
 
 meta "inline : no" function t7s__ref_2__projection
 
 val t7s__havoc #"list.ads" 102 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T7s

 type component_type #"list.ads" 102 0 0# =
  Railsystems__list_stations__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Railsystems__list_stations__list_ptr__T7s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t8s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t8s__ref #"list.ads" 102 0 0# =
  { mutable t8s__content "model_trace:" : t8s }
 
 function t8s__ref___projection #"list.ads" 102 0 0# 
   (a : t8s__ref) : t8s =
  a.t8s__content
 
 meta "model_projection" function t8s__ref___projection
 
 meta "inline : no" function t8s__ref___projection
 
 val t8s__havoc #"list.ads" 102 0 0# 
   (x : t8s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr__T8s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.8934" : Standard__positive.positive }
 
 function __split_discrs_4__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_4__projection
 
 meta "inline : no" function __split_discrs_4__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_4__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_4__projection
 
 meta "inline : no" function __split_discrs__ref_4__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.9301" : Standard__natural.natural; rec__elements "model_trace:.9312" : Railsystems__list_stations__list_ptr__T8s.t8s; rec__head "model_trace:.9327" : Standard__positive.positive }
 
 function __split_fields_SIZE11__projection #"system.ads" 1 0 0# "model_trace:.9301" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE11__projection
 
 meta "inline : no" function __split_fields_SIZE11__projection
 
 function __split_fields_ELEMENTS11__projection #"list.ads" 99 0 0# "model_trace:.9312" 
   (a : __split_fields) : Railsystems__list_stations__list_ptr__T8s.t8s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS11__projection
 
 meta "inline : no" function __split_fields_ELEMENTS11__projection
 
 function __split_fields_HEAD11__projection #"list.ads" 99 0 0# "model_trace:.9327" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD11__projection
 
 meta "inline : no" function __split_fields_HEAD11__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_20__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_20__projection
 
 meta "inline : no" function __split_fields__ref_20__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_7__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_7__projection
 
 meta "inline : no" function list_ptr_7__projection
 
 function list_ptr_8__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_8__projection
 
 meta "inline : no" function list_ptr_8__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Railsystems__list_stations__list_ptr__T8s.t8s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__list_stations__list_ptr__T8s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_4__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_4__projection
 
 meta "inline : no" function list_ptr__ref_4__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 46 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:8961" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_first__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 48 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_first
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_last__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 51 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_last
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 54 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 57 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:9046" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:9074" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 62 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:9121" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:9130" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:9175" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data

 function newvalue #"list.ads" 78 0 0# 
   : Railsystems__list_stations__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:9211" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:9220" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TT10sP1" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s__TT10sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT10sP1 #"railsystems.ads" 28 0 0# 
 
 function first #"railsystems.ads" 28 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 28 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 28 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT10sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT10sP1__ref #"railsystems.ads" 28 0 0# =
  { mutable tT10sP1__content "model_trace:" : tT10sP1 }
 
 function tT10sP1__ref_2__projection #"railsystems.ads" 28 0 0# 
   (a : tT10sP1__ref) : tT10sP1 =
  a.tT10sP1__content
 
 meta "model_projection" function tT10sP1__ref_2__projection
 
 meta "inline : no" function tT10sP1__ref_2__projection
 
 val tT10sP1__havoc #"railsystems.ads" 28 0 0# 
   (x : tT10sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"railsystems.ads" 28 0 0# =
  Railsystems__list_trains__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9s" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__railsystem__T9s__TT10sP1
 use        Railsystems__railsystem__T9s__T10s
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.9490" : Standard__natural.natural; rec__elements "model_trace:.9497" : Array__Int__Railsystems__list_trains__data.map; rec__head "model_trace:.9525" : Standard__positive.positive }
 
 function __split_fields_SIZE12__projection #"system.ads" 1 0 0# "model_trace:.9490" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE12__projection
 
 meta "inline : no" function __split_fields_SIZE12__projection
 
 function __split_fields_ELEMENTS12__projection #"railsystems.ads" 28 0 0# "model_trace:.9497" 
   (a : __split_fields) : Array__Int__Railsystems__list_trains__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS12__projection
 
 meta "inline : no" function __split_fields_ELEMENTS12__projection
 
 function __split_fields_HEAD12__projection #"railsystems.ads" 28 0 0# "model_trace:.9525" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD12__projection
 
 meta "inline : no" function __split_fields_HEAD12__projection
 
 type __split_fields__ref #"railsystems.ads" 28 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_21__projection #"railsystems.ads" 28 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_21__projection
 
 meta "inline : no" function __split_fields__ref_21__projection
 
 val __split_fields__havoc #"railsystems.ads" 28 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t9s #"railsystems.ads" 28 0 0# =
  { __split_discrs "model_trace:" : Railsystems__list_trains__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t9s_3__projection #"railsystems.ads" 28 0 0# 
   (a : t9s) : Railsystems__list_trains__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t9s_3__projection
 
 meta "inline : no" function t9s_3__projection
 
 function t9s_4__projection #"railsystems.ads" 28 0 0# 
   (a : t9s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t9s_4__projection
 
 meta "inline : no" function t9s_4__projection
 
 function to_base #"railsystems.ads" 28 0 0# 
   (a : t9s) : Railsystems__list_trains__list_ptr.list_ptr =
  { Railsystems__list_trains__list_ptr.__split_discrs = a.__split_discrs; Railsystems__list_trains__list_ptr.__split_fields = { Railsystems__list_trains__list_ptr.rec__size = a.__split_fields.rec__size; Railsystems__list_trains__list_ptr.rec__elements = (Railsystems__list_trains__list_ptr__T4s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T9s__TT10sP1.first Railsystems__railsystem__T9s__TT10sP1.last); Railsystems__list_trains__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 28 0 0# 
   (r : Railsystems__list_trains__list_ptr.list_ptr) : t9s =
  { __split_discrs = r.Railsystems__list_trains__list_ptr.__split_discrs; __split_fields = { rec__size = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__size; rec__elements = (let temp___148 = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__elements in (
   (Railsystems__list_trains__list_ptr__T4s.to_array temp___148)))
  ; rec__head = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t9s)  =
  true
 
 val rec__size_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 28 0 0# 
   (a : t9s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Array__Int__Railsystems__list_trains__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 28 0 0# 
   (a : t9s)  =
  true
 
 val rec__head_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 28 0 0# 
   (a : t9s) (b : t9s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T9s__T10s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 28 0 0# 
   (a : t9s) (b : t9s) : bool
 
 function value__size #"railsystems.ads" 28 0 0# 
   : int
 
 function object__size #"railsystems.ads" 28 0 0# 
   (a : t9s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t9s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 28 0 0# 
   (rec__max_size : int) (a : Railsystems__list_trains__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size a.Railsystems__list_trains__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 28 0 0# 
   : t9s
 
 type t9s__ref #"railsystems.ads" 28 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref_2__projection #"railsystems.ads" 28 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref_2__projection
 
 meta "inline : no" function t9s__ref_2__projection
 
 val t9s__havoc #"railsystems.ads" 28 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT12sP1" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s__TT12sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT12sP1 #"railsystems.ads" 29 0 0# 
 
 function first #"railsystems.ads" 29 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 29 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 29 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT12sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT12sP1__ref #"railsystems.ads" 29 0 0# =
  { mutable tT12sP1__content "model_trace:" : tT12sP1 }
 
 function tT12sP1__ref_2__projection #"railsystems.ads" 29 0 0# 
   (a : tT12sP1__ref) : tT12sP1 =
  a.tT12sP1__content
 
 meta "model_projection" function tT12sP1__ref_2__projection
 
 meta "inline : no" function tT12sP1__ref_2__projection
 
 val tT12sP1__havoc #"railsystems.ads" 29 0 0# 
   (x : tT12sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"railsystems.ads" 29 0 0# =
  Railsystems__list_stations__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr__T8s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__railsystem__T11s__TT12sP1
 use        Railsystems__railsystem__T11s__T12s
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.9553" : Standard__natural.natural; rec__elements "model_trace:.9560" : Array__Int__Railsystems__list_stations__data.map; rec__head "model_trace:.9588" : Standard__positive.positive }
 
 function __split_fields_SIZE13__projection #"system.ads" 1 0 0# "model_trace:.9553" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE13__projection
 
 meta "inline : no" function __split_fields_SIZE13__projection
 
 function __split_fields_ELEMENTS13__projection #"railsystems.ads" 29 0 0# "model_trace:.9560" 
   (a : __split_fields) : Array__Int__Railsystems__list_stations__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS13__projection
 
 meta "inline : no" function __split_fields_ELEMENTS13__projection
 
 function __split_fields_HEAD13__projection #"railsystems.ads" 29 0 0# "model_trace:.9588" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD13__projection
 
 meta "inline : no" function __split_fields_HEAD13__projection
 
 type __split_fields__ref #"railsystems.ads" 29 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_22__projection #"railsystems.ads" 29 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_22__projection
 
 meta "inline : no" function __split_fields__ref_22__projection
 
 val __split_fields__havoc #"railsystems.ads" 29 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t11s #"railsystems.ads" 29 0 0# =
  { __split_discrs "model_trace:" : Railsystems__list_stations__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t11s_3__projection #"railsystems.ads" 29 0 0# 
   (a : t11s) : Railsystems__list_stations__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t11s_3__projection
 
 meta "inline : no" function t11s_3__projection
 
 function t11s_4__projection #"railsystems.ads" 29 0 0# 
   (a : t11s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t11s_4__projection
 
 meta "inline : no" function t11s_4__projection
 
 function to_base #"railsystems.ads" 29 0 0# 
   (a : t11s) : Railsystems__list_stations__list_ptr.list_ptr =
  { Railsystems__list_stations__list_ptr.__split_discrs = a.__split_discrs; Railsystems__list_stations__list_ptr.__split_fields = { Railsystems__list_stations__list_ptr.rec__size = a.__split_fields.rec__size; Railsystems__list_stations__list_ptr.rec__elements = (Railsystems__list_stations__list_ptr__T8s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T11s__TT12sP1.first Railsystems__railsystem__T11s__TT12sP1.last); Railsystems__list_stations__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 29 0 0# 
   (r : Railsystems__list_stations__list_ptr.list_ptr) : t11s =
  { __split_discrs = r.Railsystems__list_stations__list_ptr.__split_discrs; __split_fields = { rec__size = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__size; rec__elements = (let temp___149 = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__elements in (
   (Railsystems__list_stations__list_ptr__T8s.to_array temp___149)))
  ; rec__head = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t11s)  =
  true
 
 val rec__size_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 29 0 0# 
   (a : t11s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Array__Int__Railsystems__list_stations__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 29 0 0# 
   (a : t11s)  =
  true
 
 val rec__head_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 29 0 0# 
   (a : t11s) (b : t11s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T11s__T12s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 29 0 0# 
   (a : t11s) (b : t11s) : bool
 
 function value__size #"railsystems.ads" 29 0 0# 
   : int
 
 function object__size #"railsystems.ads" 29 0 0# 
   (a : t11s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t11s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 29 0 0# 
   (rec__max_size : int) (a : Railsystems__list_stations__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size a.Railsystems__list_stations__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 29 0 0# 
   : t11s
 
 type t11s__ref #"railsystems.ads" 29 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref_2__projection #"railsystems.ads" 29 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref_2__projection
 
 meta "inline : no" function t11s__ref_2__projection
 
 val t11s__havoc #"railsystems.ads" 29 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT14sP1" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s__TT14sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT14sP1 #"railsystems.ads" 30 0 0# 
 
 function first #"railsystems.ads" 30 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 30 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 30 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT14sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT14sP1__ref #"railsystems.ads" 30 0 0# =
  { mutable tT14sP1__content "model_trace:" : tT14sP1 }
 
 function tT14sP1__ref___projection #"railsystems.ads" 30 0 0# 
   (a : tT14sP1__ref) : tT14sP1 =
  a.tT14sP1__content
 
 meta "model_projection" function tT14sP1__ref___projection
 
 meta "inline : no" function tT14sP1__ref___projection
 
 val tT14sP1__havoc #"railsystems.ads" 30 0 0# 
   (x : tT14sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T14s" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s__T14s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"railsystems.ads" 30 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13s" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__railsystem__T13s__TT14sP1
 use        Railsystems__railsystem__T13s__T14s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.9616" : Standard__natural.natural; rec__elements "model_trace:.9623" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.9651" : Standard__positive.positive }
 
 function __split_fields_SIZE14__projection #"system.ads" 1 0 0# "model_trace:.9616" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE14__projection
 
 meta "inline : no" function __split_fields_SIZE14__projection
 
 function __split_fields_ELEMENTS14__projection #"railsystems.ads" 30 0 0# "model_trace:.9623" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS14__projection
 
 meta "inline : no" function __split_fields_ELEMENTS14__projection
 
 function __split_fields_HEAD14__projection #"railsystems.ads" 30 0 0# "model_trace:.9651" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD14__projection
 
 meta "inline : no" function __split_fields_HEAD14__projection
 
 type __split_fields__ref #"railsystems.ads" 30 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_23__projection #"railsystems.ads" 30 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_23__projection
 
 meta "inline : no" function __split_fields__ref_23__projection
 
 val __split_fields__havoc #"railsystems.ads" 30 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t13s #"railsystems.ads" 30 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t13s___projection #"railsystems.ads" 30 0 0# 
   (a : t13s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t13s___projection
 
 meta "inline : no" function t13s___projection
 
 function t13s_2__projection #"railsystems.ads" 30 0 0# 
   (a : t13s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t13s_2__projection
 
 meta "inline : no" function t13s_2__projection
 
 function to_base #"railsystems.ads" 30 0 0# 
   (a : t13s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T13s__TT14sP1.first Railsystems__railsystem__T13s__TT14sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 30 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t13s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___150 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___150)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t13s)  =
  true
 
 val rec__size_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 30 0 0# 
   (a : t13s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 30 0 0# 
   (a : t13s)  =
  true
 
 val rec__head_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 30 0 0# 
   (a : t13s) (b : t13s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T13s__T14s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 30 0 0# 
   (a : t13s) (b : t13s) : bool
 
 function value__size #"railsystems.ads" 30 0 0# 
   : int
 
 function object__size #"railsystems.ads" 30 0 0# 
   (a : t13s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t13s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 30 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 30 0 0# 
   : t13s
 
 type t13s__ref #"railsystems.ads" 30 0 0# =
  { mutable t13s__content "model_trace:" : t13s }
 
 function t13s__ref___projection #"railsystems.ads" 30 0 0# 
   (a : t13s__ref) : t13s =
  a.t13s__content
 
 meta "model_projection" function t13s__ref___projection
 
 meta "inline : no" function t13s__ref___projection
 
 val t13s__havoc #"railsystems.ads" 30 0 0# 
   (x : t13s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "railsystem" defined at railsystems.ads:26, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem__T13s

 type __split_fields #"railsystems.ads" 30 0 0# =
  { rec__all_trains "model_trace:.3509" : Railsystems__railsystem__T9s.t9s; rec__all_stations "model_trace:.3526" : Railsystems__railsystem__T11s.t11s; rec__all_tracks "model_trace:.3543" : Railsystems__railsystem__T13s.t13s }
 
 function __split_fields_All_Trains__projection #"railsystems.ads" 30 0 0# "model_trace:.3509" 
   (a : __split_fields) : Railsystems__railsystem__T9s.t9s =
  a.rec__all_trains
 
 meta "model_projection" function __split_fields_All_Trains__projection
 
 meta "inline : no" function __split_fields_All_Trains__projection
 
 function __split_fields_All_Stations__projection #"railsystems.ads" 26 0 0# "model_trace:.3526" 
   (a : __split_fields) : Railsystems__railsystem__T11s.t11s =
  a.rec__all_stations
 
 meta "model_projection" function __split_fields_All_Stations__projection
 
 meta "inline : no" function __split_fields_All_Stations__projection
 
 function __split_fields_All_Tracks__projection #"railsystems.ads" 26 0 0# "model_trace:.3543" 
   (a : __split_fields) : Railsystems__railsystem__T13s.t13s =
  a.rec__all_tracks
 
 meta "model_projection" function __split_fields_All_Tracks__projection
 
 meta "inline : no" function __split_fields_All_Tracks__projection
 
 type __split_fields__ref #"railsystems.ads" 26 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_24__projection #"railsystems.ads" 26 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_24__projection
 
 meta "inline : no" function __split_fields__ref_24__projection
 
 val __split_fields__havoc #"railsystems.ads" 26 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type railsystem #"railsystems.ads" 26 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function railsystem___projection #"railsystems.ads" 26 0 0# 
   (a : railsystem) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function railsystem___projection
 
 meta "inline : no" function railsystem___projection
 
 predicate all_trains__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_trains_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T9s.t9s
  requires { (all_trains__pred a) }
  ensures { (result = a.__split_fields.rec__all_trains) }
 
 predicate all_stations__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_stations_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T11s.t11s
  requires { (all_stations__pred a) }
  ensures { (result = a.__split_fields.rec__all_stations) }
 
 predicate all_tracks__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_tracks_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T13s.t13s
  requires { (all_tracks__pred a) }
  ensures { (result = a.__split_fields.rec__all_tracks) }
 
 function bool_eq #"railsystems.ads" 26 0 0# 
   (a : railsystem) (b : railsystem) : bool =
  (if (( ( ((Railsystems__railsystem__T9s.bool_eq a.__split_fields.rec__all_trains b.__split_fields.rec__all_trains) = True) /\ ((Railsystems__railsystem__T11s.bool_eq a.__split_fields.rec__all_stations b.__split_fields.rec__all_stations) = True) ) /\ ((Railsystems__railsystem__T13s.bool_eq a.__split_fields.rec__all_tracks b.__split_fields.rec__all_tracks) = True) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 26 0 0# 
   (a : railsystem) (b : railsystem) : bool
 
 function value__size #"railsystems.ads" 26 0 0# 
   : int
 
 function object__size #"railsystems.ads" 26 0 0# 
   (a : railsystem) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : railsystem.
   ((object__size a) >= 0))
 
 function dummy #"railsystems.ads" 26 0 0# 
   : railsystem
 
 type railsystem__ref #"railsystems.ads" 26 0 0# =
  { mutable railsystem__content "model_trace:" : railsystem }
 
 function railsystem__ref___projection #"railsystems.ads" 26 0 0# 
   (a : railsystem__ref) : railsystem =
  a.railsystem__content
 
 meta "model_projection" function railsystem__ref___projection
 
 meta "inline : no" function railsystem__ref___projection
 
 val railsystem__havoc #"railsystems.ads" 26 0 0# 
   (x : railsystem__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrain__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 36 0 0# "model" "model_trace:3598" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T28s" defined at railsystems.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrain__L27s__T28s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t28s #"railsystems.ads" 42 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrain__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t28s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t28s__ref #"railsystems.ads" 42 0 0# =
  { mutable t28s__content "model_trace:" : t28s }
 
 function t28s__ref___projection #"railsystems.ads" 42 0 0# 
   (a : t28s__ref) : t28s =
  a.t28s__content
 
 meta "model_projection" function t28s__ref___projection
 
 meta "inline : no" function t28s__ref___projection
 
 val t28s__havoc #"railsystems.ads" 42 0 0# 
   (x : t28s__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 46 0 0# "model" "model_trace:3694" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 46 0 0# "model" "model_trace:3703" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 46 0 0# "model" "model_trace:3714" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lineorigin" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__lineorigin
 use import "_gnatprove_standard".Main

 function lineorigin #"railsystems.ads" 46 0 0# "model" "model_trace:3725" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "lineorigin" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__lineorigin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "linedestination" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__linedestination
 use import "_gnatprove_standard".Main

 function linedestination #"railsystems.ads" 46 0 0# "model" "model_trace:3736" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "linedestination" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__linedestination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T30s" defined at railsystems.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrack__L29s__T30s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t30s #"railsystems.ads" 58 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrack__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t30s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t30s__ref #"railsystems.ads" 58 0 0# =
  { mutable t30s__content "model_trace:" : t30s }
 
 function t30s__ref___projection #"railsystems.ads" 58 0 0# 
   (a : t30s__ref) : t30s =
  a.t30s__content
 
 meta "model_projection" function t30s__ref___projection
 
 meta "inline : no" function t30s__ref___projection
 
 val t30s__havoc #"railsystems.ads" 58 0 0# 
   (x : t30s__ref) : unit
  writes {x}

end

(* Module for defining the constant "stationid" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__stationid
 use import "_gnatprove_standard".Main

 function stationid #"railsystems.ads" 67 0 0# "model" "model_trace:3862" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationid" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__stationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__location
 use import "_gnatprove_standard".Main

 function location #"railsystems.ads" 67 0 0# "model" "model_trace:3871" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T32s" defined at railsystems.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addstation__L31s__T32s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t32s #"railsystems.ads" 73 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addstation__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t32s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t32s__ref #"railsystems.ads" 73 0 0# =
  { mutable t32s__content "model_trace:" : t32s }
 
 function t32s__ref___projection #"railsystems.ads" 73 0 0# 
   (a : t32s__ref) : t32s =
  a.t32s__content
 
 meta "model_projection" function t32s__ref___projection
 
 meta "inline : no" function t32s__ref___projection
 
 val t32s__havoc #"railsystems.ads" 73 0 0# 
   (x : t32s__ref) : unit
  writes {x}

end

(* Module for defining the constant "stationid" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__stationid
 use import "_gnatprove_standard".Main

 function stationid #"railsystems.ads" 79 0 0# "model" "model_trace:3959" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationid" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__stationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "station" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__station
 use import "_gnatprove_standard".Main
 use        Stations__station

 function station #"railsystems.ads" 79 0 0# "model_projected" "model_trace:3968" 
   : Stations__station.station
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trainid" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__trainid
 use import "_gnatprove_standard".Main

 function trainid #"railsystems.ads" 85 0 0# "model" "model_trace:4014" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trainid" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__trainid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "train" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 function train #"railsystems.ads" 85 0 0# "model_projected" "model_trace:4023" 
   : Trains__train.train
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trackid" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__trackid
 use import "_gnatprove_standard".Main

 function trackid #"railsystems.ads" 91 0 0# "model" "model_trace:4073" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trackid" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__trackid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "track" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__track
 use import "_gnatprove_standard".Main
 use        Tracks__track

 function track #"railsystems.ads" 91 0 0# "model_projected" "model_trace:4082" 
   : Tracks__track.track
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "track" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r_system" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 98 0 0# "model_projected" "model_trace:4137" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "locationname" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__locationname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function locationname #"railsystems.ads" 98 0 0# "model_projected" "model_trace:4157" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "locationname" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__locationname__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "locationid" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__locationid
 use import "_gnatprove_standard".Main

 function locationid #"railsystems.ads" 98 0 0# "model" "model_trace:4166" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "locationid" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__locationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T33s" defined at railsystems.ads:101, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__settrainlocation__T33s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "count" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__go__count
 use import "_gnatprove_standard".Main

 function count #"railsystems.ads" 106 0 0# "model" "model_trace:4252" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 109 0 0# "model" "model_trace:4299" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 109 0 0# "model" "model_trace:4310" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "starttime" defined at railsystems.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__starttime
 use import "_gnatprove_standard".Main

 function starttime #"railsystems.ads" 109 0 0# "model" "model_trace:4321" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "starttime" defined at railsystems.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__starttime__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r_system" defined at railsystems.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 122 0 0# "model_projected" "model_trace:4402" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stationlocation" defined at railsystems.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__stationlocation
 use import "_gnatprove_standard".Main

 function stationlocation #"railsystems.ads" 122 0 0# "model" "model_trace:4411" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationlocation" defined at railsystems.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__stationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getstationbyname" defined at railsystems.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__getstationbyname
 use import "_gnatprove_standard".Main
 use        Stations__station
 use        Railsystems__railsystem

 function getstationbyname #"railsystems.ads" 122 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station

end

(* Module for defining the constant "r_system" defined at railsystems.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 123 0 0# "model_projected" "model_trace:4434" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 123 0 0# "model" "model_trace:4443" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 123 0 0# "model" "model_trace:4454" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrackbyname" defined at railsystems.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrackbyname
 use import "_gnatprove_standard".Main
 use        Tracks__track
 use        Railsystems__railsystem

 function gettrackbyname #"railsystems.ads" 123 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track

end

(* Module for defining the constant "r_system" defined at railsystems.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 124 0 0# "model_projected" "model_trace:4477" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at railsystems.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 124 0 0# "model" "model_trace:4486" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrainbyid" defined at railsystems.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrainbyid
 use import "_gnatprove_standard".Main
 use        Trains__train
 use        Railsystems__railsystem

 function gettrainbyid #"railsystems.ads" 124 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train

end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:10809" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type address #"system.ads" 108 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 108 0 0# 
   : BV32.t
 
 function first #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"system.ads" 108 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 108 0 0# 
   : int =
  4294967295
 
 predicate in_range #"system.ads" 108 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"system.ads" 108 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 108 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 108 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 108 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_address #"system.ads" 69 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:11158" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 97 0 0# "model" "model_trace:11174" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 98 0 0# "model" "model_trace:11184" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 100 0 0# 
 
 function first #"system.ads" 100 0 0# 
   : int =
  0
 
 function last #"system.ads" 100 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 100 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 100 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 100 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 100 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 101 0 0# 
 
 function first #"system.ads" 101 0 0# 
   : int =
  0
 
 function last #"system.ads" 101 0 0# 
   : int =
  30
 
 predicate in_range #"system.ads" 101 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 101 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 101 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 101 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 102 0 0# 
 
 function first #"system.ads" 102 0 0# 
   : int =
  31
 
 function last #"system.ads" 102 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 102 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 102 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 102 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 102 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 104 0 0# "model" "model_trace:11236" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 101 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 121 0 0# "model" "model_trace:11266" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 121 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 122 0 0# "model" "model_trace:11276" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 122 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 123 0 0# "model" "model_trace:11286" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 123 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 124 0 0# "model" "model_trace:11296" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 125 0 0# "model" "model_trace:11306" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 126 0 0# "model" "model_trace:11316" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 126 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 127 0 0# "model" "model_trace:11326" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 127 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 128 0 0# "model" "model_trace:11336" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 128 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 129 0 0# "model" "model_trace:11346" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 129 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 130 0 0# "model" "model_trace:11356" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 130 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 131 0 0# "model" "model_trace:11366" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 131 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 132 0 0# "model" "model_trace:11376" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 132 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 133 0 0# "model" "model_trace:11386" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 133 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 134 0 0# "model" "model_trace:11396" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 135 0 0# "model" "model_trace:11406" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 135 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 136 0 0# "model" "model_trace:11416" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 136 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 137 0 0# "model" "model_trace:11426" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 137 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 138 0 0# "model" "model_trace:11436" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 138 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 139 0 0# "model" "model_trace:11446" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 139 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 140 0 0# "model" "model_trace:11456" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 140 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 141 0 0# "model" "model_trace:11466" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 141 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 142 0 0# "model" "model_trace:11476" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 143 0 0# "model" "model_trace:11486" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 143 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 144 0 0# "model" "model_trace:11496" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 144 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 145 0 0# "model" "model_trace:11506" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 145 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 146 0 0# "model" "model_trace:11516" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 146 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "Tpriorities_mappingB" defined at system.ads:161, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 function index_I1_one #"system.ads" 146 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 146 0 0# =
  Standard__integer.integer
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__integer.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__Tpriorities_mappingB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        System__any_priority
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 1 0 0# =
  Standard__integer.integer
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__any_priority.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpriorities_mappingB #"system.ads" 161 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpriorities_mappingB__ref #"system.ads" 161 0 0# =
  { mutable tpriorities_mappingB__content "model_trace:" : tpriorities_mappingB }
 
 function tpriorities_mappingB__ref___projection #"system.ads" 161 0 0# 
   (a : tpriorities_mappingB__ref) : tpriorities_mappingB =
  a.tpriorities_mappingB__content
 
 meta "model_projection" function tpriorities_mappingB__ref___projection
 
 meta "inline : no" function tpriorities_mappingB__ref___projection
 
 val tpriorities_mappingB__havoc #"system.ads" 161 0 0# 
   (x : tpriorities_mappingB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__priorities_mapping
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 161 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"system.ads" 166 0 0# 
 
 function first #"system.ads" 166 0 0# 
   : int =
  0
 
 function last #"system.ads" 166 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 166 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"system.ads" 166 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_5__projection #"system.ads" 166 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_5__projection
 
 meta "inline : no" function t3s__ref_5__projection
 
 val t3s__havoc #"system.ads" 166 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 166 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__underlying_priorities
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer

 function underlying_priorities #"system.ads" 165 0 0# "model_projected" "model_trace:11542" 
   : Array__Int__Standard__integer.map
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end
(* Module for defining a ref holding the value of variable "od" defined at types.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Types__od
 use import "_gnatprove_standard".Main
 use        Types__odrecord

 val od__split_fields #"types.ads" 20 0 0# "model_projected" "model_trace:5029"  : Types__odrecord.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 16 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "od" defined at types.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__od__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__append__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__delete_all__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__replace__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__init__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tk" defined at stations.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__tk
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val tk__split_fields #"stations.ads" 8 0 0# "model_projected" "model_trace:5683"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tk" defined at stations.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__tk__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__append__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__delete_all__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__replace__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__init__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at stations.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__TintracksS

 val intracks__split_fields #"stations.ads" 14 0 0#  : Stations__TintracksS.__split_fields__ref 
 
 function intracks__split_discrs #"stations.ads" 14 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at stations.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at stations.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__TouttracksS

 val outtracks__split_fields #"stations.ads" 15 0 0#  : Stations__TouttracksS.__split_fields__ref 
 
 function outtracks__split_discrs #"stations.ads" 15 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 15 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at stations.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at trains.ads:7, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Trains__TintracksS

 val intracks__split_fields #"trains.ads" 7 0 0#  : Trains__TintracksS.__split_fields__ref 
 
 function intracks__split_discrs #"trains.ads" 7 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at trains.ads:7, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at trains.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Trains__TouttracksS

 val outtracks__split_fields #"trains.ads" 8 0 0#  : Trains__TouttracksS.__split_fields__ref 
 
 function outtracks__split_discrs #"trains.ads" 8 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 8 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at trains.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tn" defined at railsystems.ads:13, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__tn
 use import "_gnatprove_standard".Main
 use        Trains__train

 val tn__split_fields #"railsystems.ads" 13 0 0# "model_projected" "model_trace:3435"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tn" defined at railsystems.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__tn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "sn" defined at railsystems.ads:19, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__sn
 use import "_gnatprove_standard".Main
 use        Stations__station

 val sn__split_fields #"railsystems.ads" 19 0 0# "model_projected" "model_trace:3467"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sn" defined at railsystems.ads:19, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__sn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:35, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__init__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 35 0 0# "model_projected" "model_trace:3571"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__init__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:36, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 36 0 0# "model_projected" "model_trace:3589"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 46 0 0# "model_projected" "model_trace:3685"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 67 0 0# "model_projected" "model_trace:3853"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacestation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 79 0 0# "model_projected" "model_trace:3950"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 85 0 0# "model_projected" "model_trace:4005"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 91 0 0# "model_projected" "model_trace:4064"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:97, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 97 0 0# "model_projected" "model_trace:4119"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__settrainlocation__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 98 0 0# "model_projected" "model_trace:4146"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 106 0 0# "model_projected" "model_trace:4232"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 106 0 0# "model_projected" "model_trace:4241"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 109 0 0# "model_projected" "model_trace:4279"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 109 0 0# "model_projected" "model_trace:4288"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_trains__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_trains__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_stations__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_stations__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__getstationbyname__temp," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__getstationbyname__temp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temp #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__getstationbyname__temp", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__getstationbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrain__train," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrain__train
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val train #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrain__train", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__location," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__location
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val location #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__location", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__gettrainbyid__train," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrainbyid__train
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val train #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__gettrainbyid__train", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrainbyid__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrack__track," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__track
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val track #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrack__track", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrack__sizetracks," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__sizetracks
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val sizetracks #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrack__sizetracks", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__sizetracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__station_t," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__station_t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station_t #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__station_t", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__station_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__tempstation2," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation2
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation2 #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__tempstation2", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation2__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__od_record," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val od_record #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__od_record", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__found," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__found
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val found #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__found", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__found__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__temporiginstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__temporiginstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temporiginstation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__temporiginstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__temporiginstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__od_record," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__od_record
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val od_record #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__od_record", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__od_record__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__check1," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__check1
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val check1 #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__check1", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__check1__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__tempstationlocation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstationlocation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstationlocation #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__tempstationlocation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__station_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__station_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station_count #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__station_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__station_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__tempsize," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__tempsize
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempsize #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__tempsize", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__tempsize__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__rail_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__rail_system
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rail_system #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__rail_system", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__rail_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__trainb," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__trainb
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainb #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__trainb", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__trainb__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__trainc," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__trainc
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainc #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "main__trainc", created in Gnat2Why.Decls.Translate_External_Object *)
module Main__trainc__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_trains__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_trains__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_stations__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_stations__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__gettrackbyname__temp," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrackbyname__temp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temp #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__gettrackbyname__temp", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrackbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"trains.ads" 17 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"trains.ads" 17 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_natural
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_train_state
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_station_locations
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at railsystems.ads:35, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrain" defined at railsystems.ads:36, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrack" defined at railsystems.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addstation" defined at railsystems.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacestation" defined at railsystems.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacestation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrain" defined at railsystems.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrack" defined at railsystems.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addincomingoutgoingtracksforeachstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "settrainlocation" defined at railsystems.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__settrainlocation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "go" defined at railsystems.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__go
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "preparetrain" defined at railsystems.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__preparetrain
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:10819" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:10830" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:10841" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:10854" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:10869" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:10879" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:10889" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:10940" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:10949" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:10958" 
   : int

end

(* Module for defining the value of the aggregate at system.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__underlying_priorities__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 function system__underlying_priorities__aggregate_def #"system.ads" 166 0 0# 
   (temp___152 : int) (temp___153 : int) (temp___154 : int) (temp___155 : int) (temp___156 : int) (temp___157 : int) (temp___158 : int) (temp___159 : int) (temp___160 : int) (temp___161 : int) (temp___162 : int) (temp___163 : int) (temp___164 : int) (temp___165 : int) (temp___166 : int) (temp___167 : int) : Array__Int__Standard__integer.map
 
 axiom def_axiom :
  (forall temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 temp___158 temp___159 temp___160 temp___161 temp___162 temp___163 temp___164 temp___165 temp___166 temp___167 : int.
   (let temp___151 = (system__underlying_priorities__aggregate_def temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 temp___158 temp___159 temp___160 temp___161 temp___162 temp___163 temp___164 temp___165 temp___166 temp___167) in (
    (forall temp___168 : int.
     (if (( (31 <= temp___168) /\ (temp___168 <= 31) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___167))) else if (( (21 <= temp___168) /\ (temp___168 <= 30) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___166)))  else if ((temp___168 = 20)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___165)))  else if ((temp___168 = 19)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___164)))  else if ((temp___168 = 18)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___163)))  else if ((temp___168 = 17)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___162)))  else if ((temp___168 = 16)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___161)))  else if ((temp___168 = 15)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___160)))  else if ((temp___168 = 14)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___159)))  else if ((temp___168 = 13)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___158)))  else if ((temp___168 = 12)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___157)))  else if ((temp___168 = 11)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___156)))  else if ((temp___168 = 10)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___155)))  else if ((temp___168 = 9)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___154)))  else if ((temp___168 = 8)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___153)))  else if (( (0 <= temp___168) /\ (temp___168 <= 7) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___152))) else (
      true)))))
  )

end

(* Module for possibly declaring a logic function for "main" defined at main.adb:8, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__Tmax_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__max_size

 predicate dynamic_invariant #"system.ads" 167 0 0# "inline" 
   (temp___expr_172 : int) (temp___is_init_169 : bool) (temp___do_constant_170 : bool) (temp___do_toplevel_171 : bool)  =
  (if (( temp___is_init_169 \/ (Types__max_size.first <= Types__max_size.last) )) then (
   (Types__max_size.dynamic_property Types__max_size.first Types__max_size.last temp___expr_172)) else true)
 
 predicate default_initial_assumption #"types.ads" 3 0 0# "inline" 
   (temp___173 : int) (temp___174 : bool)  =
  true

end

(* Module giving axioms for type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__train_state__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__train_state

 predicate dynamic_invariant #"types.ads" 3 0 0# "inline" 
   (temp___expr_178 : int) (temp___is_init_175 : bool) (temp___do_constant_176 : bool) (temp___do_toplevel_177 : bool)  =
  (if (( temp___is_init_175 \/ (Types__train_state.first <= Types__train_state.last) )) then (
   (Types__train_state.dynamic_property Types__train_state.first Types__train_state.last temp___expr_178)) else true)
 
 predicate default_initial_assumption #"types.ads" 8 0 0# "inline" 
   (temp___179 : int) (temp___180 : bool)  =
  true

end

(* Module giving axioms for type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__station_locations__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 predicate dynamic_invariant #"types.ads" 8 0 0# "inline" 
   (temp___expr_184 : int) (temp___is_init_181 : bool) (temp___do_constant_182 : bool) (temp___do_toplevel_183 : bool)  =
  (if (( temp___is_init_181 \/ (Types__station_locations.first <= Types__station_locations.last) )) then (
   (Types__station_locations.dynamic_property Types__station_locations.first Types__station_locations.last temp___expr_184)) else true)
 
 predicate default_initial_assumption #"types.ads" 11 0 0# "inline" 
   (temp___185 : int) (temp___186 : bool)  =
  true

end

(* Module giving axioms for type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__timetable__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__timetable

 predicate dynamic_invariant #"types.ads" 11 0 0# "inline" 
   (temp___expr_190 : int) (temp___is_init_187 : bool) (temp___do_constant_188 : bool) (temp___do_toplevel_189 : bool)  =
  (if (( temp___is_init_187 \/ (Types__timetable.first <= Types__timetable.last) )) then (
   (Types__timetable.dynamic_property Types__timetable.first Types__timetable.last temp___expr_190)) else true)
 
 predicate default_initial_assumption #"types.ads" 14 0 0# "inline" 
   (temp___191 : int) (temp___192 : bool)  =
  true

end

(* Module giving axioms for type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__odrecord__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__odrecord

 predicate dynamic_invariant #"types.ads" 14 0 0# "inline" 
   (temp___expr_196 : Types__odrecord.odrecord) (temp___is_init_193 : bool) (temp___do_constant_194 : bool) (temp___do_toplevel_195 : bool)  =
  true
 
 predicate default_initial_assumption #"types.ads" 16 0 0# "inline" 
   (temp___197 : Types__odrecord.odrecord) (temp___198 : bool)  =
  ( (if ((Types__odrecord.origin__pred temp___197)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__origin (Types__odrecord.__split_fields temp___197))) = 0)) else true) /\ (if ((Types__odrecord.destination__pred temp___197)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__destination (Types__odrecord.__split_fields temp___197))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__list_od__data_type

 predicate dynamic_invariant #"types.ads" 16 0 0# "inline" 
   (temp___expr_202 : Types__list_od__data_type.data_type) (temp___is_init_199 : bool) (temp___do_constant_200 : bool) (temp___do_toplevel_201 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___203 : Types__list_od__data_type.data_type) (temp___204 : bool)  =
  ( (if ((Types__list_od__data_type.origin__pred temp___203)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___203))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___203)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___203))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_208 : Types__list_od__data.data) (temp___is_init_205 : bool) (temp___do_constant_206 : bool) (temp___do_toplevel_207 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___209 : Types__list_od__data.data) (temp___210 : bool)  =
  ( (if ((Types__list_od__data.data__pred temp___209)) then (
   (let temp___211 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___209)) in (
    ( (if ((Types__list_od__data_type.origin__pred temp___211)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___211))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___211)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___211))) = 0)) else true) )))
  ) else true) /\ (if ((Types__list_od__data.id__pred temp___209)) then (
   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___209))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Types__list_od__list_array

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_215 : Types__list_od__list_array.list_array) (temp___is_init_212 : bool) (temp___do_constant_213 : bool) (temp___do_toplevel_214 : bool)  =
  (if (temp___do_constant_213) then (
   true) else (
   (Types__list_od__list_array.dynamic_property Standard__positive.first Standard__positive.last (Types__list_od__list_array.first temp___expr_215) (Types__list_od__list_array.last temp___expr_215))))

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr

 predicate dynamic_invariant #"list.ads" 98 0 0# "inline" 
   (temp___expr_220 : Types__list_od__list_ptr.list_ptr) (temp___is_init_217 : bool) (temp___do_constant_218 : bool) (temp___do_toplevel_219 : bool)  =
  (let temp___221 = (Types__list_od__list_ptr.rec__max_size (Types__list_od__list_ptr.__split_discrs temp___expr_220)) in (
   (if ((Types__list_od__list_ptr.elements__pred temp___expr_220)) then (
    (if (False) then (
     true) else (
     ( (Types__list_od__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___221) (Types__list_od__list_ptr__T4s.first (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_220))) (Types__list_od__list_ptr__T4s.last (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_220)))) /\ ( ((Types__list_od__list_ptr__T4s.first (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_220))) = 1) /\ ((Types__list_od__list_ptr__T4s.last (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_220))) = (Standard__positive.to_rep temp___221)) ) )))) else true)))


end

(* Module giving axioms for type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Tracks__track__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Tracks__track

 predicate dynamic_invariant #"list.ads" 39 0 0# "inline" 
   (temp___expr_226 : Tracks__track.track) (temp___is_init_223 : bool) (temp___do_constant_224 : bool) (temp___do_toplevel_225 : bool)  =
  true
 
 predicate default_initial_assumption #"tracks.ads" 7 0 0# "inline" 
   (temp___227 : Tracks__track.track) (temp___228 : bool)  =
  ( ( ( ( ( (if ((Tracks__track.id__pred temp___227)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___227))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___227)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___227))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___227)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___227))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___227)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___227))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___227)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___227))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___227)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___227))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type

 predicate dynamic_invariant #"tracks.ads" 7 0 0# "inline" 
   (temp___expr_232 : Stations__list_tracks__data_type.data_type) (temp___is_init_229 : bool) (temp___do_constant_230 : bool) (temp___do_toplevel_231 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___233 : Stations__list_tracks__data_type.data_type) (temp___234 : bool)  =
  ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___233)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___233)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___233)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___233)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___233)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___233)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___233))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_238 : Stations__list_tracks__data.data) (temp___is_init_235 : bool) (temp___do_constant_236 : bool) (temp___do_toplevel_237 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___239 : Stations__list_tracks__data.data) (temp___240 : bool)  =
  ( (if ((Stations__list_tracks__data.data__pred temp___239)) then (
   (let temp___241 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___239)) in (
    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___241)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___241)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___241)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___241)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___241)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___241)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___241))) = 0)) else true) )))
  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___239)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___239))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Stations__list_tracks__list_array

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_245 : Stations__list_tracks__list_array.list_array) (temp___is_init_242 : bool) (temp___do_constant_243 : bool) (temp___do_toplevel_244 : bool)  =
  (if (temp___do_constant_243) then (
   true) else (
   (Stations__list_tracks__list_array.dynamic_property Standard__positive.first Standard__positive.last (Stations__list_tracks__list_array.first temp___expr_245) (Stations__list_tracks__list_array.last temp___expr_245))))

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr

 predicate dynamic_invariant #"list.ads" 98 0 0# "inline" 
   (temp___expr_250 : Stations__list_tracks__list_ptr.list_ptr) (temp___is_init_247 : bool) (temp___do_constant_248 : bool) (temp___do_toplevel_249 : bool)  =
  (let temp___251 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__list_tracks__list_ptr.__split_discrs temp___expr_250)) in (
   (if ((Stations__list_tracks__list_ptr.elements__pred temp___expr_250)) then (
    (if (False) then (
     true) else (
     ( (Stations__list_tracks__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___251) (Stations__list_tracks__list_ptr__T4s.first (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_250))) (Stations__list_tracks__list_ptr__T4s.last (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_250)))) /\ ( ((Stations__list_tracks__list_ptr__T4s.first (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_250))) = 1) /\ ((Stations__list_tracks__list_ptr__T4s.last (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_250))) = (Standard__positive.to_rep temp___251)) ) )))) else true)))


end

(* Module giving axioms for type "TT5sP1" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__TT5sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TintracksS" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT6sP1" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__TT6sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TouttracksS" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT8sP1" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__TT8sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT10sP1" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__TT10sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT12sP1" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__TT12sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__T12s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "station" defined at stations.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 39 0 0# "inline" 
   (temp___expr_256 : Stations__station.station) (temp___is_init_253 : bool) (temp___do_constant_254 : bool) (temp___do_toplevel_255 : bool)  =
  ( ( (if ((Stations__station.incoming__pred temp___expr_256)) then (
   (let temp___257 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields temp___expr_256)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields temp___expr_256))))))))
  ) else true) /\ (if ((Stations__station.outgoing__pred temp___expr_256)) then (
   (let temp___259 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields temp___expr_256)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields temp___expr_256))))))))
  ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___expr_256)) then (
   (let temp___261 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___expr_256)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___expr_256))))))))
  ) else true) )
 
 predicate default_initial_assumption #"stations.ads" 17 0 0# "inline" 
   (temp___263 : Stations__station.station) (temp___264 : bool)  =
  ( ( ( ( ( (if ((Stations__station.id__pred temp___263)) then (
   ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___263))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___263)) then (
   ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___263))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___263)) then (
   ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___263))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___263)) then (
   (let temp___265 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___263)) in (
   (let temp___266 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___265))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___265))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___265)) then (
     ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___265))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___265)) then (
     (let temp___267 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___265)) in (
      (forall temp___268 : int.
       (if (( (Stations__station__T7s__TT8sP1.first <= temp___268) /\ (temp___268 <= Stations__station__T7s__TT8sP1.last) )) then (
        (let temp___269 = (Array__Int__Stations__list_tracks__data.get temp___267 temp___268) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___269)) then (
          (let temp___270 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___269)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___270)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___270)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___270)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___270)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___270)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___270)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___270))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___269)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___269))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___265)) then (
     ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___265))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___263)) then (
   (let temp___271 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___263)) in (
   (let temp___272 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___271))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___271))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___271)) then (
     ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___271))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___271)) then (
     (let temp___273 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___271)) in (
      (forall temp___274 : int.
       (if (( (Stations__station__T9s__TT10sP1.first <= temp___274) /\ (temp___274 <= Stations__station__T9s__TT10sP1.last) )) then (
        (let temp___275 = (Array__Int__Stations__list_tracks__data.get temp___273 temp___274) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___275)) then (
          (let temp___276 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___275)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___276)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___276)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___276)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___276)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___276)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___276)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___276))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___275)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___275))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___271)) then (
     ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___271))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___263)) then (
   (let temp___277 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___263)) in (
   (let temp___278 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___277))) in (
    ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___277))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___277)) then (
     ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___277))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___277)) then (
     (let temp___279 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___277)) in (
      (forall temp___280 : int.
       (if (( (Stations__station__T11s__TT12sP1.first <= temp___280) /\ (temp___280 <= Stations__station__T11s__TT12sP1.last) )) then (
        (let temp___281 = (Array__Int__Types__list_od__data.get temp___279 temp___280) in (
         ( (if ((Types__list_od__data.data__pred temp___281)) then (
          (let temp___282 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___281)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___282)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___282))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___282)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___282))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___281)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___281))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___277)) then (
     ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___277))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "TT1sP1" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__TT1sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1s" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TintracksS" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT2sP1" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__TT2sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__T2s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TouttracksS" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at trains.ads:11, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___297
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___297 #"trains.ads" 11 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at trains.ads:12, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___298
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___298 #"trains.ads" 12 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Array__Int__Standard__character
 use        Temp___297
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Temp___298
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 12 0 0# "inline" 
   (temp___expr_286 : Trains__train_location.train_location) (temp___is_init_283 : bool) (temp___do_constant_284 : bool) (temp___do_toplevel_285 : bool)  =
  (if ((Trains__train_location.station__pred temp___expr_286)) then (
   ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))) then (
    (let temp___289 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286))))))))))
   ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))) then (
    (let temp___291 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286))))))))))
   ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))) then (
    (let temp___293 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_286))))))))))
   ) else true) )) else true)
 
 predicate default_initial_assumption #"trains.ads" 9 0 0# "inline" 
   (temp___295 : Trains__train_location.train_location) (temp___296 : bool)  =
  ( ( ( (if ((Trains__train_location.currentlocation__pred temp___295)) then (
   ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___295)) = Temp___297.temp___297)) else true) /\ (if ((Trains__train_location.none__pred temp___295)) then (
   ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___295)) = Temp___298.temp___298)) else true) ) /\ (if ((Trains__train_location.track__pred temp___295)) then (
   (let temp___299 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___295)) in (
    ( ( ( ( ( (if ((Tracks__track.id__pred temp___299)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___299))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___299)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___299))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___299)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___299))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___299)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___299))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___299)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___299))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___299)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___299))) = 0)) else true) )))
  ) else true) ) /\ (if ((Trains__train_location.station__pred temp___295)) then (
   (let temp___300 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___295)) in (
    ( ( ( ( ( (if ((Stations__station.id__pred temp___300)) then (
     ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___300))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___300)) then (
     ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___300))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___300)) then (
     ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___300))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___300)) then (
     (let temp___301 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___300)) in (
     (let temp___302 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___301))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___301))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___301)) then (
       ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___301))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___301)) then (
       (let temp___303 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___301)) in (
        (forall temp___304 : int.
         (if (( (Stations__station__T7s__TT8sP1.first <= temp___304) /\ (temp___304 <= Stations__station__T7s__TT8sP1.last) )) then (
          (let temp___305 = (Array__Int__Stations__list_tracks__data.get temp___303 temp___304) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___305)) then (
            (let temp___306 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___305)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___306)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___306)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___306)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___306)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___306)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___306)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___306))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___305)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___305))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___301)) then (
       ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___301))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___300)) then (
     (let temp___307 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___300)) in (
     (let temp___308 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___307))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___307))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___307)) then (
       ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___307))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___307)) then (
       (let temp___309 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___307)) in (
        (forall temp___310 : int.
         (if (( (Stations__station__T9s__TT10sP1.first <= temp___310) /\ (temp___310 <= Stations__station__T9s__TT10sP1.last) )) then (
          (let temp___311 = (Array__Int__Stations__list_tracks__data.get temp___309 temp___310) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___311)) then (
            (let temp___312 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___311)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___312)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___312)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___312)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___312)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___312)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___312)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___312))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___311)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___311))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___307)) then (
       ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___307))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___300)) then (
     (let temp___313 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___300)) in (
     (let temp___314 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___313))) in (
      ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___313))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___313)) then (
       ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___313))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___313)) then (
       (let temp___315 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___313)) in (
        (forall temp___316 : int.
         (if (( (Stations__station__T11s__TT12sP1.first <= temp___316) /\ (temp___316 <= Stations__station__T11s__TT12sP1.last) )) then (
          (let temp___317 = (Array__Int__Types__list_od__data.get temp___315 temp___316) in (
           ( (if ((Types__list_od__data.data__pred temp___317)) then (
            (let temp___318 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___317)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___318)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___318))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___318)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___318))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___317)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___317))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___313)) then (
       ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___313))) = 1)) else true) )))
     ))
    ) else true) )))
  ) else true) )

end

(* Module giving axioms for type "train" defined at trains.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Temp___297
 use        Temp___298
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"stations.ads" 24 0 0# "inline" 
   (temp___expr_322 : Trains__train.train) (temp___is_init_319 : bool) (temp___do_constant_320 : bool) (temp___do_toplevel_321 : bool)  =
  (if ((Trains__train.location__pred temp___expr_322)) then (
   (if ((Trains__train_location.station__pred (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))) then (
    ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))) then (
     (let temp___325 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322))))))))))))
    ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))) then (
     (let temp___327 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322))))))))))))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))) then (
     (let temp___329 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_322))))))))))))
    ) else true) )) else true)) else true)
 
 predicate default_initial_assumption #"trains.ads" 17 0 0# "inline" 
   (temp___331 : Trains__train.train) (temp___332 : bool)  =
  ( ( ( ( ( (if ((Trains__train.id__pred temp___331)) then (
   ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields temp___331))) = 0)) else true) /\ (if ((Trains__train.location__pred temp___331)) then (
   (let temp___333 = (Trains__train.rec__location (Trains__train.__split_fields temp___331)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___333)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___333)) = Temp___297.temp___297)) else true) /\ (if ((Trains__train_location.none__pred temp___333)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___333)) = Temp___298.temp___298)) else true) ) /\ (if ((Trains__train_location.track__pred temp___333)) then (
     (let temp___334 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___333)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___334)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___334))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___334)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___334))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___334)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___334))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___334)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___334))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___334)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___334))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___334)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___334))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___333)) then (
     (let temp___335 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___333)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___335)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___335))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___335)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___335))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___335)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___335))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___335)) then (
       (let temp___336 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___335)) in (
       (let temp___337 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___336))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___336))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___336)) then (
         ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___336))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___336)) then (
         (let temp___338 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___336)) in (
          (forall temp___339 : int.
           (if (( (Stations__station__T7s__TT8sP1.first <= temp___339) /\ (temp___339 <= Stations__station__T7s__TT8sP1.last) )) then (
            (let temp___340 = (Array__Int__Stations__list_tracks__data.get temp___338 temp___339) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___340)) then (
              (let temp___341 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___340)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___341)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___341)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___341)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___341)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___341)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___341)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___341))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___340)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___340))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___336)) then (
         ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___336))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___335)) then (
       (let temp___342 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___335)) in (
       (let temp___343 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___342))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___342))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___342)) then (
         ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___342))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___342)) then (
         (let temp___344 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___342)) in (
          (forall temp___345 : int.
           (if (( (Stations__station__T9s__TT10sP1.first <= temp___345) /\ (temp___345 <= Stations__station__T9s__TT10sP1.last) )) then (
            (let temp___346 = (Array__Int__Stations__list_tracks__data.get temp___344 temp___345) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___346)) then (
              (let temp___347 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___346)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___347)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___347)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___347)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___347)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___347)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___347)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___347))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___346)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___346))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___342)) then (
         ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___342))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___335)) then (
       (let temp___348 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___335)) in (
       (let temp___349 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___348))) in (
        ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___348))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___348)) then (
         ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___348))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___348)) then (
         (let temp___350 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___348)) in (
          (forall temp___351 : int.
           (if (( (Stations__station__T11s__TT12sP1.first <= temp___351) /\ (temp___351 <= Stations__station__T11s__TT12sP1.last) )) then (
            (let temp___352 = (Array__Int__Types__list_od__data.get temp___350 temp___351) in (
             ( (if ((Types__list_od__data.data__pred temp___352)) then (
              (let temp___353 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___352)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___353)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___353))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___353)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___353))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___352)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___352))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___348)) then (
         ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___348))) = 1)) else true) )))
       ))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Trains__train.origin__pred temp___331)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields temp___331))) = 0)) else true) ) /\ (if ((Trains__train.destination__pred temp___331)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields temp___331))) = 0)) else true) ) /\ (if ((Trains__train.state__pred temp___331)) then (
   ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields temp___331))) = 3)) else true) ) /\ (if ((Trains__train.start_run_time__pred temp___331)) then (
   ((Types__timetable.to_rep (Trains__train.rec__start_run_time (Trains__train.__split_fields temp___331))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Temp___297
 use        Temp___298
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 17 0 0# "inline" 
   (temp___expr_357 : Railsystems__list_trains__data_type.data_type) (temp___is_init_354 : bool) (temp___do_constant_355 : bool) (temp___do_toplevel_356 : bool)  =
  (if ((Railsystems__list_trains__data_type.location__pred temp___expr_357)) then (
   (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))) then (
    ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))) then (
     (let temp___360 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357))))))))))))
    ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))) then (
     (let temp___362 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357))))))))))))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))) then (
     (let temp___364 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_357))))))))))))
    ) else true) )) else true)) else true)
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___366 : Railsystems__list_trains__data_type.data_type) (temp___367 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___366)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___366))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___366)) then (
   (let temp___368 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___366)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___368)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___368)) = Temp___297.temp___297)) else true) /\ (if ((Trains__train_location.none__pred temp___368)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___368)) = Temp___298.temp___298)) else true) ) /\ (if ((Trains__train_location.track__pred temp___368)) then (
     (let temp___369 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___368)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___369)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___369))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___369)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___369))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___369)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___369))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___369)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___369))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___369)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___369))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___369)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___369))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___368)) then (
     (let temp___370 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___368)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___370)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___370))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___370)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___370))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___370)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___370))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___370)) then (
       (let temp___371 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___370)) in (
       (let temp___372 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___371))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___371))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___371)) then (
         ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___371))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___371)) then (
         (let temp___373 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___371)) in (
          (forall temp___374 : int.
           (if (( (Stations__station__T7s__TT8sP1.first <= temp___374) /\ (temp___374 <= Stations__station__T7s__TT8sP1.last) )) then (
            (let temp___375 = (Array__Int__Stations__list_tracks__data.get temp___373 temp___374) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___375)) then (
              (let temp___376 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___375)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___376)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___376)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___376)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___376)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___376)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___376)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___376))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___375)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___375))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___371)) then (
         ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___371))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___370)) then (
       (let temp___377 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___370)) in (
       (let temp___378 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___377))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___377))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___377)) then (
         ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___377))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___377)) then (
         (let temp___379 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___377)) in (
          (forall temp___380 : int.
           (if (( (Stations__station__T9s__TT10sP1.first <= temp___380) /\ (temp___380 <= Stations__station__T9s__TT10sP1.last) )) then (
            (let temp___381 = (Array__Int__Stations__list_tracks__data.get temp___379 temp___380) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___381)) then (
              (let temp___382 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___381)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___382)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___382)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___382)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___382)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___382)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___382)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___382))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___381)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___381))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___377)) then (
         ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___377))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___370)) then (
       (let temp___383 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___370)) in (
       (let temp___384 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___383))) in (
        ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___383))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___383)) then (
         ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___383))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___383)) then (
         (let temp___385 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___383)) in (
          (forall temp___386 : int.
           (if (( (Stations__station__T11s__TT12sP1.first <= temp___386) /\ (temp___386 <= Stations__station__T11s__TT12sP1.last) )) then (
            (let temp___387 = (Array__Int__Types__list_od__data.get temp___385 temp___386) in (
             ( (if ((Types__list_od__data.data__pred temp___387)) then (
              (let temp___388 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___387)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___388)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___388))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___388)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___388))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___387)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___387))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___383)) then (
         ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___383))) = 1)) else true) )))
       ))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___366)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___366))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___366)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___366))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___366)) then (
   ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___366))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___366)) then (
   ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___366))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Temp___297
 use        Temp___298
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_392 : Railsystems__list_trains__data.data) (temp___is_init_389 : bool) (temp___do_constant_390 : bool) (temp___do_toplevel_391 : bool)  =
  (if ((Railsystems__list_trains__data.data__pred temp___expr_392)) then (
   (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))) then (
    (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))) then (
     ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))) then (
      (let temp___395 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392))))))))))))))
     ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))) then (
      (let temp___397 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392))))))))))))))
     ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))) then (
      (let temp___399 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_392))))))))))))))
     ) else true) )) else true)) else true)) else true)
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___401 : Railsystems__list_trains__data.data) (temp___402 : bool)  =
  ( (if ((Railsystems__list_trains__data.data__pred temp___401)) then (
   (let temp___403 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___401)) in (
    ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___403)) then (
     ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___403))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___403)) then (
     (let temp___404 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___403)) in (
      ( ( ( (if ((Trains__train_location.currentlocation__pred temp___404)) then (
       ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___404)) = Temp___297.temp___297)) else true) /\ (if ((Trains__train_location.none__pred temp___404)) then (
       ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___404)) = Temp___298.temp___298)) else true) ) /\ (if ((Trains__train_location.track__pred temp___404)) then (
       (let temp___405 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___404)) in (
        ( ( ( ( ( (if ((Tracks__track.id__pred temp___405)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___405))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___405)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___405))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___405)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___405))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___405)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___405))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___405)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___405))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___405)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___405))) = 0)) else true) )))
      ) else true) ) /\ (if ((Trains__train_location.station__pred temp___404)) then (
       (let temp___406 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___404)) in (
        ( ( ( ( ( (if ((Stations__station.id__pred temp___406)) then (
         ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___406))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___406)) then (
         ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___406))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___406)) then (
         ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___406))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___406)) then (
         (let temp___407 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___406)) in (
         (let temp___408 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___407))) in (
          ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___407))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___407)) then (
           ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___407))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___407)) then (
           (let temp___409 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___407)) in (
            (forall temp___410 : int.
             (if (( (Stations__station__T7s__TT8sP1.first <= temp___410) /\ (temp___410 <= Stations__station__T7s__TT8sP1.last) )) then (
              (let temp___411 = (Array__Int__Stations__list_tracks__data.get temp___409 temp___410) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___411)) then (
                (let temp___412 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___411)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___412)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___412)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___412)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___412)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___412)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___412)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___412))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___411)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___411))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___407)) then (
           ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___407))) = 1)) else true) )))
         ))
        ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___406)) then (
         (let temp___413 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___406)) in (
         (let temp___414 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___413))) in (
          ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___413))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___413)) then (
           ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___413))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___413)) then (
           (let temp___415 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___413)) in (
            (forall temp___416 : int.
             (if (( (Stations__station__T9s__TT10sP1.first <= temp___416) /\ (temp___416 <= Stations__station__T9s__TT10sP1.last) )) then (
              (let temp___417 = (Array__Int__Stations__list_tracks__data.get temp___415 temp___416) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___417)) then (
                (let temp___418 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___417)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___418)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___418)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___418)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___418)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___418)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___418)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___418))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___417)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___417))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___413)) then (
           ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___413))) = 1)) else true) )))
         ))
        ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___406)) then (
         (let temp___419 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___406)) in (
         (let temp___420 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___419))) in (
          ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___419))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___419)) then (
           ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___419))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___419)) then (
           (let temp___421 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___419)) in (
            (forall temp___422 : int.
             (if (( (Stations__station__T11s__TT12sP1.first <= temp___422) /\ (temp___422 <= Stations__station__T11s__TT12sP1.last) )) then (
              (let temp___423 = (Array__Int__Types__list_od__data.get temp___421 temp___422) in (
               ( (if ((Types__list_od__data.data__pred temp___423)) then (
                (let temp___424 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___423)) in (
                 ( (if ((Types__list_od__data_type.origin__pred temp___424)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___424))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___424)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___424))) = 0)) else true) )))
               ) else true) /\ (if ((Types__list_od__data.id__pred temp___423)) then (
                ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___423))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___419)) then (
           ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___419))) = 1)) else true) )))
         ))
        ) else true) )))
      ) else true) )))
    ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___403)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___403))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___403)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___403))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___403)) then (
     ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___403))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___403)) then (
     ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___403))) = 0)) else true) )))
  ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___401)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___401))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_array__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_array
 use        Array__Int__Railsystems__list_trains__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_428 : Railsystems__list_trains__list_array.list_array) (temp___is_init_425 : bool) (temp___do_constant_426 : bool) (temp___do_toplevel_427 : bool)  =
  ( (if (temp___do_constant_426) then (
   true) else (
   (Railsystems__list_trains__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_trains__list_array.first temp___expr_428) (Railsystems__list_trains__list_array.last temp___expr_428)))) /\ (forall temp___429 : int.
   (if (( ((Railsystems__list_trains__list_array.first temp___expr_428) <= temp___429) /\ (temp___429 <= (Railsystems__list_trains__list_array.last temp___expr_428)) )) then (
    (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))) then (
     (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))) then (
      (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))) then (
       ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))) then (
        (let temp___432 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429)))))))))))))))
       ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))) then (
        (let temp___434 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429)))))))))))))))
       ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))) then (
        (let temp___436 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_428) temp___429)))))))))))))))
       ) else true) )) else true)) else true)) else true)) else true)) )

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Array__Int__Railsystems__list_trains__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_441 : Railsystems__list_trains__list_ptr.list_ptr) (temp___is_init_438 : bool) (temp___do_constant_439 : bool) (temp___do_toplevel_440 : bool)  =
  (let temp___442 = (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__list_trains__list_ptr.__split_discrs temp___expr_441)) in (
   (if ((Railsystems__list_trains__list_ptr.elements__pred temp___expr_441)) then (
    ( (if (False) then (
     true) else (
     ( (Railsystems__list_trains__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___442) (Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) (Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441)))) /\ ( ((Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) = 1) /\ ((Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) = (Standard__positive.to_rep temp___442)) ) ))) /\ (forall temp___443 : int.
     (if (( ((Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) <= temp___443) /\ (temp___443 <= (Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441)))) )) then (
      (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))) then (
       (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))) then (
        (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))) then (
         ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))) then (
          (let temp___446 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443)))))))))))))))
         ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))) then (
          (let temp___448 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443)))))))))))))))
         ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))) then (
          (let temp___450 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_441))) temp___443)))))))))))))))
         ) else true) )) else true)) else true)) else true)) else true)) )) else true)))


end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 99 0 0# "inline" 
   (temp___expr_455 : Railsystems__list_stations__data_type.data_type) (temp___is_init_452 : bool) (temp___do_constant_453 : bool) (temp___do_toplevel_454 : bool)  =
  ( ( (if ((Railsystems__list_stations__data_type.incoming__pred temp___expr_455)) then (
   (let temp___456 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___expr_455)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___expr_455))))))))
  ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___expr_455)) then (
   (let temp___458 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___expr_455)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___expr_455))))))))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___expr_455)) then (
   (let temp___460 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___expr_455)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___expr_455))))))))
  ) else true) )
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___462 : Railsystems__list_stations__data_type.data_type) (temp___463 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___462)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___462))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___462)) then (
   ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___462))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___462)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___462))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___462)) then (
   (let temp___464 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___462)) in (
   (let temp___465 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___464))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___464))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___464)) then (
     ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___464))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___464)) then (
     (let temp___466 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___464)) in (
      (forall temp___467 : int.
       (if (( (Stations__station__T7s__TT8sP1.first <= temp___467) /\ (temp___467 <= Stations__station__T7s__TT8sP1.last) )) then (
        (let temp___468 = (Array__Int__Stations__list_tracks__data.get temp___466 temp___467) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___468)) then (
          (let temp___469 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___468)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___469)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___469)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___469)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___469)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___469)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___469)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___469))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___468)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___468))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___464)) then (
     ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___464))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___462)) then (
   (let temp___470 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___462)) in (
   (let temp___471 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___470))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___470))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___470)) then (
     ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___470))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___470)) then (
     (let temp___472 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___470)) in (
      (forall temp___473 : int.
       (if (( (Stations__station__T9s__TT10sP1.first <= temp___473) /\ (temp___473 <= Stations__station__T9s__TT10sP1.last) )) then (
        (let temp___474 = (Array__Int__Stations__list_tracks__data.get temp___472 temp___473) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___474)) then (
          (let temp___475 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___474)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___475)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___475)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___475)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___475)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___475)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___475)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___475))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___474)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___474))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___470)) then (
     ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___470))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___462)) then (
   (let temp___476 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___462)) in (
   (let temp___477 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___476))) in (
    ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___476))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___476)) then (
     ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___476))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___476)) then (
     (let temp___478 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___476)) in (
      (forall temp___479 : int.
       (if (( (Stations__station__T11s__TT12sP1.first <= temp___479) /\ (temp___479 <= Stations__station__T11s__TT12sP1.last) )) then (
        (let temp___480 = (Array__Int__Types__list_od__data.get temp___478 temp___479) in (
         ( (if ((Types__list_od__data.data__pred temp___480)) then (
          (let temp___481 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___480)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___481)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___481))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___481)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___481))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___480)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___480))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___476)) then (
     ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___476))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"stations.ads" 24 0 0# "inline" 
   (temp___expr_485 : Railsystems__list_stations__data.data) (temp___is_init_482 : bool) (temp___do_constant_483 : bool) (temp___do_toplevel_484 : bool)  =
  (if ((Railsystems__list_stations__data.data__pred temp___expr_485)) then (
   ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))) then (
    (let temp___486 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485))))))))))
   ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))) then (
    (let temp___488 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485))))))))))
   ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))) then (
    (let temp___490 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_485))))))))))
   ) else true) )) else true)
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___492 : Railsystems__list_stations__data.data) (temp___493 : bool)  =
  ( (if ((Railsystems__list_stations__data.data__pred temp___492)) then (
   (let temp___494 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___492)) in (
    ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___494)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___494))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___494)) then (
     ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___494))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___494)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___494))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___494)) then (
     (let temp___495 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___494)) in (
     (let temp___496 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___495))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___495))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___495)) then (
       ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___495))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___495)) then (
       (let temp___497 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___495)) in (
        (forall temp___498 : int.
         (if (( (Stations__station__T7s__TT8sP1.first <= temp___498) /\ (temp___498 <= Stations__station__T7s__TT8sP1.last) )) then (
          (let temp___499 = (Array__Int__Stations__list_tracks__data.get temp___497 temp___498) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___499)) then (
            (let temp___500 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___499)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___500)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___500)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___500)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___500)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___500)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___500)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___500))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___499)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___499))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___495)) then (
       ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___495))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___494)) then (
     (let temp___501 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___494)) in (
     (let temp___502 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___501))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___501))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___501)) then (
       ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___501))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___501)) then (
       (let temp___503 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___501)) in (
        (forall temp___504 : int.
         (if (( (Stations__station__T9s__TT10sP1.first <= temp___504) /\ (temp___504 <= Stations__station__T9s__TT10sP1.last) )) then (
          (let temp___505 = (Array__Int__Stations__list_tracks__data.get temp___503 temp___504) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___505)) then (
            (let temp___506 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___505)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___506)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___506)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___506)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___506)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___506)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___506)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___506))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___505)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___505))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___501)) then (
       ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___501))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___494)) then (
     (let temp___507 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___494)) in (
     (let temp___508 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___507))) in (
      ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___507))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___507)) then (
       ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___507))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___507)) then (
       (let temp___509 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___507)) in (
        (forall temp___510 : int.
         (if (( (Stations__station__T11s__TT12sP1.first <= temp___510) /\ (temp___510 <= Stations__station__T11s__TT12sP1.last) )) then (
          (let temp___511 = (Array__Int__Types__list_od__data.get temp___509 temp___510) in (
           ( (if ((Types__list_od__data.data__pred temp___511)) then (
            (let temp___512 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___511)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___512)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___512))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___512)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___512))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___511)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___511))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___507)) then (
       ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___507))) = 1)) else true) )))
     ))
    ) else true) )))
  ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___492)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___492))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_array__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_array
 use        Array__Int__Railsystems__list_stations__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_516 : Railsystems__list_stations__list_array.list_array) (temp___is_init_513 : bool) (temp___do_constant_514 : bool) (temp___do_toplevel_515 : bool)  =
  ( (if (temp___do_constant_514) then (
   true) else (
   (Railsystems__list_stations__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_stations__list_array.first temp___expr_516) (Railsystems__list_stations__list_array.last temp___expr_516)))) /\ (forall temp___517 : int.
   (if (( ((Railsystems__list_stations__list_array.first temp___expr_516) <= temp___517) /\ (temp___517 <= (Railsystems__list_stations__list_array.last temp___expr_516)) )) then (
    (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))) then (
     ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))) then (
      (let temp___518 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517)))))))))))
     ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))) then (
      (let temp___520 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517)))))))))))
     ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))) then (
      (let temp___522 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_516) temp___517)))))))))))
     ) else true) )) else true)) else true)) )

end

(* Module giving axioms for type "T7s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T8s
 use        Railsystems__list_stations__list_ptr
 use        Array__Int__Railsystems__list_stations__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_527 : Railsystems__list_stations__list_ptr.list_ptr) (temp___is_init_524 : bool) (temp___do_constant_525 : bool) (temp___do_toplevel_526 : bool)  =
  (let temp___528 = (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__list_stations__list_ptr.__split_discrs temp___expr_527)) in (
   (if ((Railsystems__list_stations__list_ptr.elements__pred temp___expr_527)) then (
    ( (if (False) then (
     true) else (
     ( (Railsystems__list_stations__list_ptr__T8s.dynamic_property 1 (Standard__positive.to_rep temp___528) (Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) (Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527)))) /\ ( ((Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) = 1) /\ ((Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) = (Standard__positive.to_rep temp___528)) ) ))) /\ (forall temp___529 : int.
     (if (( ((Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) <= temp___529) /\ (temp___529 <= (Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527)))) )) then (
      (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))) then (
       ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))) then (
        (let temp___530 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529)))))))))))
       ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))) then (
        (let temp___532 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529)))))))))))
       ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))) then (
        (let temp___534 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_527))) temp___529)))))))))))
       ) else true) )) else true)) else true)) )) else true)))


end

(* Module giving axioms for type "TT10sP1" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__TT10sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT12sP1" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__TT12sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__T12s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT14sP1" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__TT14sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14s" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__T14s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13s" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "railsystem" defined at railsystems.ads:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__railsystem__T9s__TT10sP1
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem__T11s__TT12sP1
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem__T13s__TT14sP1
 use        Railsystems__railsystem__T13s
 use        Railsystems__railsystem
 use        Temp___297
 use        Temp___298
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 99 0 0# "inline" 
   (temp___expr_539 : Railsystems__railsystem.railsystem) (temp___is_init_536 : bool) (temp___do_constant_537 : bool) (temp___do_toplevel_538 : bool)  =
  ( ( (if ((Railsystems__railsystem.all_trains__pred temp___expr_539)) then (
   (let temp___540 = (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) in (
    ( (if (False) then (
     true) else (
     (Railsystems__railsystem__T9s.in_range 100 (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))))) /\ (if ((Railsystems__railsystem__T9s.elements__pred (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) then (
     (forall temp___541 : int.
      (if (( (Railsystems__railsystem__T9s__TT10sP1.first <= temp___541) /\ (temp___541 <= Railsystems__railsystem__T9s__TT10sP1.last) )) then (
       (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))) then (
        (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))) then (
         (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))) then (
          ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))) then (
           (let temp___544 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541)))))))))))))))
          ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))) then (
           (let temp___546 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541)))))))))))))))
          ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))) then (
           (let temp___548 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___541)))))))))))))))
          ) else true) )) else true)) else true)) else true)) else true))) else true) )))
  ) else true) /\ (if ((Railsystems__railsystem.all_stations__pred temp___expr_539)) then (
   (let temp___550 = (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) in (
    ( (if (False) then (
     true) else (
     (Railsystems__railsystem__T11s.in_range 100 (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))))) /\ (if ((Railsystems__railsystem__T11s.elements__pred (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) then (
     (forall temp___551 : int.
      (if (( (Railsystems__railsystem__T11s__TT12sP1.first <= temp___551) /\ (temp___551 <= Railsystems__railsystem__T11s__TT12sP1.last) )) then (
       (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))) then (
        ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))) then (
         (let temp___552 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551)))))))))))
        ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))) then (
         (let temp___554 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551)))))))))))
        ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))) then (
         (let temp___556 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_539)))) temp___551)))))))))))
        ) else true) )) else true)) else true))) else true) )))
  ) else true) ) /\ (if ((Railsystems__railsystem.all_tracks__pred temp___expr_539)) then (
   (let temp___558 = (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___expr_539)))) in (
    (if (False) then (
     true) else (
     (Railsystems__railsystem__T13s.in_range 100 (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___expr_539))))))))
  ) else true) )
 
 predicate default_initial_assumption #"railsystems.ads" 26 0 0# "inline" 
   (temp___560 : Railsystems__railsystem.railsystem) (temp___561 : bool)  =
  ( ( (if ((Railsystems__railsystem.all_trains__pred temp___560)) then (
   (let temp___562 = (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___560)) in (
   (let temp___563 = (Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs temp___562))) in (
    ( ( ( ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs temp___562))) = 100) /\ (if ((Railsystems__railsystem__T9s.size__pred temp___562)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T9s.rec__size (Railsystems__railsystem__T9s.__split_fields temp___562))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T9s.elements__pred temp___562)) then (
     (let temp___564 = (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields temp___562)) in (
      (forall temp___565 : int.
       (if (( (Railsystems__railsystem__T9s__TT10sP1.first <= temp___565) /\ (temp___565 <= Railsystems__railsystem__T9s__TT10sP1.last) )) then (
        (let temp___566 = (Array__Int__Railsystems__list_trains__data.get temp___564 temp___565) in (
         ( (if ((Railsystems__list_trains__data.data__pred temp___566)) then (
          (let temp___567 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___566)) in (
           ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___567)) then (
            ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___567))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___567)) then (
            (let temp___568 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___567)) in (
             ( ( ( (if ((Trains__train_location.currentlocation__pred temp___568)) then (
              ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___568)) = Temp___297.temp___297)) else true) /\ (if ((Trains__train_location.none__pred temp___568)) then (
              ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___568)) = Temp___298.temp___298)) else true) ) /\ (if ((Trains__train_location.track__pred temp___568)) then (
              (let temp___569 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___568)) in (
               ( ( ( ( ( (if ((Tracks__track.id__pred temp___569)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___569))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___569)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___569))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___569)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___569))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___569)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___569))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___569)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___569))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___569)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___569))) = 0)) else true) )))
             ) else true) ) /\ (if ((Trains__train_location.station__pred temp___568)) then (
              (let temp___570 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___568)) in (
               ( ( ( ( ( (if ((Stations__station.id__pred temp___570)) then (
                ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___570))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___570)) then (
                ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___570))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___570)) then (
                ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___570))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___570)) then (
                (let temp___571 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___570)) in (
                (let temp___572 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___571))) in (
                 ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___571))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___571)) then (
                  ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___571))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___571)) then (
                  (let temp___573 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___571)) in (
                   (forall temp___574 : int.
                    (if (( (Stations__station__T7s__TT8sP1.first <= temp___574) /\ (temp___574 <= Stations__station__T7s__TT8sP1.last) )) then (
                     (let temp___575 = (Array__Int__Stations__list_tracks__data.get temp___573 temp___574) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___575)) then (
                       (let temp___576 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___575)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___576)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___576)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___576)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___576)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___576)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___576)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___576))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___575)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___575))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___571)) then (
                  ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___571))) = 1)) else true) )))
                ))
               ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___570)) then (
                (let temp___577 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___570)) in (
                (let temp___578 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___577))) in (
                 ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___577))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___577)) then (
                  ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___577))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___577)) then (
                  (let temp___579 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___577)) in (
                   (forall temp___580 : int.
                    (if (( (Stations__station__T9s__TT10sP1.first <= temp___580) /\ (temp___580 <= Stations__station__T9s__TT10sP1.last) )) then (
                     (let temp___581 = (Array__Int__Stations__list_tracks__data.get temp___579 temp___580) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___581)) then (
                       (let temp___582 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___581)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___582)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___582)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___582)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___582)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___582)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___582)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___582))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___581)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___581))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___577)) then (
                  ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___577))) = 1)) else true) )))
                ))
               ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___570)) then (
                (let temp___583 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___570)) in (
                (let temp___584 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___583))) in (
                 ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___583))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___583)) then (
                  ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___583))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___583)) then (
                  (let temp___585 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___583)) in (
                   (forall temp___586 : int.
                    (if (( (Stations__station__T11s__TT12sP1.first <= temp___586) /\ (temp___586 <= Stations__station__T11s__TT12sP1.last) )) then (
                     (let temp___587 = (Array__Int__Types__list_od__data.get temp___585 temp___586) in (
                      ( (if ((Types__list_od__data.data__pred temp___587)) then (
                       (let temp___588 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___587)) in (
                        ( (if ((Types__list_od__data_type.origin__pred temp___588)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___588))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___588)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___588))) = 0)) else true) )))
                      ) else true) /\ (if ((Types__list_od__data.id__pred temp___587)) then (
                       ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___587))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___583)) then (
                  ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___583))) = 1)) else true) )))
                ))
               ) else true) )))
             ) else true) )))
           ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___567)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___567))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___567)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___567))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___567)) then (
            ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___567))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___567)) then (
            ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___567))) = 0)) else true) )))
         ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___566)) then (
          ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___566))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T9s.head__pred temp___562)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T9s.rec__head (Railsystems__railsystem__T9s.__split_fields temp___562))) = 1)) else true) )))
   ))
  ) else true) /\ (if ((Railsystems__railsystem.all_stations__pred temp___560)) then (
   (let temp___589 = (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___560)) in (
   (let temp___590 = (Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs temp___589))) in (
    ( ( ( ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs temp___589))) = 100) /\ (if ((Railsystems__railsystem__T11s.size__pred temp___589)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T11s.rec__size (Railsystems__railsystem__T11s.__split_fields temp___589))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T11s.elements__pred temp___589)) then (
     (let temp___591 = (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields temp___589)) in (
      (forall temp___592 : int.
       (if (( (Railsystems__railsystem__T11s__TT12sP1.first <= temp___592) /\ (temp___592 <= Railsystems__railsystem__T11s__TT12sP1.last) )) then (
        (let temp___593 = (Array__Int__Railsystems__list_stations__data.get temp___591 temp___592) in (
         ( (if ((Railsystems__list_stations__data.data__pred temp___593)) then (
          (let temp___594 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___593)) in (
           ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___594)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___594))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___594)) then (
            ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___594))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___594)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___594))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___594)) then (
            (let temp___595 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___594)) in (
            (let temp___596 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___595))) in (
             ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___595))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___595)) then (
              ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___595))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___595)) then (
              (let temp___597 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___595)) in (
               (forall temp___598 : int.
                (if (( (Stations__station__T7s__TT8sP1.first <= temp___598) /\ (temp___598 <= Stations__station__T7s__TT8sP1.last) )) then (
                 (let temp___599 = (Array__Int__Stations__list_tracks__data.get temp___597 temp___598) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___599)) then (
                   (let temp___600 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___599)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___600)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___600)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___600)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___600)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___600)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___600)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___600))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___599)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___599))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___595)) then (
              ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___595))) = 1)) else true) )))
            ))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___594)) then (
            (let temp___601 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___594)) in (
            (let temp___602 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___601))) in (
             ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___601))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___601)) then (
              ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___601))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___601)) then (
              (let temp___603 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___601)) in (
               (forall temp___604 : int.
                (if (( (Stations__station__T9s__TT10sP1.first <= temp___604) /\ (temp___604 <= Stations__station__T9s__TT10sP1.last) )) then (
                 (let temp___605 = (Array__Int__Stations__list_tracks__data.get temp___603 temp___604) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___605)) then (
                   (let temp___606 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___605)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___606)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___606)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___606)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___606)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___606)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___606)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___606))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___605)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___605))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___601)) then (
              ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___601))) = 1)) else true) )))
            ))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___594)) then (
            (let temp___607 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___594)) in (
            (let temp___608 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___607))) in (
             ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___607))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___607)) then (
              ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___607))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___607)) then (
              (let temp___609 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___607)) in (
               (forall temp___610 : int.
                (if (( (Stations__station__T11s__TT12sP1.first <= temp___610) /\ (temp___610 <= Stations__station__T11s__TT12sP1.last) )) then (
                 (let temp___611 = (Array__Int__Types__list_od__data.get temp___609 temp___610) in (
                  ( (if ((Types__list_od__data.data__pred temp___611)) then (
                   (let temp___612 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___611)) in (
                    ( (if ((Types__list_od__data_type.origin__pred temp___612)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___612))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___612)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___612))) = 0)) else true) )))
                  ) else true) /\ (if ((Types__list_od__data.id__pred temp___611)) then (
                   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___611))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___607)) then (
              ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___607))) = 1)) else true) )))
            ))
           ) else true) )))
         ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___593)) then (
          ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___593))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T11s.head__pred temp___589)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T11s.rec__head (Railsystems__railsystem__T11s.__split_fields temp___589))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__railsystem.all_tracks__pred temp___560)) then (
   (let temp___613 = (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___560)) in (
   (let temp___614 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs temp___613))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs temp___613))) = 100) /\ (if ((Railsystems__railsystem__T13s.size__pred temp___613)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T13s.rec__size (Railsystems__railsystem__T13s.__split_fields temp___613))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T13s.elements__pred temp___613)) then (
     (let temp___615 = (Railsystems__railsystem__T13s.rec__elements (Railsystems__railsystem__T13s.__split_fields temp___613)) in (
      (forall temp___616 : int.
       (if (( (Railsystems__railsystem__T13s__TT14sP1.first <= temp___616) /\ (temp___616 <= Railsystems__railsystem__T13s__TT14sP1.last) )) then (
        (let temp___617 = (Array__Int__Stations__list_tracks__data.get temp___615 temp___616) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___617)) then (
          (let temp___618 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___617)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___618)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___618)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___618)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___618)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___618)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___618)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___618))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___617)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___617))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T13s.head__pred temp___613)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T13s.rec__head (Railsystems__railsystem__T13s.__split_fields temp___613))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "T28s" defined at railsystems.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrain__L27s__T28s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T30s" defined at railsystems.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrack__L29s__T30s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T32s" defined at railsystems.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addstation__L31s__T32s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T33s" defined at railsystems.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__settrainlocation__T33s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at railsystems.ads:101, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___619
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___619 #"railsystems.ads" 101 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"railsystems.ads" 101 0 0# "inline" 
   (temp___expr_623 : int) (temp___is_init_620 : bool) (temp___do_constant_621 : bool) (temp___do_toplevel_622 : bool)  =
  (if (( temp___is_init_620 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_623)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___624 : int) (temp___625 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_629 : BV32.t) (temp___is_init_626 : bool) (temp___do_constant_627 : bool) (temp___do_toplevel_628 : bool)  =
  (if (( temp___is_init_626 \/ (BV32.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_629)) else true)
 
 predicate default_initial_assumption #"system.ads" 108 0 0# "inline" 
   (temp___630 : BV32.t) (temp___631 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 108 0 0# "inline" 
   (temp___expr_635 : int) (temp___is_init_632 : bool) (temp___do_constant_633 : bool) (temp___do_toplevel_634 : bool)  =
  (if (( temp___is_init_632 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_635)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___636 : int) (temp___637 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_641 : int) (temp___is_init_638 : bool) (temp___do_constant_639 : bool) (temp___do_toplevel_640 : bool)  =
  (if (( temp___is_init_638 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_641)) else true)
 
 predicate default_initial_assumption #"system.ads" 100 0 0# "inline" 
   (temp___642 : int) (temp___643 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 100 0 0# "inline" 
   (temp___expr_647 : int) (temp___is_init_644 : bool) (temp___do_constant_645 : bool) (temp___do_toplevel_646 : bool)  =
  (if (( temp___is_init_644 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_647)) else true)
 
 predicate default_initial_assumption #"system.ads" 101 0 0# "inline" 
   (temp___648 : int) (temp___649 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 101 0 0# "inline" 
   (temp___expr_653 : int) (temp___is_init_650 : bool) (temp___do_constant_651 : bool) (temp___do_toplevel_652 : bool)  =
  (if (( temp___is_init_650 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_653)) else true)
 
 predicate default_initial_assumption #"system.ads" 102 0 0# "inline" 
   (temp___654 : int) (temp___655 : bool)  =
  true

end

(* Module giving axioms for type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__Tpriorities_mappingB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priorities_mapping__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 predicate dynamic_invariant #"system.ads" 102 0 0# "inline" 
   (temp___expr_659 : Array__Int__Standard__integer.map) (temp___is_init_656 : bool) (temp___do_constant_657 : bool) (temp___do_toplevel_658 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 161 0 0# "inline" 
   (temp___661 : Array__Int__Standard__integer.map) (temp___662 : bool)  =
  true

end

(* Module giving axioms for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T4s__axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__e_id

 axiom e_id__def_axiom :
  ((Types__list_od__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__e_id

 axiom e_id__def_axiom :
  ((Stations__list_tracks__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_trains__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_stations__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 4294967296)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 30)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 31)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 15)

end

(* Module for defining the value of constant "null_address" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV32.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__underlying_priorities__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__underlying_priorities
 use        Array__Int__Standard__integer
 use        System__underlying_priorities__aggregate_def
 use        Array__Int__Standard__integer

 axiom underlying_priorities__def_axiom :
  ((System__underlying_priorities.underlying_priorities ) = (System__underlying_priorities__aggregate_def.system__underlying_priorities__aggregate_def ( -15 ) ( -7 ) ( -6 ) ( -5 ) ( -4 ) ( -3 ) ( -2 ) ( -1 ) 0 1 2 3 4 5 6 15))

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__contains__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__contains

 val contains #"list.ads" 46 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Types__list_od__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_first.get_first a)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_first.get_first a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_first.get_first a) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_last.get_last a)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_last.get_last a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_last.get_last a) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Types__list_od__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_size.get_size a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element.get_element a location)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall location : int [(Types__list_od__get_element.get_element a location)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Types__list_od__get_element.get_element a location) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element_by_id.get_element_by_id a id)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall id : int [(Types__list_od__get_element_by_id.get_element_by_id a id)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Types__list_od__get_element_by_id.get_element_by_id a id) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__full__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__full

 val full #"list.ads" 62 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Types__list_od__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__append__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (d : Types__list_od__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__replace__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (location : int) (newvalue : Types__list_od__data.data) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (id : int) (newvalue : Types__list_od__data_type.data_type) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__init__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__contains__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__contains

 val contains #"list.ads" 46 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_first.get_first a)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_first.get_first a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_first.get_first a) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_last.get_last a)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_last.get_last a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_last.get_last a) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_size.get_size a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element.get_element a location)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall location : int [(Stations__list_tracks__get_element.get_element a location)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Stations__list_tracks__get_element.get_element a location) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall id : int [(Stations__list_tracks__get_element_by_id.get_element_by_id a id)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__full__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__full

 val full #"list.ads" 62 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__append__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (d : Stations__list_tracks__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__replace__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (location : int) (newvalue : Stations__list_tracks__data.data) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (id : int) (newvalue : Stations__list_tracks__data_type.data_type) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__init__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print #"sprint.ads" 3 0 0# 
   (s : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_natural__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_natural #"sprint.ads" 4 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_train_state__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_train_state #"sprint.ads" 5 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_station_locations__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_station_locations #"sprint.ads" 6 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__contains

 val contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_first.get_first a)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_first.get_first a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_first.get_first a) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_last.get_last a)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_last.get_last a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_last.get_last a) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_size.get_size a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element.get_element a location)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_trains__get_element.get_element a location)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_trains__get_element.get_element a location) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_trains__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__full

 val full #"list.ads" 62 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__append__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (d : Railsystems__list_trains__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__replace__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (location : int) (newvalue : Railsystems__list_trains__data.data) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (id : int) (newvalue : Railsystems__list_trains__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__contains

 val contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_first.get_first a)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_first.get_first a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_first.get_first a) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_last.get_last a)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_last.get_last a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_last.get_last a) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_size.get_size a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element.get_element a location)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_stations__get_element.get_element a location)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_stations__get_element.get_element a location) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_stations__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__full

 val full #"list.ads" 62 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__append__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (d : Railsystems__list_stations__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__replace__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (location : int) (newvalue : Railsystems__list_stations__data.data) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (id : int) (newvalue : Railsystems__list_stations__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at railsystems.ads:35, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val init #"railsystems.ads" 35 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrain" defined at railsystems.ads:36, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__list_trains__get_element
 use        Railsystems__list_trains__get_element_by_id
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrain #"railsystems.ads" 36 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) : unit
  requires { ( ( ( (id > 0) /\ (id < 101) ) /\ (if (( (id > 0) /\ (id < 101) )) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element_by_id.get_element_by_id (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) id)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element.get_element (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrack" defined at railsystems.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_element
 use        Stations__list_tracks__get_element_by_id
 use        Railsystems__railsystem__T13s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrack #"railsystems.ads" 46 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) (origin : int) (destination : int) (lineorigin : int) (linedestination : int) : unit
  requires { ( ( ( ( ( ( ( ( ( (id >= 1) /\ (id <= 100) ) /\ (origin <> 0) ) /\ (destination <> 0) ) /\ (lineorigin <> 0) ) /\ (linedestination <> 0) ) /\ (origin <> destination) ) /\ (lineorigin <> linedestination) ) /\ (if ((id <> 0)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element_by_id.get_element_by_id (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) id)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addstation" defined at railsystems.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addstation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size
 use        Railsystems__list_stations__get_element
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addstation #"railsystems.ads" 67 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (stationid : int) (location : int) : unit
  requires { ( ( ( (stationid >= 1) /\ (stationid <= 100) ) /\ (if ((stationid <> 0)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) stationid)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> stationid) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacestation" defined at railsystems.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacestation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__station
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacestation #"railsystems.ads" 79 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (stationid : int) (station : Stations__station.station) : unit
  requires { ( ( (stationid > 0) /\ ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields station))) <> 0) ) /\ (stationid < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrain" defined at railsystems.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrain #"railsystems.ads" 85 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (trainid : int) (train : Trains__train.train) : unit
  requires { ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) > 0) /\ ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) <> 0) ) /\ ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrack" defined at railsystems.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Tracks__track
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrack #"railsystems.ads" 91 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (trackid : int) (track : Tracks__track.track) : unit
  requires { ( ( (trackid > 0) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields track))) <> 0) ) /\ (trackid < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addincomingoutgoingtracksforeachstation #"railsystems.ads" 97 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "settrainlocation" defined at railsystems.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__settrainlocation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__natural
 use        Array__Int__Standard__character
 use        Tracks__track
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Temp___619

 val settrainlocation #"railsystems.ads" 98 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (train__split_fields : Trains__train.__split_fields__ref) (locationname : Standard__string.string) (locationid : int) : unit
  requires { ( ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) /\ ((Array__Int__Standard__character.bool_eq (Standard__string.to_array locationname) (Standard__string.first locationname) (Standard__string.last locationname) Temp___619.temp___619 1 4) = True) ) /\ (locationid >= 1) ) /\ (locationid <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) }
  ensures { ( ( ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) }
  writes {train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "go" defined at railsystems.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__go__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val go #"railsystems.ads" 106 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (count : int) : unit
  requires { ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) }
  ensures { ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "getstationbyname" defined at railsystems.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__getstationbyname__axiom
 use import "_gnatprove_standard".Main
 use        Types__station_locations
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val getstationbyname #"railsystems.ads" 122 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station
  requires { true }
  ensures { ( (result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation)) /\ (Stations__station__axiom.dynamic_invariant result True False True) ) }
 
 axiom getstationbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall stationlocation : int [(Railsystems__getstationbyname.getstationbyname r_system stationlocation)].
   ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range stationlocation) ) -> (let result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation) in (
    (Stations__station__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "preparetrain" defined at railsystems.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__preparetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val preparetrain #"railsystems.ads" 109 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (origin : int) (destination : int) (starttime : int) : unit
  requires { ( ( ( ( (origin <> 0) /\ (destination <> 0) ) /\ (origin <> destination) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin)))) = 0) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) }
  ensures { ( ( ( ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = origin) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = destination) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "gettrackbyname" defined at railsystems.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrackbyname__axiom
 use import "_gnatprove_standard".Main
 use        Types__station_locations
 use        Tracks__track
 use        Tracks__track__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname

 val gettrackbyname #"railsystems.ads" 123 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track
  requires { true }
  ensures { ( (result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination)) /\ (Tracks__track__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrackbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall origin destination : int [(Railsystems__gettrackbyname.gettrackbyname r_system origin destination)].
   ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range origin) ) /\ (Types__station_locations.in_range destination) ) -> (let result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination) in (
    (Tracks__track__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "gettrainbyid" defined at railsystems.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrainbyid__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrainbyid

 val gettrainbyid #"railsystems.ads" 124 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train
  requires { ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) }
  ensures { ( (result = (Railsystems__gettrainbyid.gettrainbyid r_system id)) /\ (Trains__train__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrainbyid__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall id : int [(Railsystems__gettrainbyid.gettrainbyid r_system id)].
   ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Standard__natural.in_range id) ) /\ ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) ) -> (let result = (Railsystems__gettrainbyid.gettrainbyid r_system id) in (
    (Trains__train__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "main" defined at main.adb:8, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__axiom
 use import "_gnatprove_standard".Main

 val main #"main.adb" 8 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end
