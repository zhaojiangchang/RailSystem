(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__Tmax_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tmax_sizeB #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  ( -128 )
 
 function last #"types.ads" 3 0 0# 
   : int =
  127
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tmax_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tmax_sizeB__ref #"types.ads" 3 0 0# =
  { mutable tmax_sizeB__content "model_trace:" : tmax_sizeB }
 
 function tmax_sizeB__ref___projection #"types.ads" 3 0 0# 
   (a : tmax_sizeB__ref) : tmax_sizeB =
  a.tmax_sizeB__content
 
 meta "model_projection" function tmax_sizeB__ref___projection
 
 meta "inline : no" function tmax_sizeB__ref___projection
 
 val tmax_sizeB__havoc #"types.ads" 3 0 0# 
   (x : tmax_sizeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__max_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type max_size #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  0
 
 function last #"types.ads" 3 0 0# 
   : int =
  100
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = max_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type max_size__ref #"types.ads" 3 0 0# =
  { mutable max_size__content "model_trace:" : max_size }
 
 function max_size__ref___projection #"types.ads" 3 0 0# 
   (a : max_size__ref) : max_size =
  a.max_size__content
 
 meta "model_projection" function max_size__ref___projection
 
 meta "inline : no" function max_size__ref___projection
 
 val max_size__havoc #"types.ads" 3 0 0# 
   (x : max_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Types__train_state
 use import "_gnatprove_standard".Main
 use import "int".Int

 type train_state #"types.ads" 8 0 0# 
 
 function first #"types.ads" 8 0 0# 
   : int =
  0
 
 function last #"types.ads" 8 0 0# 
   : int =
  3
 
 predicate in_range #"types.ads" 8 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = train_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type train_state__ref #"types.ads" 8 0 0# =
  { mutable train_state__content "model_trace:" : train_state }
 
 function train_state__ref___projection #"types.ads" 8 0 0# 
   (a : train_state__ref) : train_state =
  a.train_state__content
 
 meta "model_projection" function train_state__ref___projection
 
 meta "inline : no" function train_state__ref___projection
 
 val train_state__havoc #"types.ads" 8 0 0# 
   (x : train_state__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Types__station_locations
 use import "_gnatprove_standard".Main
 use import "int".Int

 type station_locations #"types.ads" 11 0 0# 
 
 function first #"types.ads" 11 0 0# 
   : int =
  0
 
 function last #"types.ads" 11 0 0# 
   : int =
  8
 
 predicate in_range #"types.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = station_locations, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type station_locations__ref #"types.ads" 11 0 0# =
  { mutable station_locations__content "model_trace:" : station_locations }
 
 function station_locations__ref___projection #"types.ads" 11 0 0# 
   (a : station_locations__ref) : station_locations =
  a.station_locations__content
 
 meta "model_projection" function station_locations__ref___projection
 
 meta "inline : no" function station_locations__ref___projection
 
 val station_locations__havoc #"types.ads" 11 0 0# 
   (x : station_locations__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Types__timetable
 use import "_gnatprove_standard".Main
 use import "int".Int

 type timetable #"types.ads" 14 0 0# 
 
 function first #"types.ads" 14 0 0# 
   : int =
  0
 
 function last #"types.ads" 14 0 0# 
   : int =
  14
 
 predicate in_range #"types.ads" 14 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = timetable, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type timetable__ref #"types.ads" 14 0 0# =
  { mutable timetable__content "model_trace:" : timetable }
 
 function timetable__ref___projection #"types.ads" 14 0 0# 
   (a : timetable__ref) : timetable =
  a.timetable__content
 
 meta "model_projection" function timetable__ref___projection
 
 meta "inline : no" function timetable__ref___projection
 
 val timetable__havoc #"types.ads" 14 0 0# 
   (x : timetable__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Types__odrecord
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 type __split_fields #"types.ads" 14 0 0# =
  { rec__origin "model_trace:.6811" : Types__station_locations.station_locations; rec__destination "model_trace:.6822" : Types__station_locations.station_locations }
 
 function __split_fields_Origin__projection #"types.ads" 11 0 0# "model_trace:.6811" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin__projection
 
 meta "inline : no" function __split_fields_Origin__projection
 
 function __split_fields_Destination__projection #"types.ads" 16 0 0# "model_trace:.6822" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination__projection
 
 meta "inline : no" function __split_fields_Destination__projection
 
 type __split_fields__ref #"types.ads" 16 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"types.ads" 16 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"types.ads" 16 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type odrecord #"types.ads" 16 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function odrecord___projection #"types.ads" 16 0 0# 
   (a : odrecord) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function odrecord___projection
 
 meta "inline : no" function odrecord___projection
 
 predicate origin__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__origin_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__destination_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 function bool_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool =
  (if (( ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) )) then (
   True) else (
   False))
 
 function user_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool
 
 function value__size #"types.ads" 16 0 0# 
   : int
 
 function object__size #"types.ads" 16 0 0# 
   (a : odrecord) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : odrecord.
   ((object__size a) >= 0))
 
 function dummy #"types.ads" 16 0 0# 
   : odrecord
 
 type odrecord__ref #"types.ads" 16 0 0# =
  { mutable odrecord__content "model_trace:" : odrecord }
 
 function odrecord__ref___projection #"types.ads" 16 0 0# 
   (a : odrecord__ref) : odrecord =
  a.odrecord__content
 
 meta "model_projection" function odrecord__ref___projection
 
 meta "inline : no" function odrecord__ref___projection
 
 val odrecord__havoc #"types.ads" 16 0 0# 
   (x : odrecord__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data_type
 use export Types__odrecord
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 22 0 0# =
  odrecord
 
 function to_base #"types.ads" 16 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 22 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 22 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref___projection #"list.ads" 22 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref___projection
 
 meta "inline : no" function data_type__ref___projection
 
 val data_type__havoc #"list.ads" 22 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 23 0 0# "model" "model_trace:20539" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_size" defined at list.ads:24 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__max_size
 use import "_gnatprove_standard".Main

 function max_size #"list.ads" 24 0 0# "model" "model_trace:20548" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:25 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__no_found
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function no_found #"list.ads" 25 0 0# "model_projected" "model_trace:20557" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:95 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__list_od__data_type

 type __split_fields #"list.ads" 22 0 0# =
  { rec__data "model_trace:.20400" : Types__list_od__data_type.data_type; rec__id "model_trace:.20410" : Standard__natural.natural }
 
 function __split_fields_DATA__projection #"system.ads" 1 0 0# "model_trace:.20400" 
   (a : __split_fields) : Types__list_od__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA__projection
 
 meta "inline : no" function __split_fields_DATA__projection
 
 function __split_fields_ID__projection #"list.ads" 95 0 0# "model_trace:.20410" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID__projection
 
 meta "inline : no" function __split_fields_ID__projection
 
 type __split_fields__ref #"list.ads" 95 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"list.ads" 95 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"list.ads" 95 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 95 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data___projection #"list.ads" 95 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data___projection
 
 meta "inline : no" function data___projection
 
 predicate data__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 95 0 0# 
   (a : data) : Types__list_od__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 95 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Types__list_od__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 95 0 0# 
   : int
 
 function object__size #"list.ads" 95 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 95 0 0# 
   : data
 
 type data__ref #"list.ads" 95 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref___projection #"list.ads" 95 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref___projection
 
 meta "inline : no" function data__ref___projection
 
 val data__havoc #"list.ads" 95 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:103 instantiated at types.ads:21, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data

 function index_I1_one #"list.ads" 95 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 95 0 0# =
  Types__list_od__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:103 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"list.ads" 95 0 0# =
  Types__list_od__data.data
 
 function index_1_id #"list.ads" 95 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 103 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 103 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref___projection #"list.ads" 103 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref___projection
 
 meta "inline : no" function list_array__ref___projection
 
 val list_array__havoc #"list.ads" 103 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:108 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t4s #"list.ads" 108 0 0# 
 
 function first #"list.ads" 108 0 0# 
   : int =
  1
 
 function last #"list.ads" 108 0 0# 
   : int =
  100
 
 predicate in_range #"list.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t4s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t4s__ref #"list.ads" 108 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref___projection #"list.ads" 108 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref___projection
 
 meta "inline : no" function t4s__ref___projection
 
 val t4s__havoc #"list.ads" 108 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at list.ads:108 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"list.ads" 108 0 0# =
  Types__list_od__data.data
 
 function first #"list.ads" 95 0 0# 
   : int =
  1
 
 function last #"list.ads" 95 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:105 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__list_od__list_ptr__T5s
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data

 type __split_fields #"list.ads" 95 0 0# =
  { rec__size "model_trace:.20444" : Standard__natural.natural; rec__elements "model_trace:.20455" : Array__Int__Types__list_od__data.map; rec__head "model_trace:.20470" : Standard__positive.positive; rec__list_max_size "model_trace:.20481" : Standard__positive.positive }
 
 function __split_fields_SIZE__projection #"system.ads" 1 0 0# "model_trace:.20444" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE__projection
 
 meta "inline : no" function __split_fields_SIZE__projection
 
 function __split_fields_ELEMENTS__projection #"list.ads" 105 0 0# "model_trace:.20455" 
   (a : __split_fields) : Array__Int__Types__list_od__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS__projection
 
 meta "inline : no" function __split_fields_ELEMENTS__projection
 
 function __split_fields_HEAD__projection #"list.ads" 105 0 0# "model_trace:.20470" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD__projection
 
 meta "inline : no" function __split_fields_HEAD__projection
 
 function __split_fields_LIST_MAX_SIZE__projection #"list.ads" 105 0 0# "model_trace:.20481" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__list_max_size
 
 meta "model_projection" function __split_fields_LIST_MAX_SIZE__projection
 
 meta "inline : no" function __split_fields_LIST_MAX_SIZE__projection
 
 type __split_fields__ref #"list.ads" 105 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"list.ads" 105 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"list.ads" 105 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 105 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function list_ptr___projection #"list.ads" 105 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr___projection
 
 meta "inline : no" function list_ptr___projection
 
 predicate size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Array__Int__Types__list_od__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 predicate list_max_size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__list_max_size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (list_max_size__pred a) }
  ensures { (result = a.__split_fields.rec__list_max_size) }
 
 function bool_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) /\ ((Types__list_od__list_ptr__T5s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__list_max_size) = (Standard__positive.to_rep b.__split_fields.rec__list_max_size)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 105 0 0# 
   : int
 
 function object__size #"list.ads" 105 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 105 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 105 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref___projection #"list.ads" 105 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref___projection
 
 meta "inline : no" function list_ptr__ref___projection
 
 val list_ptr__havoc #"list.ads" 105 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 49 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 49 0 0# "model_projected" "model_trace:20169" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__contains
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function contains #"list.ads" 49 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:52 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_size__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 52 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:52 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:52 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_size
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function get_size #"list.ads" 52 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 55 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 55 0 0# "model" "model_trace:20216" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element #"list.ads" 55 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 58 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 58 0 0# "model" "model_trace:20244" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element_by_id #"list.ads" 58 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__full__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 60 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__full
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function full #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 62 0 0# "model_projected" "model_trace:20300" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 62 0 0# "model" "model_trace:20309" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 87 0 0# "model" "model_trace:20354" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function newvalue #"list.ads" 87 0 0# "model_projected" "model_trace:20363" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:3, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 3 0 0# "model_projected" "model_trace:7605" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:3, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 4 0 0# "model_projected" "model_trace:7623" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 4 0 0# "model" "model_trace:7632" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 5 0 0# "model_projected" "model_trace:7650" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 5 0 0# "model" "model_trace:7659" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 8 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 6 0 0# "model_projected" "model_trace:7679" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 6 0 0# "model" "model_trace:7688" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:8772" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type address #"system.ads" 108 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 108 0 0# 
   : BV32.t
 
 function first #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"system.ads" 108 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 108 0 0# 
   : int =
  4294967295
 
 predicate in_range #"system.ads" 108 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"system.ads" 108 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 108 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 108 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 108 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_address #"system.ads" 69 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:9121" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 97 0 0# "model" "model_trace:9137" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 98 0 0# "model" "model_trace:9147" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 100 0 0# 
 
 function first #"system.ads" 100 0 0# 
   : int =
  0
 
 function last #"system.ads" 100 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 100 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 100 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 100 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 100 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 101 0 0# 
 
 function first #"system.ads" 101 0 0# 
   : int =
  0
 
 function last #"system.ads" 101 0 0# 
   : int =
  30
 
 predicate in_range #"system.ads" 101 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 101 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 101 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 101 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 102 0 0# 
 
 function first #"system.ads" 102 0 0# 
   : int =
  31
 
 function last #"system.ads" 102 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 102 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 102 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 102 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 102 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 104 0 0# "model" "model_trace:9199" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 101 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 121 0 0# "model" "model_trace:9229" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 121 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 122 0 0# "model" "model_trace:9239" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 122 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 123 0 0# "model" "model_trace:9249" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 123 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 124 0 0# "model" "model_trace:9259" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 125 0 0# "model" "model_trace:9269" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 126 0 0# "model" "model_trace:9279" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 126 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 127 0 0# "model" "model_trace:9289" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 127 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 128 0 0# "model" "model_trace:9299" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 128 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 129 0 0# "model" "model_trace:9309" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 129 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 130 0 0# "model" "model_trace:9319" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 130 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 131 0 0# "model" "model_trace:9329" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 131 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 132 0 0# "model" "model_trace:9339" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 132 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 133 0 0# "model" "model_trace:9349" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 133 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 134 0 0# "model" "model_trace:9359" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 135 0 0# "model" "model_trace:9369" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 135 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 136 0 0# "model" "model_trace:9379" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 136 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 137 0 0# "model" "model_trace:9389" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 137 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 138 0 0# "model" "model_trace:9399" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 138 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 139 0 0# "model" "model_trace:9409" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 139 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 140 0 0# "model" "model_trace:9419" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 140 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 141 0 0# "model" "model_trace:9429" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 141 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 142 0 0# "model" "model_trace:9439" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 143 0 0# "model" "model_trace:9449" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 143 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 144 0 0# "model" "model_trace:9459" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 144 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 145 0 0# "model" "model_trace:9469" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 145 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 146 0 0# "model" "model_trace:9479" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 146 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "Tpriorities_mappingB" defined at system.ads:161, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 function index_I1_one #"system.ads" 146 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 146 0 0# =
  Standard__integer.integer
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__integer.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__Tpriorities_mappingB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        System__any_priority
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 1 0 0# =
  Standard__integer.integer
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__any_priority.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpriorities_mappingB #"system.ads" 161 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpriorities_mappingB__ref #"system.ads" 161 0 0# =
  { mutable tpriorities_mappingB__content "model_trace:" : tpriorities_mappingB }
 
 function tpriorities_mappingB__ref___projection #"system.ads" 161 0 0# 
   (a : tpriorities_mappingB__ref) : tpriorities_mappingB =
  a.tpriorities_mappingB__content
 
 meta "model_projection" function tpriorities_mappingB__ref___projection
 
 meta "inline : no" function tpriorities_mappingB__ref___projection
 
 val tpriorities_mappingB__havoc #"system.ads" 161 0 0# 
   (x : tpriorities_mappingB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__priorities_mapping
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 161 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"system.ads" 166 0 0# 
 
 function first #"system.ads" 166 0 0# 
   : int =
  0
 
 function last #"system.ads" 166 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 166 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"system.ads" 166 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref___projection #"system.ads" 166 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref___projection
 
 meta "inline : no" function t3s__ref___projection
 
 val t3s__havoc #"system.ads" 166 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 166 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__underlying_priorities
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer

 function underlying_priorities #"system.ads" 165 0 0# "model_projected" "model_trace:9505" 
   : Array__Int__Standard__integer.map
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end

(* Module for axiomatizing type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttask_storage_sizeB #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_storage_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttask_storage_sizeB__ref #"s-parame.ads" 58 0 0# =
  { mutable ttask_storage_sizeB__content "model_trace:" : ttask_storage_sizeB }
 
 function ttask_storage_sizeB__ref___projection #"s-parame.ads" 58 0 0# 
   (a : ttask_storage_sizeB__ref) : ttask_storage_sizeB =
  a.ttask_storage_sizeB__content
 
 meta "model_projection" function ttask_storage_sizeB__ref___projection
 
 meta "inline : no" function ttask_storage_sizeB__ref___projection
 
 val ttask_storage_sizeB__havoc #"s-parame.ads" 58 0 0# 
   (x : ttask_storage_sizeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_storage_size #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_storage_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_storage_size__ref #"s-parame.ads" 58 0 0# =
  { mutable task_storage_size__content "model_trace:" : task_storage_size }
 
 function task_storage_size__ref___projection #"s-parame.ads" 58 0 0# 
   (a : task_storage_size__ref) : task_storage_size =
  a.task_storage_size__content
 
 meta "model_projection" function task_storage_size__ref___projection
 
 meta "inline : no" function task_storage_size__ref___projection
 
 val task_storage_size__havoc #"s-parame.ads" 58 0 0# 
   (x : task_storage_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsize_typeB #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsize_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tsize_typeB__ref #"s-parame.ads" 61 0 0# =
  { mutable tsize_typeB__content "model_trace:" : tsize_typeB }
 
 function tsize_typeB__ref___projection #"s-parame.ads" 61 0 0# 
   (a : tsize_typeB__ref) : tsize_typeB =
  a.tsize_typeB__content
 
 meta "model_projection" function tsize_typeB__ref___projection
 
 meta "inline : no" function tsize_typeB__ref___projection
 
 val tsize_typeB__havoc #"s-parame.ads" 61 0 0# 
   (x : tsize_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type size_type #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = size_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_type__ref #"s-parame.ads" 61 0 0# =
  { mutable size_type__content "model_trace:" : size_type }
 
 function size_type__ref___projection #"s-parame.ads" 61 0 0# 
   (a : size_type__ref) : size_type =
  a.size_type__content
 
 meta "model_projection" function size_type__ref___projection
 
 meta "inline : no" function size_type__ref___projection
 
 val size_type__havoc #"s-parame.ads" 61 0 0# 
   (x : size_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__unspecified_size
 use import "_gnatprove_standard".Main

 function unspecified_size #"s-parame.ads" 64 0 0# "model" "model_trace:9682" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for axiomatizing type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage
 use import "_gnatprove_standard".Main
 use import "int".Int

 type percentage #"s-parame.ads" 67 0 0# 
 
 function first #"s-parame.ads" 67 0 0# 
   : int =
  ( -1 )
 
 function last #"s-parame.ads" 67 0 0# 
   : int =
  100
 
 predicate in_range #"s-parame.ads" 67 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = percentage, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type percentage__ref #"s-parame.ads" 67 0 0# =
  { mutable percentage__content "model_trace:" : percentage }
 
 function percentage__ref___projection #"s-parame.ads" 67 0 0# 
   (a : percentage__ref) : percentage =
  a.percentage__content
 
 meta "model_projection" function percentage__ref___projection
 
 meta "inline : no" function percentage__ref___projection
 
 val percentage__havoc #"s-parame.ads" 67 0 0# 
   (x : percentage__ref) : unit
  writes {x}

end

(* Module for defining the constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__dynamic
 use import "_gnatprove_standard".Main

 function dynamic #"s-parame.ads" 68 0 0# "model" "model_trace:9709" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_percentage
 use import "_gnatprove_standard".Main

 function sec_stack_percentage #"s-parame.ads" 75 0 0# "model" "model_trace:9720" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 67 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_dynamic
 use import "_gnatprove_standard".Main

 function sec_stack_dynamic #"s-parame.ads" 78 0 0# "model" "model_trace:9730" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 78 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__default_stack_size
 use import "_gnatprove_standard".Main

 function default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int

end

(* Module for possibly declaring a logic function for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__minimum_stack_size
 use import "_gnatprove_standard".Main

 function minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "size" defined at s-parame.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__adjust_storage_size__size
 use import "_gnatprove_standard".Main

 function size #"s-parame.ads" 87 0 0# "model" "model_trace:9769" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__adjust_storage_size
 use import "_gnatprove_standard".Main

 function adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int

end

(* Module for defining the constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_env_stack_size
 use import "_gnatprove_standard".Main

 function default_env_stack_size #"s-parame.ads" 96 0 0# "model" "model_trace:9783" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__stack_grows_down
 use import "_gnatprove_standard".Main

 function stack_grows_down #"s-parame.ads" 101 0 0# "model" "model_trace:9793" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 101 0 0# 
   : int

end

(* Module for axiomatizing type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type c_address #"s-parame.ads" 116 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-parame.ads" 116 0 0# 
   : int =
  0
 
 function last_int #"s-parame.ads" 116 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-parame.ads" 116 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-parame.ads" 116 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = c_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type c_address__ref #"s-parame.ads" 116 0 0# =
  { mutable c_address__content "model_trace:" : c_address }
 
 function c_address__ref___projection #"s-parame.ads" 116 0 0# 
   (a : c_address__ref) : c_address =
  a.c_address__content
 
 meta "model_projection" function c_address__ref___projection
 
 meta "inline : no" function c_address__ref___projection
 
 val c_address__havoc #"s-parame.ads" 116 0 0# 
   (x : c_address__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-parame.ads" 116 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  13
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__c_malloc_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function c_malloc_linkname #"s-parame.ads" 119 0 0# "model_projected" "model_trace:9836" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__garbage_collected
 use import "_gnatprove_standard".Main

 function garbage_collected #"s-parame.ads" 142 0 0# "model" "model_trace:9846" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__single_lock
 use import "_gnatprove_standard".Main

 function single_lock #"s-parame.ads" 157 0 0# "model" "model_trace:9856" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 157 0 0# 
   : int

end

(* Module for defining the constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__no_abort
 use import "_gnatprove_standard".Main

 function no_abort #"s-parame.ads" 170 0 0# "model" "model_trace:9866" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 170 0 0# 
   : int

end

(* Module for defining the constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__runtime_traces
 use import "_gnatprove_standard".Main

 function runtime_traces #"s-parame.ads" 190 0 0# "model" "model_trace:9885" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 190 0 0# 
   : int

end

(* Module for axiomatizing type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__Tbig_stringP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tbig_stringP1 #"s-stalib.ads" 62 0 0# 
 
 function first #"s-stalib.ads" 62 0 0# 
   : int =
  1
 
 function last #"s-stalib.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stalib.ads" 62 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tbig_stringP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tbig_stringP1__ref #"s-stalib.ads" 62 0 0# =
  { mutable tbig_stringP1__content "model_trace:" : tbig_stringP1 }
 
 function tbig_stringP1__ref___projection #"s-stalib.ads" 62 0 0# 
   (a : tbig_stringP1__ref) : tbig_stringP1 =
  a.tbig_stringP1__content
 
 meta "model_projection" function tbig_stringP1__ref___projection
 
 meta "inline : no" function tbig_stringP1__ref___projection
 
 val tbig_stringP1__havoc #"s-stalib.ads" 62 0 0# 
   (x : tbig_stringP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__big_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-stalib.ads" 62 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__to_ptrGP4411__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  4294967295
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref___projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref___projection
 
 meta "inline : no" function source__ref___projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__to_ptrGP4411__to_ptr__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s #"a-unccon.ads" 20 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__to_ptrGP4411__to_ptr__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-unccon.ads" 17 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  17
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__constraint_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function constraint_error_name #"s-stalib.ads" 142 0 0# "model_projected" "model_trace:10111" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__program_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function program_error_name #"s-stalib.ads" 143 0 0# "model_projected" "model_trace:10125" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__storage_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function storage_error_name #"s-stalib.ads" 144 0 0# "model_projected" "model_trace:10139" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__tasking_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function tasking_error_name #"s-stalib.ads" 145 0 0# "model_projected" "model_trace:10153" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__abort_signal_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function abort_signal_name #"s-stalib.ads" 146 0 0# "model_projected" "model_trace:10167" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__numeric_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function numeric_error_name #"s-stalib.ads" 148 0 0# "model_projected" "model_trace:10181" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__exception_trace_kind
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_trace_kind #"s-stalib.ads" 218 0 0# 
 
 function first #"s-stalib.ads" 218 0 0# 
   : int =
  0
 
 function last #"s-stalib.ads" 218 0 0# 
   : int =
  3
 
 predicate in_range #"s-stalib.ads" 218 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = exception_trace_kind, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type exception_trace_kind__ref #"s-stalib.ads" 218 0 0# =
  { mutable exception_trace_kind__content "model_trace:" : exception_trace_kind }
 
 function exception_trace_kind__ref___projection #"s-stalib.ads" 218 0 0# 
   (a : exception_trace_kind__ref) : exception_trace_kind =
  a.exception_trace_kind__content
 
 meta "model_projection" function exception_trace_kind__ref___projection
 
 meta "inline : no" function exception_trace_kind__ref___projection
 
 val exception_trace_kind__havoc #"s-stalib.ads" 218 0 0# 
   (x : exception_trace_kind__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type traceback_entry #"s-traent.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-traent.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-traent.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-traent.ads" 50 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-traent.ads" 50 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = traceback_entry, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type traceback_entry__ref #"s-traent.ads" 50 0 0# =
  { mutable traceback_entry__content "model_trace:" : traceback_entry }
 
 function traceback_entry__ref___projection #"s-traent.ads" 50 0 0# 
   (a : traceback_entry__ref) : traceback_entry =
  a.traceback_entry__content
 
 meta "model_projection" function traceback_entry__ref___projection
 
 meta "inline : no" function traceback_entry__ref___projection
 
 val traceback_entry__havoc #"s-traent.ads" 50 0 0# 
   (x : traceback_entry__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__null_tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_tb_entry #"s-traent.ads" 53 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "tracebacks_array" defined at s-traent.ads:56, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry

 function index_I1_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV32_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__traceback_entries__traceback_entry.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function index_1_id #"s-traent.ads" 50 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tracebacks_array #"s-traent.ads" 56 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tracebacks_array__ref #"s-traent.ads" 56 0 0# =
  { mutable tracebacks_array__content "model_trace:" : tracebacks_array }
 
 function tracebacks_array__ref___projection #"s-traent.ads" 56 0 0# 
   (a : tracebacks_array__ref) : tracebacks_array =
  a.tracebacks_array__content
 
 meta "model_projection" function tracebacks_array__ref___projection
 
 meta "inline : no" function tracebacks_array__ref___projection
 
 val tracebacks_array__havoc #"s-traent.ads" 56 0 0# 
   (x : tracebacks_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__pc_for__tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tb_entry #"s-traent.ads" 58 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__pc_for__tb_entry__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__pc_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV32.t) : BV32.t

end

(* Module for defining the constant "pc" defined at s-traent.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__tb_entry_for__pc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pc #"s-traent.ads" 63 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at s-traent.ads:63, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__tb_entry_for__pc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__tb_entry_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV32.t) : BV32.t

end

(* Module for axiomatizing type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_id
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields___projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields___projection
 
 meta "inline : no" function __split_fields___projection
 
 type __split_fields__ref #"s-traent.ads" 50 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"s-traent.ads" 50 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type exception_id #"a-except.ads" 58 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function exception_id___projection #"a-except.ads" 58 0 0# 
   (a : exception_id) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function exception_id___projection
 
 meta "inline : no" function exception_id___projection
 
 function bool_eq #"a-except.ads" 58 0 0# 
   (a : exception_id) (b : exception_id) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-except.ads" 58 0 0# 
   (a : exception_id) (b : exception_id) : bool
 
 function value__size #"a-except.ads" 58 0 0# 
   : int
 
 function object__size #"a-except.ads" 58 0 0# 
   (a : exception_id) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : exception_id.
   ((object__size a) >= 0))
 
 function dummy #"a-except.ads" 58 0 0# 
   : exception_id
 
 type exception_id__ref #"a-except.ads" 58 0 0# =
  { mutable exception_id__content "model_trace:" : exception_id }
 
 function exception_id__ref___projection #"a-except.ads" 58 0 0# 
   (a : exception_id__ref) : exception_id =
  a.exception_id__content
 
 meta "model_projection" function exception_id__ref___projection
 
 meta "inline : no" function exception_id__ref___projection
 
 val exception_id__havoc #"a-except.ads" 58 0 0# 
   (x : exception_id__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_id" defined at a-except.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function null_id #"a-except.ads" 61 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_id" defined at a-except.ads:61, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t5s #"a-except.ads" 297 0 0# 
 
 function first #"a-except.ads" 297 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 297 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 297 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t5s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t5s__ref #"a-except.ads" 297 0 0# =
  { mutable t5s__content "model_trace:" : t5s }
 
 function t5s__ref___projection #"a-except.ads" 297 0 0# 
   (a : t5s__ref) : t5s =
  a.t5s__content
 
 meta "model_projection" function t5s__ref___projection
 
 meta "inline : no" function t5s__ref___projection
 
 val t5s__havoc #"a-except.ads" 297 0 0# 
   (x : t5s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 297 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"a-except.ads" 312 0 0# 
 
 function first #"a-except.ads" 312 0 0# 
   : int =
  0
 
 function last #"a-except.ads" 312 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 312 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t7s__ref #"a-except.ads" 312 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"a-except.ads" 312 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"a-except.ads" 312 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__Ttracebacks_arrayP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttracebacks_arrayP1 #"a-except.ads" 283 0 0# 
 
 function first #"a-except.ads" 283 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 283 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 283 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttracebacks_arrayP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttracebacks_arrayP1__ref #"a-except.ads" 283 0 0# =
  { mutable ttracebacks_arrayP1__content "model_trace:" : ttracebacks_arrayP1 }
 
 function ttracebacks_arrayP1__ref___projection #"a-except.ads" 283 0 0# 
   (a : ttracebacks_arrayP1__ref) : ttracebacks_arrayP1 =
  a.ttracebacks_arrayP1__content
 
 meta "model_projection" function ttracebacks_arrayP1__ref___projection
 
 meta "inline : no" function ttracebacks_arrayP1__ref___projection
 
 val ttracebacks_arrayP1__havoc #"a-except.ads" 283 0 0# 
   (x : ttracebacks_arrayP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 283 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "exception_occurrence" defined at a-except.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_2__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_2__projection
 
 meta "inline : no" function __split_fields_2__projection
 
 type __split_fields__ref #"s-traent.ads" 50 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"s-traent.ads" 50 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type exception_occurrence #"a-except.ads" 63 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function exception_occurrence___projection #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function exception_occurrence___projection
 
 meta "inline : no" function exception_occurrence___projection
 
 function bool_eq #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) (b : exception_occurrence) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) (b : exception_occurrence) : bool
 
 function value__size #"a-except.ads" 63 0 0# 
   : int
 
 function object__size #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : exception_occurrence.
   ((object__size a) >= 0))
 
 function dummy #"a-except.ads" 63 0 0# 
   : exception_occurrence
 
 type exception_occurrence__ref #"a-except.ads" 63 0 0# =
  { mutable exception_occurrence__content "model_trace:" : exception_occurrence }
 
 function exception_occurrence__ref___projection #"a-except.ads" 63 0 0# 
   (a : exception_occurrence__ref) : exception_occurrence =
  a.exception_occurrence__content
 
 meta "model_projection" function exception_occurrence__ref___projection
 
 meta "inline : no" function exception_occurrence__ref___projection
 
 val exception_occurrence__havoc #"a-except.ads" 63 0 0# 
   (x : exception_occurrence__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_occurrence
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function null_occurrence #"a-except.ads" 68 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_occurrence__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at a-except.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 70 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string

end

(* Module for defining the constant "x" defined at a-except.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 72 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__2__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "id" defined at a-except.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 75 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_id

 function wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string

end

(* Module for defining the constant "x" defined at a-except.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 79 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__2__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string

end

(* Module for defining the constant "id" defined at a-except.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 83 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_id

 function wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string

end

(* Module for defining the constant "x" defined at a-except.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 87 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__2__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string

end

(* Module for defining the constant "e" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 90 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 90 0 0# "model_projected" "model_trace:7957" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_message__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 94 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_message__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_message
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "x" defined at a-except.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 96 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_identity__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 102 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_identity__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_identity
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_occurrence

 function exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id

end

(* Module for defining the constant "x" defined at a-except.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_information__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 104 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_information__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_information
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "source" defined at a-except.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 125 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at a-except.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__2__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 128 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__code_loc
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type code_loc #"a-except.ads" 159 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"a-except.ads" 159 0 0# 
   : int =
  0
 
 function last_int #"a-except.ads" 159 0 0# 
   : int =
  4294967295
 
 predicate in_range #"a-except.ads" 159 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"a-except.ads" 159 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = code_loc, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type code_loc__ref #"a-except.ads" 159 0 0# =
  { mutable code_loc__content "model_trace:" : code_loc }
 
 function code_loc__ref___projection #"a-except.ads" 159 0 0# 
   (a : code_loc__ref) : code_loc =
  a.code_loc__content
 
 meta "model_projection" function code_loc__ref___projection
 
 meta "inline : no" function code_loc__ref___projection
 
 val code_loc__havoc #"a-except.ads" 159 0 0# 
   (x : code_loc__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_loc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_loc #"a-except.ads" 164 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 159 0 0# 
   : int

end

(* Module for defining the constant "x" defined at a-except.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eid_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function x #"a-except.ads" 169 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eid_to_string__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eid_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string

end

(* Module for defining the constant "s" defined at a-except.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eid__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 170 0 0# "model_projected" "model_trace:8199" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eid__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eid
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id

end

(* Module for defining the constant "x" defined at a-except.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name_simple__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 180 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name_simple__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name_simple
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "e" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 188 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 188 0 0# "model_projected" "model_trace:8264" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "e" defined at a-except.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 198 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "m" defined at a-except.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__m
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function m #"a-except.ads" 199 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "m" defined at a-except.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__m__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_controlled_operation__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 216 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_controlled_operation__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_always__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 231 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:231, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_always__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_no_defer__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 238 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_no_defer__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__triggered_by_abort
 use import "_gnatprove_standard".Main

 function triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "left" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__left
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function left #"a-except.ads" 319 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__right
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function right #"a-except.ads" 319 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__Oeq
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool

end

(* Module for defining the constant "x" defined at a-except.ads:326, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__get_exception_machine_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 326 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:326, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__get_exception_machine_occurrence__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__get_exception_machine_occurrence
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada__exceptions__exception_occurrence

 function get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV32.t

end

(* Module for defining the constant "x" defined at a-except.ads:334, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eo_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 334 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:334, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eo_to_string__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eo_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "s" defined at a-except.ads:335, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eo__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 335 0 0# "model_projected" "model_trace:8670" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:335, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eo__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eo
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence

end

(* Module for axiomatizing type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9s #"a-except.ads" 343 0 0# 
 
 function first #"a-except.ads" 343 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 343 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 343 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t9s__ref #"a-except.ads" 343 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"a-except.ads" 343 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"a-except.ads" 343 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 343 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11s #"a-except.ads" 347 0 0# 
 
 function first #"a-except.ads" 347 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 347 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 347 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t11s__ref #"a-except.ads" 347 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref___projection #"a-except.ads" 347 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref___projection
 
 meta "inline : no" function t11s__ref___projection
 
 val t11s__havoc #"a-except.ads" 347 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 347 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__time
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_3__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_3__projection
 
 meta "inline : no" function __split_fields_3__projection
 
 type __split_fields__ref #"s-traent.ads" 50 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"s-traent.ads" 50 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type time #"a-calend.ads" 44 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function time___projection #"a-calend.ads" 44 0 0# 
   (a : time) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function time___projection
 
 meta "inline : no" function time___projection
 
 function bool_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool
 
 function value__size #"a-calend.ads" 44 0 0# 
   : int
 
 function object__size #"a-calend.ads" 44 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 function dummy #"a-calend.ads" 44 0 0# 
   : time
 
 type time__ref #"a-calend.ads" 44 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref___projection #"a-calend.ads" 44 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref___projection
 
 meta "inline : no" function time__ref___projection
 
 val time__havoc #"a-calend.ads" 44 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__year_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type year_number #"a-calend.ads" 50 0 0# 
 
 function first #"a-calend.ads" 50 0 0# 
   : int =
  1901
 
 function last #"a-calend.ads" 50 0 0# 
   : int =
  2399
 
 predicate in_range #"a-calend.ads" 50 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = year_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type year_number__ref #"a-calend.ads" 50 0 0# =
  { mutable year_number__content "model_trace:" : year_number }
 
 function year_number__ref___projection #"a-calend.ads" 50 0 0# 
   (a : year_number__ref) : year_number =
  a.year_number__content
 
 meta "model_projection" function year_number__ref___projection
 
 meta "inline : no" function year_number__ref___projection
 
 val year_number__havoc #"a-calend.ads" 50 0 0# 
   (x : year_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__month_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type month_number #"a-calend.ads" 51 0 0# 
 
 function first #"a-calend.ads" 51 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 51 0 0# 
   : int =
  12
 
 predicate in_range #"a-calend.ads" 51 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = month_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type month_number__ref #"a-calend.ads" 51 0 0# =
  { mutable month_number__content "model_trace:" : month_number }
 
 function month_number__ref___projection #"a-calend.ads" 51 0 0# 
   (a : month_number__ref) : month_number =
  a.month_number__content
 
 meta "model_projection" function month_number__ref___projection
 
 meta "inline : no" function month_number__ref___projection
 
 val month_number__havoc #"a-calend.ads" 51 0 0# 
   (x : month_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type day_number #"a-calend.ads" 52 0 0# 
 
 function first #"a-calend.ads" 52 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 52 0 0# 
   : int =
  31
 
 predicate in_range #"a-calend.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = day_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type day_number__ref #"a-calend.ads" 52 0 0# =
  { mutable day_number__content "model_trace:" : day_number }
 
 function day_number__ref___projection #"a-calend.ads" 52 0 0# 
   (a : day_number__ref) : day_number =
  a.day_number__content
 
 meta "model_projection" function day_number__ref___projection
 
 meta "inline : no" function day_number__ref___projection
 
 val day_number__havoc #"a-calend.ads" 52 0 0# 
   (x : day_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type day_duration #"a-calend.ads" 56 0 0# 
 
 function inv_small #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  0
 
 function last #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  86400000000000
 
 predicate in_range #"a-calend.ads" 56 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = day_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type day_duration__ref #"a-calend.ads" 56 0 0# =
  { mutable day_duration__content "model_trace:" : day_duration }
 
 function day_duration__ref___projection #"a-calend.ads" 56 0 0# 
   (a : day_duration__ref) : day_duration =
  a.day_duration__content
 
 meta "model_projection" function day_duration__ref___projection
 
 meta "inline : no" function day_duration__ref___projection
 
 val day_duration__havoc #"a-calend.ads" 56 0 0# 
   (x : day_duration__ref) : unit
  writes {x}

end

(* Module for defining the constant "date" defined at a-calend.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__year__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 66 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__year__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__year
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__month__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 67 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__month__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__month
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__day__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 68 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__day__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__day
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__seconds__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 69 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__seconds__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration

end

(* Module for defining the constant "date" defined at a-calend.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__split__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 72 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "year" defined at a-calend.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__year
 use import "_gnatprove_standard".Main

 function year #"a-calend.ads" 83 0 0# "model" "model_trace:10959" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "month" defined at a-calend.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__month
 use import "_gnatprove_standard".Main

 function month #"a-calend.ads" 84 0 0# "model" "model_trace:10968" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "day" defined at a-calend.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__day
 use import "_gnatprove_standard".Main

 function day #"a-calend.ads" 85 0 0# "model" "model_trace:10977" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "seconds" defined at a-calend.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 86 0 0# "model_projected" "model_trace:10986" 
   : Ada__calendar__day_duration.day_duration
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__time_of
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 102 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 102 0 0# "model_projected" "model_trace:11015" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__left
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function left #"a-calend.ads" 103 0 0# "model_projected" "model_trace:11034" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 103 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 104 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 104 0 0# "model_projected" "model_trace:11071" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract__2
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time

 function osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration

end

(* Module for defining the constant "left" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Olt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ole
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ogt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oge
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for axiomatizing type "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__root_stream_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"a-calend.ads" 44 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_4__projection #"a-calend.ads" 44 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_4__projection
 
 meta "inline : no" function __split_fields_4__projection
 
 type __split_fields__ref #"a-calend.ads" 44 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"a-calend.ads" 44 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"a-calend.ads" 44 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type root_stream_type #"a-stream.ads" 70 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function root_stream_type___projection #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function root_stream_type___projection
 
 meta "inline : no" function root_stream_type___projection
 
 function root_stream_type_2__projection #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) : int =
  a.attr__tag
 
 meta "model_projection" function root_stream_type_2__projection
 
 meta "inline : no" function root_stream_type_2__projection
 
 function user_eq #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) (b : root_stream_type) : bool
 
 function __dispatch_eq #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) (b : root_stream_type) : bool
 
 function __tag #"a-stream.ads" 70 0 0# 
   : int
 
 function value__size #"a-stream.ads" 70 0 0# 
   : int
 
 function object__size #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : root_stream_type.
   ((object__size a) >= 0))
 
 function dummy #"a-stream.ads" 70 0 0# 
   : root_stream_type
 
 type root_stream_type__ref #"a-stream.ads" 70 0 0# =
  { mutable root_stream_type__content "model_trace:" : root_stream_type }
 
 function root_stream_type__ref___projection #"a-stream.ads" 70 0 0# 
   (a : root_stream_type__ref) : root_stream_type =
  a.root_stream_type__content
 
 meta "model_projection" function root_stream_type__ref___projection
 
 meta "inline : no" function root_stream_type__ref___projection
 
 val root_stream_type__havoc #"a-stream.ads" 70 0 0# 
   (x : root_stream_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type stream_element #"a-stream.ads" 42 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-stream.ads" 42 0 0# 
   : BV8.t
 
 function first #"a-stream.ads" 42 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-stream.ads" 42 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-stream.ads" 42 0 0# 
   : int =
  0
 
 function last_int #"a-stream.ads" 42 0 0# 
   : int =
  255
 
 predicate in_range #"a-stream.ads" 42 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"a-stream.ads" 42 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = stream_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element__ref #"a-stream.ads" 42 0 0# =
  { mutable stream_element__content "model_trace:" : stream_element }
 
 function stream_element__ref___projection #"a-stream.ads" 42 0 0# 
   (a : stream_element__ref) : stream_element =
  a.stream_element__content
 
 meta "model_projection" function stream_element__ref___projection
 
 meta "inline : no" function stream_element__ref___projection
 
 val stream_element__havoc #"a-stream.ads" 42 0 0# 
   (x : stream_element__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstream_element_offsetB #"a-stream.ads" 44 0 0# 
 
 function first #"a-stream.ads" 44 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-stream.ads" 44 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 44 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstream_element_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tstream_element_offsetB__ref #"a-stream.ads" 44 0 0# =
  { mutable tstream_element_offsetB__content "model_trace:" : tstream_element_offsetB }
 
 function tstream_element_offsetB__ref___projection #"a-stream.ads" 44 0 0# 
   (a : tstream_element_offsetB__ref) : tstream_element_offsetB =
  a.tstream_element_offsetB__content
 
 meta "model_projection" function tstream_element_offsetB__ref___projection
 
 meta "inline : no" function tstream_element_offsetB__ref___projection
 
 val tstream_element_offsetB__havoc #"a-stream.ads" 44 0 0# 
   (x : tstream_element_offsetB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_offset #"a-stream.ads" 44 0 0# 
 
 function first #"a-stream.ads" 44 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-stream.ads" 44 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 44 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element_offset__ref #"a-stream.ads" 44 0 0# =
  { mutable stream_element_offset__content "model_trace:" : stream_element_offset }
 
 function stream_element_offset__ref___projection #"a-stream.ads" 44 0 0# 
   (a : stream_element_offset__ref) : stream_element_offset =
  a.stream_element_offset__content
 
 meta "model_projection" function stream_element_offset__ref___projection
 
 meta "inline : no" function stream_element_offset__ref___projection
 
 val stream_element_offset__havoc #"a-stream.ads" 44 0 0# 
   (x : stream_element_offset__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_count #"a-stream.ads" 51 0 0# 
 
 function first #"a-stream.ads" 51 0 0# 
   : int =
  0
 
 function last #"a-stream.ads" 51 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 51 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element_count__ref #"a-stream.ads" 51 0 0# =
  { mutable stream_element_count__content "model_trace:" : stream_element_count }
 
 function stream_element_count__ref___projection #"a-stream.ads" 51 0 0# 
   (a : stream_element_count__ref) : stream_element_count =
  a.stream_element_count__content
 
 meta "model_projection" function stream_element_count__ref___projection
 
 meta "inline : no" function stream_element_count__ref___projection
 
 val stream_element_count__havoc #"a-stream.ads" 51 0 0# 
   (x : stream_element_count__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "stream_element_array" defined at a-stream.ads:54, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element

 function index_I1_one #"a-stream.ads" 51 0 0# 
   : int =
  1
 
 type component_type #"a-stream.ads" 51 0 0# =
  Ada__streams__stream_element.stream_element
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"a-stream.ads" 42 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Ada__streams__stream_element.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__stream_element_offset
 use        Array__Int__Ada__streams__stream_element

 type component_type #"a-stream.ads" 42 0 0# =
  Ada__streams__stream_element.stream_element
 
 function index_1_id #"a-stream.ads" 42 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Ada__streams__stream_element.map, 
 function array_bool_eq = Array__Int__Ada__streams__stream_element.bool_eq, 
 type index_base_type = Ada__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 type index_rep_type = int, 
 function to_rep = Ada__streams__Tstream_element_offsetB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Ada__streams__Tstream_element_offsetB.in_range, 
 predicate index_dynamic_property = Ada__streams__stream_element_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type stream_element_array #"a-stream.ads" 54 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type stream_element_array__ref #"a-stream.ads" 54 0 0# =
  { mutable stream_element_array__content "model_trace:" : stream_element_array }
 
 function stream_element_array__ref___projection #"a-stream.ads" 54 0 0# 
   (a : stream_element_array__ref) : stream_element_array =
  a.stream_element_array__content
 
 meta "model_projection" function stream_element_array__ref___projection
 
 meta "inline : no" function stream_element_array__ref___projection
 
 val stream_element_array__havoc #"a-stream.ads" 54 0 0# 
   (x : stream_element_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at a-stream.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"a-stream.ads" 65 0 0# "model_projected" "model_trace:14669" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Troot_stream_typeC
 use export Ada__streams__root_stream_type
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v #"a-stream.ads" 82 0 0# "model_projected" "model_trace:14739" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__stream_element_arraySW__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v #"a-stream.ads" 85 0 0# 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySW__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type chars #"s-crtl.ads" 41 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 41 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 41 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 41 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 41 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type chars__ref #"s-crtl.ads" 41 0 0# =
  { mutable chars__content "model_trace:" : chars }
 
 function chars__ref___projection #"s-crtl.ads" 41 0 0# 
   (a : chars__ref) : chars =
  a.chars__content
 
 meta "model_projection" function chars__ref___projection
 
 meta "inline : no" function chars__ref___projection
 
 val chars__havoc #"s-crtl.ads" 41 0 0# 
   (x : chars__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__dirs
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type dirs #"s-crtl.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 47 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 47 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 47 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = dirs, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type dirs__ref #"s-crtl.ads" 47 0 0# =
  { mutable dirs__content "model_trace:" : dirs }
 
 function dirs__ref___projection #"s-crtl.ads" 47 0 0# 
   (a : dirs__ref) : dirs =
  a.dirs__content
 
 meta "model_projection" function dirs__ref___projection
 
 meta "inline : no" function dirs__ref___projection
 
 val dirs__havoc #"s-crtl.ads" 47 0 0# 
   (x : dirs__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type files #"s-crtl.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 50 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 50 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type files__ref #"s-crtl.ads" 50 0 0# =
  { mutable files__content "model_trace:" : files }
 
 function files__ref___projection #"s-crtl.ads" 50 0 0# 
   (a : files__ref) : files =
  a.files__content
 
 meta "model_projection" function files__ref___projection
 
 meta "inline : no" function files__ref___projection
 
 val files__havoc #"s-crtl.ads" 50 0 0# 
   (x : files__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"s-crtl.ads" 53 0 0# 
 
 function first #"s-crtl.ads" 53 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 53 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 53 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int____ref #"s-crtl.ads" 53 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref___projection #"s-crtl.ads" 53 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref___projection
 
 meta "inline : no" function int____ref___projection
 
 val int____havoc #"s-crtl.ads" 53 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__TlongB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tlongB #"s-crtl.ads" 55 0 0# 
 
 function first #"s-crtl.ads" 55 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 55 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tlongB__ref #"s-crtl.ads" 55 0 0# =
  { mutable tlongB__content "model_trace:" : tlongB }
 
 function tlongB__ref___projection #"s-crtl.ads" 55 0 0# 
   (a : tlongB__ref) : tlongB =
  a.tlongB__content
 
 meta "model_projection" function tlongB__ref___projection
 
 meta "inline : no" function tlongB__ref___projection
 
 val tlongB__havoc #"s-crtl.ads" 55 0 0# 
   (x : tlongB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"s-crtl.ads" 55 0 0# 
 
 function first #"s-crtl.ads" 55 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 55 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long__ref #"s-crtl.ads" 55 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref___projection #"s-crtl.ads" 55 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref___projection
 
 meta "inline : no" function long__ref___projection
 
 val long__havoc #"s-crtl.ads" 55 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__off_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type off_t #"s-crtl.ads" 58 0 0# 
 
 function first #"s-crtl.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 58 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = off_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type off_t__ref #"s-crtl.ads" 58 0 0# =
  { mutable off_t__content "model_trace:" : off_t }
 
 function off_t__ref___projection #"s-crtl.ads" 58 0 0# 
   (a : off_t__ref) : off_t =
  a.off_t__content
 
 meta "model_projection" function off_t__ref___projection
 
 meta "inline : no" function off_t__ref___projection
 
 val off_t__havoc #"s-crtl.ads" 58 0 0# 
   (x : off_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type size_t #"s-crtl.ads" 60 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 60 0 0# 
   : BV32.t
 
 function first #"s-crtl.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 60 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 60 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 60 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-crtl.ads" 60 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_t__ref #"s-crtl.ads" 60 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref___projection #"s-crtl.ads" 60 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref___projection
 
 meta "inline : no" function size_t__ref___projection
 
 val size_t__havoc #"s-crtl.ads" 60 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tssize_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tssize_tB #"s-crtl.ads" 62 0 0# 
 
 function first #"s-crtl.ads" 62 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 62 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tssize_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tssize_tB__ref #"s-crtl.ads" 62 0 0# =
  { mutable tssize_tB__content "model_trace:" : tssize_tB }
 
 function tssize_tB__ref___projection #"s-crtl.ads" 62 0 0# 
   (a : tssize_tB__ref) : tssize_tB =
  a.tssize_tB__content
 
 meta "model_projection" function tssize_tB__ref___projection
 
 meta "inline : no" function tssize_tB__ref___projection
 
 val tssize_tB__havoc #"s-crtl.ads" 62 0 0# 
   (x : tssize_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t #"s-crtl.ads" 62 0 0# 
 
 function first #"s-crtl.ads" 62 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 62 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ssize_t__ref #"s-crtl.ads" 62 0 0# =
  { mutable ssize_t__content "model_trace:" : ssize_t }
 
 function ssize_t__ref___projection #"s-crtl.ads" 62 0 0# 
   (a : ssize_t__ref) : ssize_t =
  a.ssize_t__content
 
 meta "model_projection" function ssize_t__ref___projection
 
 meta "inline : no" function ssize_t__ref___projection
 
 val ssize_t__havoc #"s-crtl.ads" 62 0 0# 
   (x : ssize_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tint64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tint64B #"s-crtl.ads" 65 0 0# 
 
 function first #"s-crtl.ads" 65 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-crtl.ads" 65 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-crtl.ads" 65 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tint64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tint64B__ref #"s-crtl.ads" 65 0 0# =
  { mutable tint64B__content "model_trace:" : tint64B }
 
 function tint64B__ref___projection #"s-crtl.ads" 65 0 0# 
   (a : tint64B__ref) : tint64B =
  a.tint64B__content
 
 meta "model_projection" function tint64B__ref___projection
 
 meta "inline : no" function tint64B__ref___projection
 
 val tint64B__havoc #"s-crtl.ads" 65 0 0# 
   (x : tint64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 #"s-crtl.ads" 65 0 0# 
 
 function first #"s-crtl.ads" 65 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-crtl.ads" 65 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-crtl.ads" 65 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int64__ref #"s-crtl.ads" 65 0 0# =
  { mutable int64__content "model_trace:" : int64 }
 
 function int64__ref___projection #"s-crtl.ads" 65 0 0# 
   (a : int64__ref) : int64 =
  a.int64__content
 
 meta "model_projection" function int64__ref___projection
 
 meta "inline : no" function int64__ref___projection
 
 val int64__havoc #"s-crtl.ads" 65 0 0# 
   (x : int64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__filename_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type filename_encoding #"s-crtl.ads" 72 0 0# 
 
 function first #"s-crtl.ads" 72 0 0# 
   : int =
  0
 
 function last #"s-crtl.ads" 72 0 0# 
   : int =
  2
 
 predicate in_range #"s-crtl.ads" 72 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = filename_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type filename_encoding__ref #"s-crtl.ads" 72 0 0# =
  { mutable filename_encoding__content "model_trace:" : filename_encoding }
 
 function filename_encoding__ref___projection #"s-crtl.ads" 72 0 0# 
   (a : filename_encoding__ref) : filename_encoding =
  a.filename_encoding__content
 
 meta "model_projection" function filename_encoding__ref___projection
 
 meta "inline : no" function filename_encoding__ref___projection
 
 val filename_encoding__havoc #"s-crtl.ads" 72 0 0# 
   (x : filename_encoding__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at s-crtl.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strlen__a
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function a #"s-crtl.ads" 85 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strlen__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strlen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strlen #"s-crtl.ads" 85 0 0# 
   (a : BV32.t) : BV32.t

end

(* Module for defining the constant "dest" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__dest
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function dest #"s-crtl.ads" 88 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dest" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__dest__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "src" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__src
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function src #"s-crtl.ads" 88 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "src" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__src__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 88 0 0# "model" "model_trace:17824" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "a" defined at s-crtl.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__atoi__a
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function a #"s-crtl.ads" 95 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__atoi__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__atoi
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function atoi #"s-crtl.ads" 95 0 0# 
   (a : BV32.t) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__clearerr__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 98 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__clearerr__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 101 0 0# "model" "model_trace:17905" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup
 use import "_gnatprove_standard".Main

 function dup #"s-crtl.ads" 101 0 0# 
   (handle : int) : int

end

(* Module for defining the constant "from" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__from
 use import "_gnatprove_standard".Main

 function from #"s-crtl.ads" 104 0 0# "model" "model_trace:17932" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "from" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__to
 use import "_gnatprove_standard".Main

 function to__ #"s-crtl.ads" 104 0 0# "model" "model_trace:17939" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup2
 use import "_gnatprove_standard".Main

 function dup2 #"s-crtl.ads" 104 0 0# 
   (from : int) (to__ : int) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fclose__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 107 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fclose
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fclose #"s-crtl.ads" 107 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "handle" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 110 0 0# "model" "model_trace:17994" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 110 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fdopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fdopen #"s-crtl.ads" 110 0 0# 
   (handle : int) (mode : BV32.t) : BV32.t

end

(* Module for defining the constant "stream" defined at s-crtl.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fflush__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 113 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fflush__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fflush
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fflush #"s-crtl.ads" 113 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgetc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 116 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgetc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fgetc #"s-crtl.ads" 116 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "strng" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__strng
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strng #"s-crtl.ads" 119 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__n
 use import "_gnatprove_standard".Main

 function n #"s-crtl.ads" 119 0 0# "model" "model_trace:18093" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 119 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgets
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fgets #"s-crtl.ads" 119 0 0# 
   (strng : BV32.t) (n : int) (stream : BV32.t) : BV32.t

end

(* Module for defining the constant "filename" defined at s-crtl.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 123 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 124 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 125 0 0# "model" "model_trace:18147" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fopen #"s-crtl.ads" 122 0 0# 
   (filename : BV32.t) (mode : BV32.t) (encoding : int) : BV32.t

end

(* Module for defining the constant "c" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 128 0 0# "model" "model_trace:18175" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 128 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputc #"s-crtl.ads" 128 0 0# 
   (c : int) (stream : BV32.t) : int

end

(* Module for defining the constant "c" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 131 0 0# "model" "model_trace:18211" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 131 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputwc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputwc #"s-crtl.ads" 131 0 0# 
   (c : int) (stream : BV32.t) : int

end

(* Module for defining the constant "strng" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__strng
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strng #"s-crtl.ads" 134 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 134 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputs
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputs #"s-crtl.ads" 134 0 0# 
   (strng : BV32.t) (stream : BV32.t) : int

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__free__ptr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ptr #"s-crtl.ads" 137 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__free__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 141 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 142 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 143 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 144 0 0# "model" "model_trace:18338" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__freopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function freopen #"s-crtl.ads" 140 0 0# 
   (filename : BV32.t) (mode : BV32.t) (stream : BV32.t) (encoding : int) : BV32.t

end

(* Module for defining the constant "stream" defined at s-crtl.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 148 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 149 0 0# "model" "model_trace:18375" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 55 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__origin
 use import "_gnatprove_standard".Main

 function origin #"s-crtl.ads" 150 0 0# "model" "model_trace:18384" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fseek #"s-crtl.ads" 147 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 154 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 155 0 0# "model" "model_trace:18420" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__origin
 use import "_gnatprove_standard".Main

 function origin #"s-crtl.ads" 156 0 0# "model" "model_trace:18429" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fseek64 #"s-crtl.ads" 153 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 159 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ftell #"s-crtl.ads" 159 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell64__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 162 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ftell64 #"s-crtl.ads" 162 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "s" defined at s-crtl.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__getenv__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"s-crtl.ads" 165 0 0# "model_projected" "model_trace:18510" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-crtl.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__getenv__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__getenv
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__string

 function getenv #"s-crtl.ads" 165 0 0# 
   (s : Standard__string.string) : BV32.t

end

(* Module for defining the constant "handle" defined at s-crtl.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__isatty__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 168 0 0# "model" "model_trace:18539" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__isatty__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__isatty
 use import "_gnatprove_standard".Main

 function isatty #"s-crtl.ads" 168 0 0# 
   (handle : int) : int

end

(* Module for defining the constant "fd" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 171 0 0# "model" "model_trace:18566" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 171 0 0# "model" "model_trace:18575" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "direction" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__direction
 use import "_gnatprove_standard".Main

 function direction #"s-crtl.ads" 171 0 0# "model" "model_trace:18584" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "direction" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__direction__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__lseek
 use import "_gnatprove_standard".Main

 function lseek #"s-crtl.ads" 171 0 0# 
   (fd : int) (offset : int) (direction : int) : int

end

(* Module for defining the constant "size" defined at s-crtl.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__malloc__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 174 0 0# "model" "model_trace:18611" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__malloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__malloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function malloc #"s-crtl.ads" 174 0 0# 
   (size : BV32.t) : BV32.t

end

(* Module for defining the constant "s1" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s1
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s1 #"s-crtl.ads" 177 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s2 #"s-crtl.ads" 177 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 177 0 0# "model" "model_trace:18662" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s1
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s1 #"s-crtl.ads" 180 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s2 #"s-crtl.ads" 180 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 180 0 0# "model" "model_trace:18710" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "template" defined at s-crtl.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mktemp__template
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function template #"s-crtl.ads" 183 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "template" defined at s-crtl.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mktemp__template__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__pclose__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 186 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__pclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__pclose
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pclose #"s-crtl.ads" 186 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "command" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__command
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function command #"s-crtl.ads" 189 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "command" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__command__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 189 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__popen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function popen #"s-crtl.ads" 189 0 0# 
   (command : BV32.t) (mode : BV32.t) : BV32.t

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__ptr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ptr #"s-crtl.ads" 193 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 193 0 0# "model" "model_trace:18843" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__realloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function realloc #"s-crtl.ads" 192 0 0# 
   (ptr : BV32.t) (size : BV32.t) : BV32.t

end

(* Module for defining the constant "stream" defined at s-crtl.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rewind__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 196 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:196, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rewind__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rmdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 199 0 0# "model_projected" "model_trace:18898" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rmdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rmdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function rmdir #"s-crtl.ads" 199 0 0# 
   (dir_name : Standard__string.string) : int

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__chdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 202 0 0# "model_projected" "model_trace:18925" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__chdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__chdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function chdir #"s-crtl.ads" 202 0 0# 
   (dir_name : Standard__string.string) : int

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 206 0 0# "model_projected" "model_trace:18952" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 207 0 0# "model" "model_trace:18961" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mkdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function mkdir #"s-crtl.ads" 205 0 0# 
   (dir_name : Standard__string.string) (encoding : int) : int

end

(* Module for defining the constant "stream" defined at s-crtl.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 211 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 212 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__mode
 use import "_gnatprove_standard".Main

 function mode #"s-crtl.ads" 213 0 0# "model" "model_trace:19007" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 214 0 0# "model" "model_trace:19016" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function setvbuf #"s-crtl.ads" 210 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int

end

(* Module for defining the constant "str" defined at s-crtl.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__tmpnam__str
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function str #"s-crtl.ads" 217 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "str" defined at s-crtl.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpnam__str__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpfile
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tmpfile #"s-crtl.ads" 220 0 0# 
   (__void_param : unit) : BV32.t

end

(* Module for defining the constant "c" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 223 0 0# "model" "model_trace:19087" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 223 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ungetc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ungetc #"s-crtl.ads" 223 0 0# 
   (c : int) (stream : BV32.t) : int

end

(* Module for defining the constant "filename" defined at s-crtl.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__unlink__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 226 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__unlink__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__unlink
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function unlink #"s-crtl.ads" 226 0 0# 
   (filename : BV32.t) : int

end

(* Module for defining the constant "filename" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 229 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__oflag
 use import "_gnatprove_standard".Main

 function oflag #"s-crtl.ads" 229 0 0# "model" "model_trace:19159" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__oflag__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__open
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function open #"s-crtl.ads" 229 0 0# 
   (filename : BV32.t) (oflag : int) : int

end

(* Module for defining the constant "fd" defined at s-crtl.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__close__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 232 0 0# "model" "model_trace:19186" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__close__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__close
 use import "_gnatprove_standard".Main

 function close #"s-crtl.ads" 232 0 0# 
   (fd : int) : int

end

(* Module for defining the constant "fd" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 235 0 0# "model" "model_trace:19213" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 235 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"s-crtl.ads" 235 0 0# "model" "model_trace:19231" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__read
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function read #"s-crtl.ads" 235 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int

end

(* Module for defining the constant "fd" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 238 0 0# "model" "model_trace:19258" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 238 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"s-crtl.ads" 238 0 0# "model" "model_trace:19276" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__write
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function write #"s-crtl.ads" 238 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int

end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_8B #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_8B__ref #"interfac.ads" 46 0 0# =
  { mutable tinteger_8B__content "model_trace:" : tinteger_8B }
 
 function tinteger_8B__ref___projection #"interfac.ads" 46 0 0# 
   (a : tinteger_8B__ref) : tinteger_8B =
  a.tinteger_8B__content
 
 meta "model_projection" function tinteger_8B__ref___projection
 
 meta "inline : no" function tinteger_8B__ref___projection
 
 val tinteger_8B__havoc #"interfac.ads" 46 0 0# 
   (x : tinteger_8B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"interfac.ads" 46 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref_2__projection #"interfac.ads" 46 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_2__projection
 
 meta "inline : no" function integer_8__ref_2__projection
 
 val integer_8__havoc #"interfac.ads" 46 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_16B #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_16B__ref #"interfac.ads" 49 0 0# =
  { mutable tinteger_16B__content "model_trace:" : tinteger_16B }
 
 function tinteger_16B__ref___projection #"interfac.ads" 49 0 0# 
   (a : tinteger_16B__ref) : tinteger_16B =
  a.tinteger_16B__content
 
 meta "model_projection" function tinteger_16B__ref___projection
 
 meta "inline : no" function tinteger_16B__ref___projection
 
 val tinteger_16B__havoc #"interfac.ads" 49 0 0# 
   (x : tinteger_16B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"interfac.ads" 49 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref_2__projection #"interfac.ads" 49 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_2__projection
 
 meta "inline : no" function integer_16__ref_2__projection
 
 val integer_16__havoc #"interfac.ads" 49 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_32B #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_32B__ref #"interfac.ads" 52 0 0# =
  { mutable tinteger_32B__content "model_trace:" : tinteger_32B }
 
 function tinteger_32B__ref___projection #"interfac.ads" 52 0 0# 
   (a : tinteger_32B__ref) : tinteger_32B =
  a.tinteger_32B__content
 
 meta "model_projection" function tinteger_32B__ref___projection
 
 meta "inline : no" function tinteger_32B__ref___projection
 
 val tinteger_32B__havoc #"interfac.ads" 52 0 0# 
   (x : tinteger_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"interfac.ads" 52 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref_2__projection #"interfac.ads" 52 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_2__projection
 
 meta "inline : no" function integer_32__ref_2__projection
 
 val integer_32__havoc #"interfac.ads" 52 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_64B #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_64B__ref #"interfac.ads" 55 0 0# =
  { mutable tinteger_64B__content "model_trace:" : tinteger_64B }
 
 function tinteger_64B__ref___projection #"interfac.ads" 55 0 0# 
   (a : tinteger_64B__ref) : tinteger_64B =
  a.tinteger_64B__content
 
 meta "model_projection" function tinteger_64B__ref___projection
 
 meta "inline : no" function tinteger_64B__ref___projection
 
 val tinteger_64B__havoc #"interfac.ads" 55 0 0# 
   (x : tinteger_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"interfac.ads" 55 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref_2__projection #"interfac.ads" 55 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_2__projection
 
 meta "inline : no" function integer_64__ref_2__projection
 
 val integer_64__havoc #"interfac.ads" 55 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_8 #"interfac.ads" 63 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 63 0 0# 
   : BV8.t
 
 function first #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"interfac.ads" 63 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 63 0 0# 
   : int =
  255
 
 predicate in_range #"interfac.ads" 63 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 63 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_8__ref #"interfac.ads" 63 0 0# =
  { mutable unsigned_8__content "model_trace:" : unsigned_8 }
 
 function unsigned_8__ref___projection #"interfac.ads" 63 0 0# 
   (a : unsigned_8__ref) : unsigned_8 =
  a.unsigned_8__content
 
 meta "model_projection" function unsigned_8__ref___projection
 
 meta "inline : no" function unsigned_8__ref___projection
 
 val unsigned_8__havoc #"interfac.ads" 63 0 0# 
   (x : unsigned_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_16 #"interfac.ads" 66 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 66 0 0# 
   : BV16.t
 
 function first #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"interfac.ads" 66 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 66 0 0# 
   : int =
  65535
 
 predicate in_range #"interfac.ads" 66 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 66 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_16__ref #"interfac.ads" 66 0 0# =
  { mutable unsigned_16__content "model_trace:" : unsigned_16 }
 
 function unsigned_16__ref___projection #"interfac.ads" 66 0 0# 
   (a : unsigned_16__ref) : unsigned_16 =
  a.unsigned_16__content
 
 meta "model_projection" function unsigned_16__ref___projection
 
 meta "inline : no" function unsigned_16__ref___projection
 
 val unsigned_16__havoc #"interfac.ads" 66 0 0# 
   (x : unsigned_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_24
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_24 #"interfac.ads" 69 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777216 )
 
 function first #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777215 )
 
 function first_int #"interfac.ads" 69 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 69 0 0# 
   : int =
  16777215
 
 predicate in_range #"interfac.ads" 69 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"interfac.ads" 69 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = unsigned_24, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_24__ref #"interfac.ads" 69 0 0# =
  { mutable unsigned_24__content "model_trace:" : unsigned_24 }
 
 function unsigned_24__ref___projection #"interfac.ads" 69 0 0# 
   (a : unsigned_24__ref) : unsigned_24 =
  a.unsigned_24__content
 
 meta "model_projection" function unsigned_24__ref___projection
 
 meta "inline : no" function unsigned_24__ref___projection
 
 val unsigned_24__havoc #"interfac.ads" 69 0 0# 
   (x : unsigned_24__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_32 #"interfac.ads" 74 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 74 0 0# 
   : BV32.t
 
 function first #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"interfac.ads" 74 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 74 0 0# 
   : int =
  4294967295
 
 predicate in_range #"interfac.ads" 74 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 74 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_32__ref #"interfac.ads" 74 0 0# =
  { mutable unsigned_32__content "model_trace:" : unsigned_32 }
 
 function unsigned_32__ref___projection #"interfac.ads" 74 0 0# 
   (a : unsigned_32__ref) : unsigned_32 =
  a.unsigned_32__content
 
 meta "model_projection" function unsigned_32__ref___projection
 
 meta "inline : no" function unsigned_32__ref___projection
 
 val unsigned_32__havoc #"interfac.ads" 74 0 0# 
   (x : unsigned_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_64 #"interfac.ads" 77 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 77 0 0# 
   : BV64.t
 
 function first #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"interfac.ads" 77 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 77 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"interfac.ads" 77 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 77 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_64__ref #"interfac.ads" 77 0 0# =
  { mutable unsigned_64__content "model_trace:" : unsigned_64 }
 
 function unsigned_64__ref___projection #"interfac.ads" 77 0 0# 
   (a : unsigned_64__ref) : unsigned_64 =
  a.unsigned_64__content
 
 meta "model_projection" function unsigned_64__ref___projection
 
 meta "inline : no" function unsigned_64__ref___projection
 
 val unsigned_64__havoc #"interfac.ads" 77 0 0# 
   (x : unsigned_64__ref) : unit
  writes {x}

end

(* Module for defining the constant "value" defined at interfac.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 82 0 0# "model" "model_trace:15339" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 83 0 0# "model" "model_trace:15348" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 86 0 0# "model" "model_trace:15367" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 87 0 0# "model" "model_trace:15376" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 90 0 0# "model" "model_trace:15395" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 91 0 0# "model" "model_trace:15404" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 94 0 0# "model" "model_trace:15423" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 95 0 0# "model" "model_trace:15432" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 98 0 0# "model" "model_trace:15451" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 99 0 0# "model" "model_trace:15460" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 102 0 0# "model" "model_trace:15479" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 103 0 0# "model" "model_trace:15488" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 106 0 0# "model" "model_trace:15507" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 107 0 0# "model" "model_trace:15516" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 110 0 0# "model" "model_trace:15535" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 111 0 0# "model" "model_trace:15544" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 114 0 0# "model" "model_trace:15563" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 115 0 0# "model" "model_trace:15572" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 118 0 0# "model" "model_trace:15591" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 119 0 0# "model" "model_trace:15600" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 122 0 0# "model" "model_trace:15619" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 123 0 0# "model" "model_trace:15628" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 126 0 0# "model" "model_trace:15647" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 127 0 0# "model" "model_trace:15656" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 130 0 0# "model" "model_trace:15675" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 131 0 0# "model" "model_trace:15684" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 134 0 0# "model" "model_trace:15703" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 135 0 0# "model" "model_trace:15712" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 138 0 0# "model" "model_trace:15731" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 139 0 0# "model" "model_trace:15740" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 142 0 0# "model" "model_trace:15759" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 143 0 0# "model" "model_trace:15768" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 146 0 0# "model" "model_trace:15787" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 147 0 0# "model" "model_trace:15796" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 150 0 0# "model" "model_trace:15815" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 151 0 0# "model" "model_trace:15824" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 154 0 0# "model" "model_trace:15843" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 155 0 0# "model" "model_trace:15852" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 158 0 0# "model" "model_trace:15871" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 159 0 0# "model" "model_trace:15880" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_32B #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_32B, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_32B__ref #"interfac.ads" 169 0 0# =
  { mutable tieee_float_32B__content "model_trace:" : tieee_float_32B }
 
 function tieee_float_32B__ref___projection #"interfac.ads" 169 0 0# 
   (a : tieee_float_32B__ref) : tieee_float_32B =
  a.tieee_float_32B__content
 
 meta "model_projection" function tieee_float_32B__ref___projection
 
 meta "inline : no" function tieee_float_32B__ref___projection
 
 val tieee_float_32B__havoc #"interfac.ads" 169 0 0# 
   (x : tieee_float_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_32 #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_32, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_32__ref #"interfac.ads" 169 0 0# =
  { mutable ieee_float_32__content "model_trace:" : ieee_float_32 }
 
 function ieee_float_32__ref___projection #"interfac.ads" 169 0 0# 
   (a : ieee_float_32__ref) : ieee_float_32 =
  a.ieee_float_32__content
 
 meta "model_projection" function ieee_float_32__ref___projection
 
 meta "inline : no" function ieee_float_32__ref___projection
 
 val ieee_float_32__havoc #"interfac.ads" 169 0 0# 
   (x : ieee_float_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_64B #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_64B, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_64B__ref #"interfac.ads" 172 0 0# =
  { mutable tieee_float_64B__content "model_trace:" : tieee_float_64B }
 
 function tieee_float_64B__ref___projection #"interfac.ads" 172 0 0# 
   (a : tieee_float_64B__ref) : tieee_float_64B =
  a.tieee_float_64B__content
 
 meta "model_projection" function tieee_float_64B__ref___projection
 
 meta "inline : no" function tieee_float_64B__ref___projection
 
 val tieee_float_64B__havoc #"interfac.ads" 172 0 0# 
   (x : tieee_float_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_64 #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_64, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_64__ref #"interfac.ads" 172 0 0# =
  { mutable ieee_float_64__content "model_trace:" : ieee_float_64 }
 
 function ieee_float_64__ref___projection #"interfac.ads" 172 0 0# 
   (a : ieee_float_64__ref) : ieee_float_64 =
  a.ieee_float_64__content
 
 meta "model_projection" function ieee_float_64__ref___projection
 
 meta "inline : no" function ieee_float_64__ref___projection
 
 val ieee_float_64__havoc #"interfac.ads" 172 0 0# 
   (x : ieee_float_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_extended_floatB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type tieee_extended_floatB #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_extended_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_extended_floatB__ref #"interfac.ads" 182 0 0# =
  { mutable tieee_extended_floatB__content "model_trace:" : tieee_extended_floatB }
 
 function tieee_extended_floatB__ref___projection #"interfac.ads" 182 0 0# 
   (a : tieee_extended_floatB__ref) : tieee_extended_floatB =
  a.tieee_extended_floatB__content
 
 meta "model_projection" function tieee_extended_floatB__ref___projection
 
 meta "inline : no" function tieee_extended_floatB__ref___projection
 
 val tieee_extended_floatB__havoc #"interfac.ads" 182 0 0# 
   (x : tieee_extended_floatB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_extended_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type ieee_extended_float #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_extended_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_extended_float__ref #"interfac.ads" 182 0 0# =
  { mutable ieee_extended_float__content "model_trace:" : ieee_extended_float }
 
 function ieee_extended_float__ref___projection #"interfac.ads" 182 0 0# 
   (a : ieee_extended_float__ref) : ieee_extended_float =
  a.ieee_extended_float__content
 
 meta "model_projection" function ieee_extended_float__ref___projection
 
 meta "inline : no" function ieee_extended_float__ref___projection
 
 val ieee_extended_float__havoc #"interfac.ads" 182 0 0# 
   (x : ieee_extended_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type chars #"i-cstrea.ads" 40 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 40 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 40 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 40 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 40 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type chars__ref #"i-cstrea.ads" 40 0 0# =
  { mutable chars__content "model_trace:" : chars }
 
 function chars__ref_2__projection #"i-cstrea.ads" 40 0 0# 
   (a : chars__ref) : chars =
  a.chars__content
 
 meta "model_projection" function chars__ref_2__projection
 
 meta "inline : no" function chars__ref_2__projection
 
 val chars__havoc #"i-cstrea.ads" 40 0 0# 
   (x : chars__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type files #"i-cstrea.ads" 41 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 41 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 41 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 41 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 41 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type files__ref #"i-cstrea.ads" 41 0 0# =
  { mutable files__content "model_trace:" : files }
 
 function files__ref_2__projection #"i-cstrea.ads" 41 0 0# 
   (a : files__ref) : files =
  a.files__content
 
 meta "model_projection" function files__ref_2__projection
 
 meta "inline : no" function files__ref_2__projection
 
 val files__havoc #"i-cstrea.ads" 41 0 0# 
   (x : files__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"i-cstrea.ads" 42 0 0# 
 
 function first #"i-cstrea.ads" 42 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 42 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 42 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int____ref #"i-cstrea.ads" 42 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref_2__projection #"i-cstrea.ads" 42 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref_2__projection
 
 meta "inline : no" function int____ref_2__projection
 
 val int____havoc #"i-cstrea.ads" 42 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"i-cstrea.ads" 43 0 0# 
 
 function first #"i-cstrea.ads" 43 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 43 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 43 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long__ref #"i-cstrea.ads" 43 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref_2__projection #"i-cstrea.ads" 43 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref_2__projection
 
 meta "inline : no" function long__ref_2__projection
 
 val long__havoc #"i-cstrea.ads" 43 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type size_t #"i-cstrea.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 44 0 0# 
   : BV32.t
 
 function first #"i-cstrea.ads" 44 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 44 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 44 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 44 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"i-cstrea.ads" 44 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_t__ref #"i-cstrea.ads" 44 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref_2__projection #"i-cstrea.ads" 44 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref_2__projection
 
 meta "inline : no" function size_t__ref_2__projection
 
 val size_t__havoc #"i-cstrea.ads" 44 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t #"i-cstrea.ads" 45 0 0# 
 
 function first #"i-cstrea.ads" 45 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 45 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 45 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ssize_t__ref #"i-cstrea.ads" 45 0 0# =
  { mutable ssize_t__content "model_trace:" : ssize_t }
 
 function ssize_t__ref_2__projection #"i-cstrea.ads" 45 0 0# 
   (a : ssize_t__ref) : ssize_t =
  a.ssize_t__content
 
 meta "model_projection" function ssize_t__ref_2__projection
 
 meta "inline : no" function ssize_t__ref_2__projection
 
 val ssize_t__havoc #"i-cstrea.ads" 45 0 0# 
   (x : ssize_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 #"i-cstrea.ads" 46 0 0# 
 
 function first #"i-cstrea.ads" 46 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-cstrea.ads" 46 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-cstrea.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int64__ref #"i-cstrea.ads" 46 0 0# =
  { mutable int64__content "model_trace:" : int64 }
 
 function int64__ref_2__projection #"i-cstrea.ads" 46 0 0# 
   (a : int64__ref) : int64 =
  a.int64__content
 
 meta "model_projection" function int64__ref_2__projection
 
 meta "inline : no" function int64__ref_2__projection
 
 val int64__havoc #"i-cstrea.ads" 46 0 0# 
   (x : int64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__voids
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type voids #"i-cstrea.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 47 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 47 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 47 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = voids, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type voids__ref #"i-cstrea.ads" 47 0 0# =
  { mutable voids__content "model_trace:" : voids }
 
 function voids__ref___projection #"i-cstrea.ads" 47 0 0# 
   (a : voids__ref) : voids =
  a.voids__content
 
 meta "model_projection" function voids__ref___projection
 
 meta "inline : no" function voids__ref___projection
 
 val voids__havoc #"i-cstrea.ads" 47 0 0# 
   (x : voids__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_stream" defined at i-cstrea.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__null_stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_stream #"i-cstrea.ads" 49 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module for defining the constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__eof
 use import "_gnatprove_standard".Main

 function eof #"i-cstrea.ads" 56 0 0# "model" "model_trace:16098" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iofbf
 use import "_gnatprove_standard".Main

 function iofbf #"i-cstrea.ads" 59 0 0# "model" "model_trace:16107" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iolbf
 use import "_gnatprove_standard".Main

 function iolbf #"i-cstrea.ads" 60 0 0# "model" "model_trace:16116" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ionbf
 use import "_gnatprove_standard".Main

 function ionbf #"i-cstrea.ads" 61 0 0# "model" "model_trace:16125" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__l_tmpnam
 use import "_gnatprove_standard".Main

 function l_tmpnam #"i-cstrea.ads" 64 0 0# "model" "model_trace:16134" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_cur
 use import "_gnatprove_standard".Main

 function seek_cur #"i-cstrea.ads" 67 0 0# "model" "model_trace:16143" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_end
 use import "_gnatprove_standard".Main

 function seek_end #"i-cstrea.ads" 68 0 0# "model" "model_trace:16152" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_set
 use import "_gnatprove_standard".Main

 function seek_set #"i-cstrea.ads" 69 0 0# "model" "model_trace:16161" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdin
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stdin #"i-cstrea.ads" 72 0 0# 
   (__void_param : unit) : BV32.t

end

(* Module for possibly declaring a logic function for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdout
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stdout #"i-cstrea.ads" 73 0 0# 
   (__void_param : unit) : BV32.t

end

(* Module for possibly declaring a logic function for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stderr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stderr #"i-cstrea.ads" 74 0 0# 
   (__void_param : unit) : BV32.t

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__feof__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 95 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__feof__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__feof
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function feof #"i-cstrea.ads" 95 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ferror__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 97 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__ferror__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__ferror
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ferror #"i-cstrea.ads" 97 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fileno__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 106 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fileno__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fileno
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fileno #"i-cstrea.ads" 106 0 0# 
   (stream : BV32.t) : int

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 129 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 130 0 0# "model" "model_trace:16593" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 131 0 0# "model" "model_trace:16602" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 132 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fread #"i-cstrea.ads" 128 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 135 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "index" defined at i-cstrea.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__index
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function index #"i-cstrea.ads" 136 0 0# "model" "model_trace:16639" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "index" defined at i-cstrea.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__index__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 137 0 0# "model" "model_trace:16648" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 138 0 0# "model" "model_trace:16657" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 139 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fread__2 #"i-cstrea.ads" 134 0 0# 
   (buffer : BV32.t) (index : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 172 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 173 0 0# "model" "model_trace:16886" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 174 0 0# "model" "model_trace:16895" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 175 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fwrite
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fwrite #"i-cstrea.ads" 171 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 185 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 186 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__mode
 use import "_gnatprove_standard".Main

 function mode #"i-cstrea.ads" 187 0 0# "model" "model_trace:17011" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 188 0 0# "model" "model_trace:17020" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function setvbuf #"i-cstrea.ads" 184 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int

end

(* Module for defining the constant "name" defined at i-cstrea.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__file_exists__name
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function name #"i-cstrea.ads" 212 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at i-cstrea.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__file_exists__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__file_exists
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function file_exists #"i-cstrea.ads" 212 0 0# 
   (name : BV32.t) : int

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__is_regular_file__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 215 0 0# "model" "model_trace:17153" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__is_regular_file__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__is_regular_file
 use import "_gnatprove_standard".Main

 function is_regular_file #"i-cstrea.ads" 215 0 0# 
   (handle : int) : int

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_binary_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 223 0 0# "model" "model_trace:17172" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_binary_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_text_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 224 0 0# "model" "model_trace:17190" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_text_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type content_encoding #"i-cstrea.ads" 230 0 0# 
 
 function first #"i-cstrea.ads" 230 0 0# 
   : int =
  0
 
 function last #"i-cstrea.ads" 230 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 230 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type content_encoding__ref #"i-cstrea.ads" 230 0 0# =
  { mutable content_encoding__content "model_trace:" : content_encoding }
 
 function content_encoding__ref___projection #"i-cstrea.ads" 230 0 0# 
   (a : content_encoding__ref) : content_encoding =
  a.content_encoding__content
 
 meta "model_projection" function content_encoding__ref___projection
 
 meta "inline : no" function content_encoding__ref___projection
 
 val content_encoding__havoc #"i-cstrea.ads" 230 0 0# 
   (x : content_encoding__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type text_content_encoding #"i-cstrea.ads" 248 0 0# 
 
 function first #"i-cstrea.ads" 248 0 0# 
   : int =
  1
 
 function last #"i-cstrea.ads" 248 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 248 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type text_content_encoding__ref #"i-cstrea.ads" 248 0 0# =
  { mutable text_content_encoding__content "model_trace:" : text_content_encoding }
 
 function text_content_encoding__ref___projection #"i-cstrea.ads" 248 0 0# 
   (a : text_content_encoding__ref) : text_content_encoding =
  a.text_content_encoding__content
 
 meta "model_projection" function text_content_encoding__ref___projection
 
 meta "inline : no" function text_content_encoding__ref___projection
 
 val text_content_encoding__havoc #"i-cstrea.ads" 248 0 0# 
   (x : text_content_encoding__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__non_default_text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type non_default_text_content_encoding #"i-cstrea.ads" 251 0 0# 
 
 function first #"i-cstrea.ads" 251 0 0# 
   : int =
  2
 
 function last #"i-cstrea.ads" 251 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 251 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = non_default_text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type non_default_text_content_encoding__ref #"i-cstrea.ads" 251 0 0# =
  { mutable non_default_text_content_encoding__content "model_trace:" : non_default_text_content_encoding }
 
 function non_default_text_content_encoding__ref___projection #"i-cstrea.ads" 251 0 0# 
   (a : non_default_text_content_encoding__ref) : non_default_text_content_encoding =
  a.non_default_text_content_encoding__content
 
 meta "model_projection" function non_default_text_content_encoding__ref___projection
 
 meta "inline : no" function non_default_text_content_encoding__ref___projection
 
 val non_default_text_content_encoding__havoc #"i-cstrea.ads" 251 0 0# 
   (x : non_default_text_content_encoding__ref) : unit
  writes {x}

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 254 0 0# "model" "model_trace:17304" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__mode
 use import "_gnatprove_standard".Main

 function mode #"i-cstrea.ads" 254 0 0# "model" "model_trace:17313" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 230 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__nam
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function nam #"i-cstrea.ads" 262 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__nam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 262 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__max_path_len
 use import "_gnatprove_standard".Main

 function max_path_len #"i-cstrea.ads" 270 0 0# "model" "model_trace:17354" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode #"s-ficobl.ads" 63 0 0# 
 
 function first #"s-ficobl.ads" 63 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 63 0 0# 
   : int =
  3
 
 predicate in_range #"s-ficobl.ads" 63 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type file_mode__ref #"s-ficobl.ads" 63 0 0# =
  { mutable file_mode__content "model_trace:" : file_mode }
 
 function file_mode__ref___projection #"s-ficobl.ads" 63 0 0# 
   (a : file_mode__ref) : file_mode =
  a.file_mode__content
 
 meta "model_projection" function file_mode__ref___projection
 
 meta "inline : no" function file_mode__ref___projection
 
 val file_mode__havoc #"s-ficobl.ads" 63 0 0# 
   (x : file_mode__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__read_file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type read_file_mode #"s-ficobl.ads" 64 0 0# 
 
 function first #"s-ficobl.ads" 64 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 64 0 0# 
   : int =
  1
 
 predicate in_range #"s-ficobl.ads" 64 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = read_file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type read_file_mode__ref #"s-ficobl.ads" 64 0 0# =
  { mutable read_file_mode__content "model_trace:" : read_file_mode }
 
 function read_file_mode__ref___projection #"s-ficobl.ads" 64 0 0# 
   (a : read_file_mode__ref) : read_file_mode =
  a.read_file_mode__content
 
 meta "model_projection" function read_file_mode__ref___projection
 
 meta "inline : no" function read_file_mode__ref___projection
 
 val read_file_mode__havoc #"s-ficobl.ads" 64 0 0# 
   (x : read_file_mode__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__shared_status_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type shared_status_type #"s-ficobl.ads" 69 0 0# 
 
 function first #"s-ficobl.ads" 69 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 69 0 0# 
   : int =
  2
 
 predicate in_range #"s-ficobl.ads" 69 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = shared_status_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type shared_status_type__ref #"s-ficobl.ads" 69 0 0# =
  { mutable shared_status_type__content "model_trace:" : shared_status_type }
 
 function shared_status_type__ref___projection #"s-ficobl.ads" 69 0 0# 
   (a : shared_status_type__ref) : shared_status_type =
  a.shared_status_type__content
 
 meta "model_projection" function shared_status_type__ref___projection
 
 meta "inline : no" function shared_status_type__ref___projection
 
 val shared_status_type__havoc #"s-ficobl.ads" 69 0 0# 
   (x : shared_status_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_methodB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type twc_encoding_methodB #"s-wchcon.ads" 94 0 0# 
 
 function first #"s-wchcon.ads" 94 0 0# 
   : int =
  ( -128 )
 
 function last #"s-wchcon.ads" 94 0 0# 
   : int =
  127
 
 predicate in_range #"s-wchcon.ads" 94 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = twc_encoding_methodB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type twc_encoding_methodB__ref #"s-wchcon.ads" 94 0 0# =
  { mutable twc_encoding_methodB__content "model_trace:" : twc_encoding_methodB }
 
 function twc_encoding_methodB__ref___projection #"s-wchcon.ads" 94 0 0# 
   (a : twc_encoding_methodB__ref) : twc_encoding_methodB =
  a.twc_encoding_methodB__content
 
 meta "model_projection" function twc_encoding_methodB__ref___projection
 
 meta "inline : no" function twc_encoding_methodB__ref___projection
 
 val twc_encoding_methodB__havoc #"s-wchcon.ads" 94 0 0# 
   (x : twc_encoding_methodB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_encoding_method #"s-wchcon.ads" 94 0 0# 
 
 function first #"s-wchcon.ads" 94 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 94 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 94 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wc_encoding_method__ref #"s-wchcon.ads" 94 0 0# =
  { mutable wc_encoding_method__content "model_trace:" : wc_encoding_method }
 
 function wc_encoding_method__ref___projection #"s-wchcon.ads" 94 0 0# 
   (a : wc_encoding_method__ref) : wc_encoding_method =
  a.wc_encoding_method__content
 
 meta "model_projection" function wc_encoding_method__ref___projection
 
 meta "inline : no" function wc_encoding_method__ref___projection
 
 val wc_encoding_method__havoc #"s-wchcon.ads" 94 0 0# 
   (x : wc_encoding_method__ref) : unit
  writes {x}

end

(* Module for defining the constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_hex
 use import "_gnatprove_standard".Main

 function wcem_hex #"s-wchcon.ads" 100 0 0# "model" "model_trace:19332" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_upper
 use import "_gnatprove_standard".Main

 function wcem_upper #"s-wchcon.ads" 108 0 0# "model" "model_trace:19342" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_shift_jis
 use import "_gnatprove_standard".Main

 function wcem_shift_jis #"s-wchcon.ads" 117 0 0# "model" "model_trace:19352" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_euc
 use import "_gnatprove_standard".Main

 function wcem_euc #"s-wchcon.ads" 126 0 0# "model" "model_trace:19362" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_utf8
 use import "_gnatprove_standard".Main

 function wcem_utf8 #"s-wchcon.ads" 134 0 0# "model" "model_trace:19372" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_brackets
 use import "_gnatprove_standard".Main

 function wcem_brackets #"s-wchcon.ads" 156 0 0# "model" "model_trace:19382" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for axiomatizing type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__wc_encoding_method

 type component_type #"s-wchcon.ads" 94 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_encoding_lettersB #"s-wchcon.ads" 169 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type twc_encoding_lettersB__ref #"s-wchcon.ads" 169 0 0# =
  { mutable twc_encoding_lettersB__content "model_trace:" : twc_encoding_lettersB }
 
 function twc_encoding_lettersB__ref___projection #"s-wchcon.ads" 169 0 0# 
   (a : twc_encoding_lettersB__ref) : twc_encoding_lettersB =
  a.twc_encoding_lettersB__content
 
 meta "model_projection" function twc_encoding_lettersB__ref___projection
 
 meta "inline : no" function twc_encoding_lettersB__ref___projection
 
 val twc_encoding_lettersB__havoc #"s-wchcon.ads" 169 0 0# 
   (x : twc_encoding_lettersB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-wchcon.ads" 169 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"s-wchcon.ads" 170 0 0# 
 
 function first #"s-wchcon.ads" 170 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 170 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 170 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"s-wchcon.ads" 170 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_2__projection #"s-wchcon.ads" 170 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_2__projection
 
 meta "inline : no" function t3s__ref_2__projection
 
 val t3s__havoc #"s-wchcon.ads" 170 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-wchcon.ads" 170 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_encoding_letters
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function wc_encoding_letters #"s-wchcon.ads" 169 0 0# "model_projected" "model_trace:19392" 
   : Array__Int__Standard__character.map
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 169 0 0# 
   : int

end

(* Module for axiomatizing type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_esc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_esc_encoding_method #"s-wchcon.ads" 180 0 0# 
 
 function first #"s-wchcon.ads" 180 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 180 0 0# 
   : int =
  1
 
 predicate in_range #"s-wchcon.ads" 180 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_esc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wc_esc_encoding_method__ref #"s-wchcon.ads" 180 0 0# =
  { mutable wc_esc_encoding_method__content "model_trace:" : wc_esc_encoding_method }
 
 function wc_esc_encoding_method__ref___projection #"s-wchcon.ads" 180 0 0# 
   (a : wc_esc_encoding_method__ref) : wc_esc_encoding_method =
  a.wc_esc_encoding_method__content
 
 meta "model_projection" function wc_esc_encoding_method__ref___projection
 
 meta "inline : no" function wc_esc_encoding_method__ref___projection
 
 val wc_esc_encoding_method__havoc #"s-wchcon.ads" 180 0 0# 
   (x : wc_esc_encoding_method__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_upper_half_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_upper_half_encoding_method #"s-wchcon.ads" 184 0 0# 
 
 function first #"s-wchcon.ads" 184 0 0# 
   : int =
  2
 
 function last #"s-wchcon.ads" 184 0 0# 
   : int =
  5
 
 predicate in_range #"s-wchcon.ads" 184 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_upper_half_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wc_upper_half_encoding_method__ref #"s-wchcon.ads" 184 0 0# =
  { mutable wc_upper_half_encoding_method__content "model_trace:" : wc_upper_half_encoding_method }
 
 function wc_upper_half_encoding_method__ref___projection #"s-wchcon.ads" 184 0 0# 
   (a : wc_upper_half_encoding_method__ref) : wc_upper_half_encoding_method =
  a.wc_upper_half_encoding_method__content
 
 meta "model_projection" function wc_upper_half_encoding_method__ref___projection
 
 meta "inline : no" function wc_upper_half_encoding_method__ref___projection
 
 val wc_upper_half_encoding_method__havoc #"s-wchcon.ads" 184 0 0# 
   (x : wc_upper_half_encoding_method__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 function index_I1_one #"s-wchcon.ads" 184 0 0# 
   : int =
  1
 
 type component_type #"s-wchcon.ads" 184 0 0# =
  Standard__natural.natural
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__wc_encoding_method
 use        Array__Int__Standard__natural

 type component_type #"system.ads" 1 0 0# =
  Standard__natural.natural
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_longest_sequencesB #"s-wchcon.ads" 193 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type twc_longest_sequencesB__ref #"s-wchcon.ads" 193 0 0# =
  { mutable twc_longest_sequencesB__content "model_trace:" : twc_longest_sequencesB }
 
 function twc_longest_sequencesB__ref___projection #"s-wchcon.ads" 193 0 0# 
   (a : twc_longest_sequencesB__ref) : twc_longest_sequencesB =
  a.twc_longest_sequencesB__content
 
 meta "model_projection" function twc_longest_sequencesB__ref___projection
 
 meta "inline : no" function twc_longest_sequencesB__ref___projection
 
 val twc_longest_sequencesB__havoc #"s-wchcon.ads" 193 0 0# 
   (x : twc_longest_sequencesB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__natural

 type component_type #"s-wchcon.ads" 193 0 0# =
  Standard__natural.natural
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"s-wchcon.ads" 194 0 0# 
 
 function first #"s-wchcon.ads" 194 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 194 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 194 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t7s__ref #"s-wchcon.ads" 194 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref_2__projection #"s-wchcon.ads" 194 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref_2__projection
 
 meta "inline : no" function t7s__ref_2__projection
 
 val t7s__havoc #"s-wchcon.ads" 194 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__natural

 type component_type #"s-wchcon.ads" 194 0 0# =
  Standard__natural.natural
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequences
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__natural

 function wc_longest_sequences #"s-wchcon.ads" 193 0 0# "model_projected" "model_trace:19460" 
   : Array__Int__Standard__natural.map
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 193 0 0# 
   : int

end

(* Module for defining the constant "c" defined at s-wchcon.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__c
 use import "_gnatprove_standard".Main

 function c #"s-wchcon.ads" 203 0 0# "model" "model_trace:19498" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method
 use import "_gnatprove_standard".Main

 function get_wc_encoding_method #"s-wchcon.ads" 203 0 0# 
   (c : int) : int

end

(* Module for defining the constant "s" defined at s-wchcon.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__2__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"s-wchcon.ads" 207 0 0# "model_projected" "model_trace:19517" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-wchcon.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__2__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method__2
 use import "_gnatprove_standard".Main
 use        Standard__string

 function get_wc_encoding_method__2 #"s-wchcon.ads" 207 0 0# 
   (s : Standard__string.string) : int

end

(* Module for defining the constant "c" defined at s-wchcon.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__c
 use import "_gnatprove_standard".Main

 function c #"s-wchcon.ads" 213 0 0# "model" "model_trace:19536" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "em" defined at s-wchcon.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__em
 use import "_gnatprove_standard".Main

 function em #"s-wchcon.ads" 214 0 0# "model" "model_trace:19545" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "em" defined at s-wchcon.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__em__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__is_start_of_encoding
 use import "_gnatprove_standard".Main

 function is_start_of_encoding #"s-wchcon.ads" 212 0 0# 
   (c : int) (em : int) : bool

end

(* Module for axiomatizing type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"s-wchcon.ads" 214 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_5__projection #"s-wchcon.ads" 214 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_5__projection
 
 meta "inline : no" function __split_fields_5__projection
 
 type __split_fields__ref #"s-wchcon.ads" 214 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"s-wchcon.ads" 214 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"s-wchcon.ads" 214 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type file_type #"a-textio.ads" 52 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function file_type___projection #"a-textio.ads" 52 0 0# 
   (a : file_type) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function file_type___projection
 
 meta "inline : no" function file_type___projection
 
 function bool_eq #"a-textio.ads" 52 0 0# 
   (a : file_type) (b : file_type) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-textio.ads" 52 0 0# 
   (a : file_type) (b : file_type) : bool
 
 function value__size #"a-textio.ads" 52 0 0# 
   : int
 
 function object__size #"a-textio.ads" 52 0 0# 
   (a : file_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : file_type.
   ((object__size a) >= 0))
 
 function dummy #"a-textio.ads" 52 0 0# 
   : file_type
 
 type file_type__ref #"a-textio.ads" 52 0 0# =
  { mutable file_type__content "model_trace:" : file_type }
 
 function file_type__ref___projection #"a-textio.ads" 52 0 0# 
   (a : file_type__ref) : file_type =
  a.file_type__content
 
 meta "model_projection" function file_type__ref___projection
 
 meta "inline : no" function file_type__ref___projection
 
 val file_type__havoc #"a-textio.ads" 52 0 0# 
   (x : file_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode #"a-textio.ads" 53 0 0# 
 
 function first #"a-textio.ads" 53 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 53 0 0# 
   : int =
  2
 
 predicate in_range #"a-textio.ads" 53 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type file_mode__ref #"a-textio.ads" 53 0 0# =
  { mutable file_mode__content "model_trace:" : file_mode }
 
 function file_mode__ref_2__projection #"a-textio.ads" 53 0 0# 
   (a : file_mode__ref) : file_mode =
  a.file_mode__content
 
 meta "model_projection" function file_mode__ref_2__projection
 
 meta "inline : no" function file_mode__ref_2__projection
 
 val file_mode__havoc #"a-textio.ads" 53 0 0# 
   (x : file_mode__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcountB #"a-textio.ads" 64 0 0# 
 
 function first #"a-textio.ads" 64 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"a-textio.ads" 64 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 64 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tcountB__ref #"a-textio.ads" 64 0 0# =
  { mutable tcountB__content "model_trace:" : tcountB }
 
 function tcountB__ref___projection #"a-textio.ads" 64 0 0# 
   (a : tcountB__ref) : tcountB =
  a.tcountB__content
 
 meta "model_projection" function tcountB__ref___projection
 
 meta "inline : no" function tcountB__ref___projection
 
 val tcountB__havoc #"a-textio.ads" 64 0 0# 
   (x : tcountB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count #"a-textio.ads" 64 0 0# 
 
 function first #"a-textio.ads" 64 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 64 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 64 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type count__ref #"a-textio.ads" 64 0 0# =
  { mutable count__content "model_trace:" : count }
 
 function count__ref___projection #"a-textio.ads" 64 0 0# 
   (a : count__ref) : count =
  a.count__content
 
 meta "model_projection" function count__ref___projection
 
 meta "inline : no" function count__ref___projection
 
 val count__havoc #"a-textio.ads" 64 0 0# 
   (x : count__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__positive_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive_count #"a-textio.ads" 68 0 0# 
 
 function first #"a-textio.ads" 68 0 0# 
   : int =
  1
 
 function last #"a-textio.ads" 68 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 68 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive_count__ref #"a-textio.ads" 68 0 0# =
  { mutable positive_count__content "model_trace:" : positive_count }
 
 function positive_count__ref___projection #"a-textio.ads" 68 0 0# 
   (a : positive_count__ref) : positive_count =
  a.positive_count__content
 
 meta "model_projection" function positive_count__ref___projection
 
 meta "inline : no" function positive_count__ref___projection
 
 val positive_count__havoc #"a-textio.ads" 68 0 0# 
   (x : positive_count__ref) : unit
  writes {x}

end

(* Module for defining the constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__unbounded
 use import "_gnatprove_standard".Main

 function unbounded #"a-textio.ads" 70 0 0# "model" "model_trace:12256" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module for axiomatizing type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__field
 use import "_gnatprove_standard".Main
 use import "int".Int

 type field #"a-textio.ads" 73 0 0# 
 
 function first #"a-textio.ads" 73 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 73 0 0# 
   : int =
  255
 
 predicate in_range #"a-textio.ads" 73 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = field, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type field__ref #"a-textio.ads" 73 0 0# =
  { mutable field__content "model_trace:" : field }
 
 function field__ref___projection #"a-textio.ads" 73 0 0# 
   (a : field__ref) : field =
  a.field__content
 
 meta "model_projection" function field__ref___projection
 
 meta "inline : no" function field__ref___projection
 
 val field__havoc #"a-textio.ads" 73 0 0# 
   (x : field__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__number_base
 use import "_gnatprove_standard".Main
 use import "int".Int

 type number_base #"a-textio.ads" 78 0 0# 
 
 function first #"a-textio.ads" 78 0 0# 
   : int =
  2
 
 function last #"a-textio.ads" 78 0 0# 
   : int =
  16
 
 predicate in_range #"a-textio.ads" 78 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = number_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type number_base__ref #"a-textio.ads" 78 0 0# =
  { mutable number_base__content "model_trace:" : number_base }
 
 function number_base__ref___projection #"a-textio.ads" 78 0 0# 
   (a : number_base__ref) : number_base =
  a.number_base__content
 
 meta "model_projection" function number_base__ref___projection
 
 meta "inline : no" function number_base__ref___projection
 
 val number_base__havoc #"a-textio.ads" 78 0 0# 
   (x : number_base__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__type_set
 use import "_gnatprove_standard".Main
 use import "int".Int

 type type_set #"a-textio.ads" 80 0 0# 
 
 function first #"a-textio.ads" 80 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 80 0 0# 
   : int =
  1
 
 predicate in_range #"a-textio.ads" 80 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_set, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type type_set__ref #"a-textio.ads" 80 0 0# =
  { mutable type_set__content "model_trace:" : type_set }
 
 function type_set__ref___projection #"a-textio.ads" 80 0 0# 
   (a : type_set__ref) : type_set =
  a.type_set__content
 
 meta "model_projection" function type_set__ref___projection
 
 meta "inline : no" function type_set__ref___projection
 
 val type_set__havoc #"a-textio.ads" 80 0 0# 
   (x : type_set__ref) : unit
  writes {x}

end

(* Module for defining the constant "mode" defined at a-textio.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 88 0 0# "model" "model_trace:12334" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"a-textio.ads" 89 0 0# "model_projected" "model_trace:12344" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form #"a-textio.ads" 90 0 0# "model_projected" "model_trace:12354" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 94 0 0# "model" "model_trace:12382" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"a-textio.ads" 95 0 0# "model_projected" "model_trace:12391" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form #"a-textio.ads" 96 0 0# "model_projected" "model_trace:12400" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__reset__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 100 0 0# "model" "model_trace:12464" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__mode__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 103 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__mode__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function mode #"a-textio.ads" 103 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__name__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 104 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__name__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function name #"a-textio.ads" 104 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__form__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 105 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__form__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function form #"a-textio.ads" 105 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__is_open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 107 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__is_open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__is_open
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function is_open #"a-textio.ads" 107 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool

end

(* Module for defining the constant "file" defined at a-textio.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_input__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 113 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_input__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_output__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 114 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_output__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_error__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 115 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_error__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_input #"a-textio.ads" 117 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_output #"a-textio.ads" 118 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_error #"a-textio.ads" 119 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_input #"a-textio.ads" 121 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_output #"a-textio.ads" 122 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for possibly declaring a logic function for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_error #"a-textio.ads" 123 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type

end

(* Module for defining the constant "file" defined at a-textio.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__flush__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 142 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 149 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 149 0 0# "model" "model_trace:12796" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 150 0 0# "model" "model_trace:12814" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 152 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 152 0 0# "model" "model_trace:12841" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 153 0 0# "model" "model_trace:12859" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 155 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function line_length #"a-textio.ads" 155 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for possibly declaring a logic function for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length__2
 use import "_gnatprove_standard".Main

 function line_length__2 #"a-textio.ads" 156 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 158 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function page_length #"a-textio.ads" 158 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for possibly declaring a logic function for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length__2
 use import "_gnatprove_standard".Main

 function page_length__2 #"a-textio.ads" 159 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 165 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 165 0 0# "model" "model_trace:12944" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__2__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 166 0 0# "model" "model_trace:12963" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 168 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 168 0 0# "model" "model_trace:12991" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__2__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 169 0 0# "model" "model_trace:13010" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 171 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_line #"a-textio.ads" 171 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool

end

(* Module for possibly declaring a logic function for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line__2
 use import "_gnatprove_standard".Main

 function end_of_line__2 #"a-textio.ads" 172 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "file" defined at a-textio.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 174 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 177 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 180 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_page #"a-textio.ads" 180 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool

end

(* Module for possibly declaring a logic function for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page__2
 use import "_gnatprove_standard".Main

 function end_of_page__2 #"a-textio.ads" 181 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "file" defined at a-textio.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_file__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 183 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_file #"a-textio.ads" 183 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool

end

(* Module for possibly declaring a logic function for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file__2
 use import "_gnatprove_standard".Main

 function end_of_file__2 #"a-textio.ads" 184 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "file" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 186 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 186 0 0# "model" "model_trace:13179" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 187 0 0# "model" "model_trace:13197" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 189 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 189 0 0# "model" "model_trace:13224" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 190 0 0# "model" "model_trace:13242" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 192 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function col #"a-textio.ads" 192 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for possibly declaring a logic function for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col__2
 use import "_gnatprove_standard".Main

 function col__2 #"a-textio.ads" 193 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 195 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:195, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function line #"a-textio.ads" 195 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for possibly declaring a logic function for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line__2
 use import "_gnatprove_standard".Main

 function line__2 #"a-textio.ads" 196 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 198 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function page #"a-textio.ads" 198 0 0# 
   (file : Ada__text_io__file_type.file_type) : int

end

(* Module for possibly declaring a logic function for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page__2
 use import "_gnatprove_standard".Main

 function page__2 #"a-textio.ads" 199 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "file" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 205 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 207 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__item
 use import "_gnatprove_standard".Main

 function item #"a-textio.ads" 207 0 0# "model" "model_trace:13401" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__2__item
 use import "_gnatprove_standard".Main

 function item #"a-textio.ads" 208 0 0# "model" "model_trace:13419" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__look_ahead__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 211 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 220 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 227 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 239 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 241 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 241 0 0# "model_projected" "model_trace:13662" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 242 0 0# "model_projected" "model_trace:13680" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 245 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:245, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 253 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function get_line__3 #"a-textio.ads" 253 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string

end

(* Module for possibly declaring a logic function for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__4
 use import "_gnatprove_standard".Main
 use        Standard__string

 function get_line__4 #"a-textio.ads" 256 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for defining the constant "file" defined at a-textio.ads:260, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 260 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:260, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 261 0 0# "model_projected" "model_trace:13807" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:261, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 264 0 0# "model_projected" "model_trace:13825" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:264, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:439, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__write__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"a-textio.ads" 439 0 0# "model_projected" "model_trace:14316" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__eof_char
 use import "_gnatprove_standard".Main

 function eof_char #"a-textio.ads" 460 0 0# 
   (__void_param : unit) : int

end

(* Module for axiomatizing type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Tracks__track
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations

 type __split_fields #"system.ads" 1 0 0# =
  { rec__id "model_trace:.7326" : Standard__natural.natural; rec__origin "model_trace:.7337" : Types__station_locations.station_locations; rec__destination "model_trace:.7352" : Types__station_locations.station_locations; rec__trainid "model_trace:.7367" : Standard__natural.natural; rec__trackslineorigin "model_trace:.7378" : Types__station_locations.station_locations; rec__trackslinedestination "model_trace:.7393" : Types__station_locations.station_locations }
 
 function __split_fields_ID2__projection #"types.ads" 11 0 0# "model_trace:.7326" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID2__projection
 
 meta "inline : no" function __split_fields_ID2__projection
 
 function __split_fields_Origin2__projection #"tracks.ads" 7 0 0# "model_trace:.7337" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin2__projection
 
 meta "inline : no" function __split_fields_Origin2__projection
 
 function __split_fields_Destination2__projection #"tracks.ads" 7 0 0# "model_trace:.7352" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination2__projection
 
 meta "inline : no" function __split_fields_Destination2__projection
 
 function __split_fields_TrainID__projection #"tracks.ads" 7 0 0# "model_trace:.7367" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID__projection
 
 meta "inline : no" function __split_fields_TrainID__projection
 
 function __split_fields_TracksLineOrigin__projection #"tracks.ads" 7 0 0# "model_trace:.7378" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslineorigin
 
 meta "model_projection" function __split_fields_TracksLineOrigin__projection
 
 meta "inline : no" function __split_fields_TracksLineOrigin__projection
 
 function __split_fields_TracksLineDestination__projection #"tracks.ads" 7 0 0# "model_trace:.7393" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslinedestination
 
 meta "model_projection" function __split_fields_TracksLineDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineDestination__projection
 
 type __split_fields__ref #"tracks.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"tracks.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"tracks.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type track #"tracks.ads" 7 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function track___projection #"tracks.ads" 7 0 0# 
   (a : track) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function track___projection
 
 meta "inline : no" function track___projection
 
 predicate id__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__id_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate origin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__origin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__destination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate trainid__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trainid_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate trackslineorigin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslineorigin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslineorigin__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineorigin) }
 
 predicate trackslinedestination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslinedestination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslinedestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslinedestination) }
 
 function bool_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslineorigin) = (Types__station_locations.to_rep b.__split_fields.rec__trackslineorigin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslinedestination) = (Types__station_locations.to_rep b.__split_fields.rec__trackslinedestination)) )) then (
   True) else (
   False))
 
 function user_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool
 
 function value__size #"tracks.ads" 7 0 0# 
   : int
 
 function object__size #"tracks.ads" 7 0 0# 
   (a : track) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : track.
   ((object__size a) >= 0))
 
 function dummy #"tracks.ads" 7 0 0# 
   : track
 
 type track__ref #"tracks.ads" 7 0 0# =
  { mutable track__content "model_trace:" : track }
 
 function track__ref___projection #"tracks.ads" 7 0 0# 
   (a : track__ref) : track =
  a.track__content
 
 meta "model_projection" function track__ref___projection
 
 meta "inline : no" function track__ref___projection
 
 val track__havoc #"tracks.ads" 7 0 0# 
   (x : track__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data_type
 use export Tracks__track
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 22 0 0# =
  track
 
 function to_base #"tracks.ads" 7 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 22 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 22 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_2__projection #"list.ads" 22 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_2__projection
 
 meta "inline : no" function data_type__ref_2__projection
 
 val data_type__havoc #"list.ads" 22 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 23 0 0# "model" "model_trace:24256" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_size" defined at list.ads:24 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__max_size
 use import "_gnatprove_standard".Main

 function max_size #"list.ads" 24 0 0# "model" "model_trace:24265" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:25 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__no_found
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function no_found #"list.ads" 25 0 0# "model_projected" "model_trace:24274" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:95 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type

 type __split_fields #"list.ads" 22 0 0# =
  { rec__data "model_trace:.24117" : Stations__list_tracks__data_type.data_type; rec__id "model_trace:.24127" : Standard__natural.natural }
 
 function __split_fields_DATA2__projection #"system.ads" 1 0 0# "model_trace:.24117" 
   (a : __split_fields) : Stations__list_tracks__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA2__projection
 
 meta "inline : no" function __split_fields_DATA2__projection
 
 function __split_fields_ID3__projection #"list.ads" 95 0 0# "model_trace:.24127" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID3__projection
 
 meta "inline : no" function __split_fields_ID3__projection
 
 type __split_fields__ref #"list.ads" 95 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_10__projection #"list.ads" 95 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_10__projection
 
 meta "inline : no" function __split_fields__ref_10__projection
 
 val __split_fields__havoc #"list.ads" 95 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 95 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_2__projection #"list.ads" 95 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_2__projection
 
 meta "inline : no" function data_2__projection
 
 predicate data__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 95 0 0# 
   (a : data) : Stations__list_tracks__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 95 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Stations__list_tracks__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 95 0 0# 
   : int
 
 function object__size #"list.ads" 95 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 95 0 0# 
   : data
 
 type data__ref #"list.ads" 95 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_2__projection #"list.ads" 95 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_2__projection
 
 meta "inline : no" function data__ref_2__projection
 
 val data__havoc #"list.ads" 95 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:103 instantiated at stations.ads:10, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data

 function index_I1_one #"list.ads" 95 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 95 0 0# =
  Stations__list_tracks__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:103 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"list.ads" 95 0 0# =
  Stations__list_tracks__data.data
 
 function index_1_id #"list.ads" 95 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 103 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 103 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_2__projection #"list.ads" 103 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_2__projection
 
 meta "inline : no" function list_array__ref_2__projection
 
 val list_array__havoc #"list.ads" 103 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:108 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t4s #"list.ads" 108 0 0# 
 
 function first #"list.ads" 108 0 0# 
   : int =
  1
 
 function last #"list.ads" 108 0 0# 
   : int =
  100
 
 predicate in_range #"list.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t4s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t4s__ref #"list.ads" 108 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_2__projection #"list.ads" 108 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_2__projection
 
 meta "inline : no" function t4s__ref_2__projection
 
 val t4s__havoc #"list.ads" 108 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at list.ads:108 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"list.ads" 108 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 95 0 0# 
   : int =
  1
 
 function last #"list.ads" 95 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:105 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T5s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 95 0 0# =
  { rec__size "model_trace:.24161" : Standard__natural.natural; rec__elements "model_trace:.24172" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24187" : Standard__positive.positive; rec__list_max_size "model_trace:.24198" : Standard__positive.positive }
 
 function __split_fields_SIZE2__projection #"system.ads" 1 0 0# "model_trace:.24161" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE2__projection
 
 meta "inline : no" function __split_fields_SIZE2__projection
 
 function __split_fields_ELEMENTS2__projection #"list.ads" 105 0 0# "model_trace:.24172" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS2__projection
 
 meta "inline : no" function __split_fields_ELEMENTS2__projection
 
 function __split_fields_HEAD2__projection #"list.ads" 105 0 0# "model_trace:.24187" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD2__projection
 
 meta "inline : no" function __split_fields_HEAD2__projection
 
 function __split_fields_LIST_MAX_SIZE2__projection #"list.ads" 105 0 0# "model_trace:.24198" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__list_max_size
 
 meta "model_projection" function __split_fields_LIST_MAX_SIZE2__projection
 
 meta "inline : no" function __split_fields_LIST_MAX_SIZE2__projection
 
 type __split_fields__ref #"list.ads" 105 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_11__projection #"list.ads" 105 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_11__projection
 
 meta "inline : no" function __split_fields__ref_11__projection
 
 val __split_fields__havoc #"list.ads" 105 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 105 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_2__projection #"list.ads" 105 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_2__projection
 
 meta "inline : no" function list_ptr_2__projection
 
 predicate size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 predicate list_max_size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__list_max_size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (list_max_size__pred a) }
  ensures { (result = a.__split_fields.rec__list_max_size) }
 
 function bool_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) /\ ((Stations__list_tracks__list_ptr__T5s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__list_max_size) = (Standard__positive.to_rep b.__split_fields.rec__list_max_size)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 105 0 0# 
   : int
 
 function object__size #"list.ads" 105 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 105 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 105 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_2__projection #"list.ads" 105 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_2__projection
 
 meta "inline : no" function list_ptr__ref_2__projection
 
 val list_ptr__havoc #"list.ads" 105 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 49 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 49 0 0# "model_projected" "model_trace:23886" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__contains
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function contains #"list.ads" 49 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:52 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_size__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 52 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:52 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:52 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_size
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function get_size #"list.ads" 52 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 55 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 55 0 0# "model" "model_trace:23933" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element #"list.ads" 55 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 58 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 58 0 0# "model" "model_trace:23961" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element_by_id #"list.ads" 58 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__full__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 60 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__full
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function full #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 62 0 0# "model_projected" "model_trace:24017" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 62 0 0# "model" "model_trace:24026" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 87 0 0# "model" "model_trace:24071" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function newvalue #"list.ads" 87 0 0# "model_projected" "model_trace:24080" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "station" defined at stations.ads:18, created in Gnat2Why.Types.Translate_Type *)
module Stations__station
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr

 type __split_fields #"list.ads" 22 0 0# =
  { rec__id "model_trace:.7504" : Standard__natural.natural; rec__location "model_trace:.7515" : Types__station_locations.station_locations; rec__trainid "model_trace:.7530" : Standard__natural.natural; rec__incoming "model_trace:.7541" : Stations__list_tracks__list_ptr.list_ptr; rec__outgoing "model_trace:.7553" : Stations__list_tracks__list_ptr.list_ptr; rec__trackslineoriginanddestination "model_trace:.7565" : Types__list_od__list_ptr.list_ptr }
 
 function __split_fields_ID4__projection #"list.ads" 105 0 0# "model_trace:.7504" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID4__projection
 
 meta "inline : no" function __split_fields_ID4__projection
 
 function __split_fields_Location__projection #"stations.ads" 18 0 0# "model_trace:.7515" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location__projection
 
 meta "inline : no" function __split_fields_Location__projection
 
 function __split_fields_TrainID2__projection #"stations.ads" 18 0 0# "model_trace:.7530" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID2__projection
 
 meta "inline : no" function __split_fields_TrainID2__projection
 
 function __split_fields_Incoming__projection #"stations.ads" 18 0 0# "model_trace:.7541" 
   (a : __split_fields) : Stations__list_tracks__list_ptr.list_ptr =
  a.rec__incoming
 
 meta "model_projection" function __split_fields_Incoming__projection
 
 meta "inline : no" function __split_fields_Incoming__projection
 
 function __split_fields_Outgoing__projection #"stations.ads" 18 0 0# "model_trace:.7553" 
   (a : __split_fields) : Stations__list_tracks__list_ptr.list_ptr =
  a.rec__outgoing
 
 meta "model_projection" function __split_fields_Outgoing__projection
 
 meta "inline : no" function __split_fields_Outgoing__projection
 
 function __split_fields_TracksLineOriginAndDestination__projection #"stations.ads" 18 0 0# "model_trace:.7565" 
   (a : __split_fields) : Types__list_od__list_ptr.list_ptr =
  a.rec__trackslineoriginanddestination
 
 meta "model_projection" function __split_fields_TracksLineOriginAndDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineOriginAndDestination__projection
 
 type __split_fields__ref #"stations.ads" 18 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_12__projection #"stations.ads" 18 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_12__projection
 
 meta "inline : no" function __split_fields__ref_12__projection
 
 val __split_fields__havoc #"stations.ads" 18 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type station #"stations.ads" 18 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function station___projection #"stations.ads" 18 0 0# 
   (a : station) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function station___projection
 
 meta "inline : no" function station___projection
 
 predicate id__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__id_ #"stations.ads" 18 0 0# 
   (a : station) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__location_ #"stations.ads" 18 0 0# 
   (a : station) : Types__station_locations.station_locations
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate trainid__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__trainid_ #"stations.ads" 18 0 0# 
   (a : station) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate incoming__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__incoming_ #"stations.ads" 18 0 0# 
   (a : station) : Stations__list_tracks__list_ptr.list_ptr
  requires { (incoming__pred a) }
  ensures { (result = a.__split_fields.rec__incoming) }
 
 predicate outgoing__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__outgoing_ #"stations.ads" 18 0 0# 
   (a : station) : Stations__list_tracks__list_ptr.list_ptr
  requires { (outgoing__pred a) }
  ensures { (result = a.__split_fields.rec__outgoing) }
 
 predicate trackslineoriginanddestination__pred #"stations.ads" 18 0 0# 
   (a : station)  =
  true
 
 val rec__trackslineoriginanddestination_ #"stations.ads" 18 0 0# 
   (a : station) : Types__list_od__list_ptr.list_ptr
  requires { (trackslineoriginanddestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineoriginanddestination) }
 
 function bool_eq #"stations.ads" 18 0 0# 
   (a : station) (b : station) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__location) = (Types__station_locations.to_rep b.__split_fields.rec__location)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Stations__list_tracks__list_ptr.bool_eq a.__split_fields.rec__incoming b.__split_fields.rec__incoming) = True) ) /\ ((Stations__list_tracks__list_ptr.bool_eq a.__split_fields.rec__outgoing b.__split_fields.rec__outgoing) = True) ) /\ ((Types__list_od__list_ptr.bool_eq a.__split_fields.rec__trackslineoriginanddestination b.__split_fields.rec__trackslineoriginanddestination) = True) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 18 0 0# 
   (a : station) (b : station) : bool
 
 function value__size #"stations.ads" 18 0 0# 
   : int
 
 function object__size #"stations.ads" 18 0 0# 
   (a : station) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : station.
   ((object__size a) >= 0))
 
 function dummy #"stations.ads" 18 0 0# 
   : station
 
 type station__ref #"stations.ads" 18 0 0# =
  { mutable station__content "model_trace:" : station }
 
 function station__ref___projection #"stations.ads" 18 0 0# 
   (a : station__ref) : station =
  a.station__content
 
 meta "model_projection" function station__ref___projection
 
 meta "inline : no" function station__ref___projection
 
 val station__havoc #"stations.ads" 18 0 0# 
   (x : station__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t1s #"trains.ads" 11 0 0# 
 
 function first #"trains.ads" 11 0 0# 
   : int =
  1
 
 function last #"trains.ads" 11 0 0# 
   : int =
  7
 
 predicate in_range #"trains.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t1s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t1s__ref #"trains.ads" 11 0 0# =
  { mutable t1s__content "model_trace:" : t1s }
 
 function t1s__ref___projection #"trains.ads" 11 0 0# 
   (a : t1s__ref) : t1s =
  a.t1s__content
 
 meta "model_projection" function t1s__ref___projection
 
 meta "inline : no" function t1s__ref___projection
 
 val t1s__havoc #"trains.ads" 11 0 0# 
   (x : t1s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T2s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 11 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T4s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t4s #"trains.ads" 12 0 0# 
 
 function first #"trains.ads" 12 0 0# 
   : int =
  1
 
 function last #"trains.ads" 12 0 0# 
   : int =
  4
 
 predicate in_range #"trains.ads" 12 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t4s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t4s__ref #"trains.ads" 12 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_3__projection #"trains.ads" 12 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_3__projection
 
 meta "inline : no" function t4s__ref_3__projection
 
 val t4s__havoc #"trains.ads" 12 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 12 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Tracks__track
 use        Stations__station
 use        Trains__train_location__T2s
 use        Trains__train_location__T5s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"system.ads" 1 0 0# =
  { rec__currentlocation "model_trace:.6396" : Array__Int__Standard__character.map; rec__none "model_trace:.6412" : Array__Int__Standard__character.map; rec__track "model_trace:.6428" : Tracks__track.track; rec__station "model_trace:.6440" : Stations__station.station }
 
 function __split_fields_currentLocation__projection #"stations.ads" 18 0 0# "model_trace:.6396" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__currentlocation
 
 meta "model_projection" function __split_fields_currentLocation__projection
 
 meta "inline : no" function __split_fields_currentLocation__projection
 
 function __split_fields_None__projection #"trains.ads" 9 0 0# "model_trace:.6412" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__none
 
 meta "model_projection" function __split_fields_None__projection
 
 meta "inline : no" function __split_fields_None__projection
 
 function __split_fields_Track__projection #"trains.ads" 9 0 0# "model_trace:.6428" 
   (a : __split_fields) : Tracks__track.track =
  a.rec__track
 
 meta "model_projection" function __split_fields_Track__projection
 
 meta "inline : no" function __split_fields_Track__projection
 
 function __split_fields_Station__projection #"trains.ads" 9 0 0# "model_trace:.6440" 
   (a : __split_fields) : Stations__station.station =
  a.rec__station
 
 meta "model_projection" function __split_fields_Station__projection
 
 meta "inline : no" function __split_fields_Station__projection
 
 type __split_fields__ref #"trains.ads" 9 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_13__projection #"trains.ads" 9 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_13__projection
 
 meta "inline : no" function __split_fields__ref_13__projection
 
 val __split_fields__havoc #"trains.ads" 9 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train_location #"trains.ads" 9 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train_location___projection #"trains.ads" 9 0 0# 
   (a : train_location) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train_location___projection
 
 meta "inline : no" function train_location___projection
 
 predicate currentlocation__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__currentlocation_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (currentlocation__pred a) }
  ensures { (result = a.__split_fields.rec__currentlocation) }
 
 predicate none__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__none_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (none__pred a) }
  ensures { (result = a.__split_fields.rec__none) }
 
 predicate track__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__track_ #"trains.ads" 9 0 0# 
   (a : train_location) : Tracks__track.track
  requires { (track__pred a) }
  ensures { (result = a.__split_fields.rec__track) }
 
 predicate station__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__station_ #"trains.ads" 9 0 0# 
   (a : train_location) : Stations__station.station
  requires { (station__pred a) }
  ensures { (result = a.__split_fields.rec__station) }
 
 function bool_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool =
  (if (( ( ( ((Trains__train_location__T2s.bool_eq a.__split_fields.rec__currentlocation b.__split_fields.rec__currentlocation) = True) /\ ((Trains__train_location__T5s.bool_eq a.__split_fields.rec__none b.__split_fields.rec__none) = True) ) /\ ((Tracks__track.bool_eq a.__split_fields.rec__track b.__split_fields.rec__track) = True) ) /\ ((Stations__station.bool_eq a.__split_fields.rec__station b.__split_fields.rec__station) = True) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool
 
 function value__size #"trains.ads" 9 0 0# 
   : int
 
 function object__size #"trains.ads" 9 0 0# 
   (a : train_location) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train_location.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 9 0 0# 
   : train_location
 
 type train_location__ref #"trains.ads" 9 0 0# =
  { mutable train_location__content "model_trace:" : train_location }
 
 function train_location__ref___projection #"trains.ads" 9 0 0# 
   (a : train_location__ref) : train_location =
  a.train_location__content
 
 meta "model_projection" function train_location__ref___projection
 
 meta "inline : no" function train_location__ref___projection
 
 val train_location__havoc #"trains.ads" 9 0 0# 
   (x : train_location__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train" defined at trains.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Trains__train
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Trains__train_location

 type __split_fields #"trains.ads" 9 0 0# =
  { rec__id "model_trace:.6464" : Standard__natural.natural; rec__location "model_trace:.6475" : Trains__train_location.train_location; rec__origin "model_trace:.6485" : Types__station_locations.station_locations; rec__destination "model_trace:.6500" : Types__station_locations.station_locations; rec__state "model_trace:.6515" : Types__train_state.train_state; rec__start_run_time "model_trace:.6530" : Types__timetable.timetable }
 
 function __split_fields_ID5__projection #"types.ads" 14 0 0# "model_trace:.6464" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID5__projection
 
 meta "inline : no" function __split_fields_ID5__projection
 
 function __split_fields_Location2__projection #"trains.ads" 17 0 0# "model_trace:.6475" 
   (a : __split_fields) : Trains__train_location.train_location =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location2__projection
 
 meta "inline : no" function __split_fields_Location2__projection
 
 function __split_fields_Origin3__projection #"trains.ads" 17 0 0# "model_trace:.6485" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin3__projection
 
 meta "inline : no" function __split_fields_Origin3__projection
 
 function __split_fields_Destination3__projection #"trains.ads" 17 0 0# "model_trace:.6500" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination3__projection
 
 meta "inline : no" function __split_fields_Destination3__projection
 
 function __split_fields_State__projection #"trains.ads" 17 0 0# "model_trace:.6515" 
   (a : __split_fields) : Types__train_state.train_state =
  a.rec__state
 
 meta "model_projection" function __split_fields_State__projection
 
 meta "inline : no" function __split_fields_State__projection
 
 function __split_fields_Start_Run_Time__projection #"trains.ads" 17 0 0# "model_trace:.6530" 
   (a : __split_fields) : Types__timetable.timetable =
  a.rec__start_run_time
 
 meta "model_projection" function __split_fields_Start_Run_Time__projection
 
 meta "inline : no" function __split_fields_Start_Run_Time__projection
 
 type __split_fields__ref #"trains.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_14__projection #"trains.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_14__projection
 
 meta "inline : no" function __split_fields__ref_14__projection
 
 val __split_fields__havoc #"trains.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train #"trains.ads" 17 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train___projection #"trains.ads" 17 0 0# 
   (a : train) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train___projection
 
 meta "inline : no" function train___projection
 
 predicate id__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__id_ #"trains.ads" 17 0 0# 
   (a : train) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__location_ #"trains.ads" 17 0 0# 
   (a : train) : Trains__train_location.train_location
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate origin__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__origin_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__destination_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate state__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__state_ #"trains.ads" 17 0 0# 
   (a : train) : Types__train_state.train_state
  requires { (state__pred a) }
  ensures { (result = a.__split_fields.rec__state) }
 
 predicate start_run_time__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__start_run_time_ #"trains.ads" 17 0 0# 
   (a : train) : Types__timetable.timetable
  requires { (start_run_time__pred a) }
  ensures { (result = a.__split_fields.rec__start_run_time) }
 
 function bool_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Trains__train_location.bool_eq a.__split_fields.rec__location b.__split_fields.rec__location) = True) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Types__train_state.to_rep a.__split_fields.rec__state) = (Types__train_state.to_rep b.__split_fields.rec__state)) ) /\ ((Types__timetable.to_rep a.__split_fields.rec__start_run_time) = (Types__timetable.to_rep b.__split_fields.rec__start_run_time)) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool
 
 function value__size #"trains.ads" 17 0 0# 
   : int
 
 function object__size #"trains.ads" 17 0 0# 
   (a : train) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 17 0 0# 
   : train
 
 type train__ref #"trains.ads" 17 0 0# =
  { mutable train__content "model_trace:" : train }
 
 function train__ref___projection #"trains.ads" 17 0 0# 
   (a : train__ref) : train =
  a.train__content
 
 meta "model_projection" function train__ref___projection
 
 meta "inline : no" function train__ref___projection
 
 val train__havoc #"trains.ads" 17 0 0# 
   (x : train__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:22 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data_type
 use export Trains__train
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 22 0 0# =
  train
 
 function to_base #"trains.ads" 17 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 22 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 22 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_3__projection #"list.ads" 22 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_3__projection
 
 meta "inline : no" function data_type__ref_3__projection
 
 val data_type__havoc #"list.ads" 22 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:23 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 23 0 0# "model" "model_trace:24876" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_size" defined at list.ads:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__max_size
 use import "_gnatprove_standard".Main

 function max_size #"list.ads" 24 0 0# "model" "model_trace:24885" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:25 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function no_found #"list.ads" 25 0 0# "model_projected" "model_trace:24894" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:95 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type

 type __split_fields #"list.ads" 22 0 0# =
  { rec__data "model_trace:.24737" : Railsystems__list_trains__data_type.data_type; rec__id "model_trace:.24747" : Standard__natural.natural }
 
 function __split_fields_DATA3__projection #"system.ads" 1 0 0# "model_trace:.24737" 
   (a : __split_fields) : Railsystems__list_trains__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA3__projection
 
 meta "inline : no" function __split_fields_DATA3__projection
 
 function __split_fields_ID6__projection #"list.ads" 95 0 0# "model_trace:.24747" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID6__projection
 
 meta "inline : no" function __split_fields_ID6__projection
 
 type __split_fields__ref #"list.ads" 95 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_15__projection #"list.ads" 95 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_15__projection
 
 meta "inline : no" function __split_fields__ref_15__projection
 
 val __split_fields__havoc #"list.ads" 95 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 95 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_3__projection #"list.ads" 95 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_3__projection
 
 meta "inline : no" function data_3__projection
 
 predicate data__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 95 0 0# 
   (a : data) : Railsystems__list_trains__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 95 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_trains__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 95 0 0# 
   : int
 
 function object__size #"list.ads" 95 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 95 0 0# 
   : data
 
 type data__ref #"list.ads" 95 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_3__projection #"list.ads" 95 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_3__projection
 
 meta "inline : no" function data__ref_3__projection
 
 val data__havoc #"list.ads" 95 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:103 instantiated at railsystems.ads:15, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data

 function index_I1_one #"list.ads" 95 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 95 0 0# =
  Railsystems__list_trains__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:103 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"list.ads" 95 0 0# =
  Railsystems__list_trains__data.data
 
 function index_1_id #"list.ads" 95 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 103 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 103 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_3__projection #"list.ads" 103 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_3__projection
 
 meta "inline : no" function list_array__ref_3__projection
 
 val list_array__havoc #"list.ads" 103 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:108 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t4s #"list.ads" 108 0 0# 
 
 function first #"list.ads" 108 0 0# 
   : int =
  1
 
 function last #"list.ads" 108 0 0# 
   : int =
  100
 
 predicate in_range #"list.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t4s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t4s__ref #"list.ads" 108 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_4__projection #"list.ads" 108 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_4__projection
 
 meta "inline : no" function t4s__ref_4__projection
 
 val t4s__havoc #"list.ads" 108 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at list.ads:108 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"list.ads" 108 0 0# =
  Railsystems__list_trains__data.data
 
 function first #"list.ads" 95 0 0# 
   : int =
  1
 
 function last #"list.ads" 95 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:105 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr__T5s
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type __split_fields #"list.ads" 95 0 0# =
  { rec__size "model_trace:.24781" : Standard__natural.natural; rec__elements "model_trace:.24792" : Array__Int__Railsystems__list_trains__data.map; rec__head "model_trace:.24807" : Standard__positive.positive; rec__list_max_size "model_trace:.24818" : Standard__positive.positive }
 
 function __split_fields_SIZE3__projection #"system.ads" 1 0 0# "model_trace:.24781" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE3__projection
 
 meta "inline : no" function __split_fields_SIZE3__projection
 
 function __split_fields_ELEMENTS3__projection #"list.ads" 105 0 0# "model_trace:.24792" 
   (a : __split_fields) : Array__Int__Railsystems__list_trains__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS3__projection
 
 meta "inline : no" function __split_fields_ELEMENTS3__projection
 
 function __split_fields_HEAD3__projection #"list.ads" 105 0 0# "model_trace:.24807" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD3__projection
 
 meta "inline : no" function __split_fields_HEAD3__projection
 
 function __split_fields_LIST_MAX_SIZE3__projection #"list.ads" 105 0 0# "model_trace:.24818" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__list_max_size
 
 meta "model_projection" function __split_fields_LIST_MAX_SIZE3__projection
 
 meta "inline : no" function __split_fields_LIST_MAX_SIZE3__projection
 
 type __split_fields__ref #"list.ads" 105 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_16__projection #"list.ads" 105 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_16__projection
 
 meta "inline : no" function __split_fields__ref_16__projection
 
 val __split_fields__havoc #"list.ads" 105 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 105 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_3__projection #"list.ads" 105 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_3__projection
 
 meta "inline : no" function list_ptr_3__projection
 
 predicate size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Array__Int__Railsystems__list_trains__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 predicate list_max_size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__list_max_size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (list_max_size__pred a) }
  ensures { (result = a.__split_fields.rec__list_max_size) }
 
 function bool_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) /\ ((Railsystems__list_trains__list_ptr__T5s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__list_max_size) = (Standard__positive.to_rep b.__split_fields.rec__list_max_size)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 105 0 0# 
   : int
 
 function object__size #"list.ads" 105 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 105 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 105 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_3__projection #"list.ads" 105 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_3__projection
 
 meta "inline : no" function list_ptr__ref_3__projection
 
 val list_ptr__havoc #"list.ads" 105 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 49 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 49 0 0# "model_projected" "model_trace:24506" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function contains #"list.ads" 49 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:52 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 52 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:52 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:52 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function get_size #"list.ads" 52 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 55 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 55 0 0# "model" "model_trace:24553" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element #"list.ads" 55 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 58 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 58 0 0# "model" "model_trace:24581" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element_by_id #"list.ads" 58 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:60 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function full #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 62 0 0# "model_projected" "model_trace:24637" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 62 0 0# "model" "model_trace:24646" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 87 0 0# "model" "model_trace:24691" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function newvalue #"list.ads" 87 0 0# "model_projected" "model_trace:24700" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "R37s" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__L_1__R37s
 use import "_gnatprove_standard".Main

 function r37s #"list.adb" 24 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T38s" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__contains__L_1__T38s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t38s #"list.adb" 24 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t38s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t38s__ref #"list.adb" 24 0 0# =
  { mutable t38s__content "model_trace:" : t38s }
 
 function t38s__ref___projection #"list.adb" 24 0 0# 
   (a : t38s__ref) : t38s =
  a.t38s__content
 
 meta "model_projection" function t38s__ref___projection
 
 meta "inline : no" function t38s__ref___projection
 
 val t38s__havoc #"list.adb" 24 0 0# 
   (x : t38s__ref) : unit
  writes {x}

end

(* Module for defining the constant "R46s" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__L_2__R46s
 use import "_gnatprove_standard".Main

 function r46s #"list.adb" 148 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T47s" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__get_element_by_id__L_2__T47s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t47s #"list.adb" 148 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t47s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t47s__ref #"list.adb" 148 0 0# =
  { mutable t47s__content "model_trace:" : t47s }
 
 function t47s__ref___projection #"list.adb" 148 0 0# 
   (a : t47s__ref) : t47s =
  a.t47s__content
 
 meta "model_projection" function t47s__ref___projection
 
 meta "inline : no" function t47s__ref___projection
 
 val t47s__havoc #"list.adb" 148 0 0# 
   (x : t47s__ref) : unit
  writes {x}

end

(* Module for defining the constant "R49s" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__L_3__R49s
 use import "_gnatprove_standard".Main

 function r49s #"list.adb" 216 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T50s" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__replace_by_id__L_3__T50s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t50s #"list.adb" 216 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t50s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t50s__ref #"list.adb" 216 0 0# =
  { mutable t50s__content "model_trace:" : t50s }
 
 function t50s__ref___projection #"list.adb" 216 0 0# 
   (a : t50s__ref) : t50s =
  a.t50s__content
 
 meta "model_projection" function t50s__ref___projection
 
 meta "inline : no" function t50s__ref___projection
 
 val t50s__havoc #"list.adb" 216 0 0# 
   (x : t50s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:22 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data_type
 use export Stations__station
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 22 0 0# =
  station
 
 function to_base #"stations.ads" 18 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 22 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 22 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_4__projection #"list.ads" 22 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_4__projection
 
 meta "inline : no" function data_type__ref_4__projection
 
 val data_type__havoc #"list.ads" 22 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:23 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 23 0 0# "model" "model_trace:25419" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_size" defined at list.ads:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__max_size
 use import "_gnatprove_standard".Main

 function max_size #"list.ads" 24 0 0# "model" "model_trace:25428" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:25 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function no_found #"list.ads" 25 0 0# "model_projected" "model_trace:25437" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:95 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_stations__data_type

 type __split_fields #"list.ads" 22 0 0# =
  { rec__data "model_trace:.25280" : Railsystems__list_stations__data_type.data_type; rec__id "model_trace:.25290" : Standard__natural.natural }
 
 function __split_fields_DATA4__projection #"system.ads" 1 0 0# "model_trace:.25280" 
   (a : __split_fields) : Railsystems__list_stations__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA4__projection
 
 meta "inline : no" function __split_fields_DATA4__projection
 
 function __split_fields_ID7__projection #"list.ads" 95 0 0# "model_trace:.25290" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID7__projection
 
 meta "inline : no" function __split_fields_ID7__projection
 
 type __split_fields__ref #"list.ads" 95 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_17__projection #"list.ads" 95 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_17__projection
 
 meta "inline : no" function __split_fields__ref_17__projection
 
 val __split_fields__havoc #"list.ads" 95 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 95 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_4__projection #"list.ads" 95 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_4__projection
 
 meta "inline : no" function data_4__projection
 
 predicate data__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 95 0 0# 
   (a : data) : Railsystems__list_stations__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 95 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 95 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_stations__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 95 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 95 0 0# 
   : int
 
 function object__size #"list.ads" 95 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 95 0 0# 
   : data
 
 type data__ref #"list.ads" 95 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_4__projection #"list.ads" 95 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_4__projection
 
 meta "inline : no" function data__ref_4__projection
 
 val data__havoc #"list.ads" 95 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:103 instantiated at railsystems.ads:22, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data

 function index_I1_one #"list.ads" 95 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 95 0 0# =
  Railsystems__list_stations__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:103 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"list.ads" 95 0 0# =
  Railsystems__list_stations__data.data
 
 function index_1_id #"list.ads" 95 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 103 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 103 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_4__projection #"list.ads" 103 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_4__projection
 
 meta "inline : no" function list_array__ref_4__projection
 
 val list_array__havoc #"list.ads" 103 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T9s" defined at list.ads:108 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9s #"list.ads" 108 0 0# 
 
 function first #"list.ads" 108 0 0# 
   : int =
  1
 
 function last #"list.ads" 108 0 0# 
   : int =
  100
 
 predicate in_range #"list.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t9s__ref #"list.ads" 108 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref_2__projection #"list.ads" 108 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref_2__projection
 
 meta "inline : no" function t9s__ref_2__projection
 
 val t9s__havoc #"list.ads" 108 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at list.ads:108 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"list.ads" 108 0 0# =
  Railsystems__list_stations__data.data
 
 function first #"list.ads" 95 0 0# 
   : int =
  1
 
 function last #"list.ads" 95 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:105 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr__T10s
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type __split_fields #"list.ads" 95 0 0# =
  { rec__size "model_trace:.25324" : Standard__natural.natural; rec__elements "model_trace:.25335" : Array__Int__Railsystems__list_stations__data.map; rec__head "model_trace:.25350" : Standard__positive.positive; rec__list_max_size "model_trace:.25361" : Standard__positive.positive }
 
 function __split_fields_SIZE4__projection #"system.ads" 1 0 0# "model_trace:.25324" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE4__projection
 
 meta "inline : no" function __split_fields_SIZE4__projection
 
 function __split_fields_ELEMENTS4__projection #"list.ads" 105 0 0# "model_trace:.25335" 
   (a : __split_fields) : Array__Int__Railsystems__list_stations__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS4__projection
 
 meta "inline : no" function __split_fields_ELEMENTS4__projection
 
 function __split_fields_HEAD4__projection #"list.ads" 105 0 0# "model_trace:.25350" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD4__projection
 
 meta "inline : no" function __split_fields_HEAD4__projection
 
 function __split_fields_LIST_MAX_SIZE4__projection #"list.ads" 105 0 0# "model_trace:.25361" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__list_max_size
 
 meta "model_projection" function __split_fields_LIST_MAX_SIZE4__projection
 
 meta "inline : no" function __split_fields_LIST_MAX_SIZE4__projection
 
 type __split_fields__ref #"list.ads" 105 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_18__projection #"list.ads" 105 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_18__projection
 
 meta "inline : no" function __split_fields__ref_18__projection
 
 val __split_fields__havoc #"list.ads" 105 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 105 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_4__projection #"list.ads" 105 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_4__projection
 
 meta "inline : no" function list_ptr_4__projection
 
 predicate size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Array__Int__Railsystems__list_stations__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 predicate list_max_size__pred #"list.ads" 105 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__list_max_size_ #"list.ads" 105 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (list_max_size__pred a) }
  ensures { (result = a.__split_fields.rec__list_max_size) }
 
 function bool_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) /\ ((Railsystems__list_stations__list_ptr__T10s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__list_max_size) = (Standard__positive.to_rep b.__split_fields.rec__list_max_size)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 105 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 105 0 0# 
   : int
 
 function object__size #"list.ads" 105 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 105 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 105 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_4__projection #"list.ads" 105 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_4__projection
 
 meta "inline : no" function list_ptr__ref_4__projection
 
 val list_ptr__havoc #"list.ads" 105 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 49 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 49 0 0# "model_projected" "model_trace:25049" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function contains #"list.ads" 49 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:52 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 52 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:52 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:52 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function get_size #"list.ads" 52 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 55 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 55 0 0# "model" "model_trace:25096" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element #"list.ads" 55 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 58 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 58 0 0# "model" "model_trace:25124" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element_by_id #"list.ads" 58 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:60 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function full #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 62 0 0# "model_projected" "model_trace:25180" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 62 0 0# "model" "model_trace:25189" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 87 0 0# "model" "model_trace:25234" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function newvalue #"list.ads" 87 0 0# "model_projected" "model_trace:25243" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "R52s" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__L_1__R52s
 use import "_gnatprove_standard".Main

 function r52s #"list.adb" 24 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T53s" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__contains__L_1__T53s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t53s #"list.adb" 24 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t53s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t53s__ref #"list.adb" 24 0 0# =
  { mutable t53s__content "model_trace:" : t53s }
 
 function t53s__ref___projection #"list.adb" 24 0 0# 
   (a : t53s__ref) : t53s =
  a.t53s__content
 
 meta "model_projection" function t53s__ref___projection
 
 meta "inline : no" function t53s__ref___projection
 
 val t53s__havoc #"list.adb" 24 0 0# 
   (x : t53s__ref) : unit
  writes {x}

end

(* Module for defining the constant "R61s" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__L_2__R61s
 use import "_gnatprove_standard".Main

 function r61s #"list.adb" 148 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T62s" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__get_element_by_id__L_2__T62s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t62s #"list.adb" 148 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t62s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t62s__ref #"list.adb" 148 0 0# =
  { mutable t62s__content "model_trace:" : t62s }
 
 function t62s__ref___projection #"list.adb" 148 0 0# 
   (a : t62s__ref) : t62s =
  a.t62s__content
 
 meta "model_projection" function t62s__ref___projection
 
 meta "inline : no" function t62s__ref___projection
 
 val t62s__havoc #"list.adb" 148 0 0# 
   (x : t62s__ref) : unit
  writes {x}

end

(* Module for defining the constant "R64s" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__L_3__R64s
 use import "_gnatprove_standard".Main

 function r64s #"list.adb" 216 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T65s" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__replace_by_id__L_3__T65s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t65s #"list.adb" 216 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t65s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t65s__ref #"list.adb" 216 0 0# =
  { mutable t65s__content "model_trace:" : t65s }
 
 function t65s__ref___projection #"list.adb" 216 0 0# 
   (a : t65s__ref) : t65s =
  a.t65s__content
 
 meta "model_projection" function t65s__ref___projection
 
 meta "inline : no" function t65s__ref___projection
 
 val t65s__havoc #"list.adb" 216 0 0# 
   (x : t65s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "railsystem" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__list_ptr
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_stations__list_ptr

 type __split_fields #"list.adb" 216 0 0# =
  { rec__all_trains "model_trace:.5056" : Railsystems__list_trains__list_ptr.list_ptr; rec__all_stations "model_trace:.5068" : Railsystems__list_stations__list_ptr.list_ptr; rec__all_tracks "model_trace:.5080" : Stations__list_tracks__list_ptr.list_ptr }
 
 function __split_fields_All_Trains__projection #"list.ads" 105 0 0# "model_trace:.5056" 
   (a : __split_fields) : Railsystems__list_trains__list_ptr.list_ptr =
  a.rec__all_trains
 
 meta "model_projection" function __split_fields_All_Trains__projection
 
 meta "inline : no" function __split_fields_All_Trains__projection
 
 function __split_fields_All_Stations__projection #"railsystems.ads" 29 0 0# "model_trace:.5068" 
   (a : __split_fields) : Railsystems__list_stations__list_ptr.list_ptr =
  a.rec__all_stations
 
 meta "model_projection" function __split_fields_All_Stations__projection
 
 meta "inline : no" function __split_fields_All_Stations__projection
 
 function __split_fields_All_Tracks__projection #"railsystems.ads" 29 0 0# "model_trace:.5080" 
   (a : __split_fields) : Stations__list_tracks__list_ptr.list_ptr =
  a.rec__all_tracks
 
 meta "model_projection" function __split_fields_All_Tracks__projection
 
 meta "inline : no" function __split_fields_All_Tracks__projection
 
 type __split_fields__ref #"railsystems.ads" 29 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_19__projection #"railsystems.ads" 29 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_19__projection
 
 meta "inline : no" function __split_fields__ref_19__projection
 
 val __split_fields__havoc #"railsystems.ads" 29 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type railsystem #"railsystems.ads" 29 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function railsystem___projection #"railsystems.ads" 29 0 0# 
   (a : railsystem) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function railsystem___projection
 
 meta "inline : no" function railsystem___projection
 
 predicate all_trains__pred #"railsystems.ads" 29 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_trains_ #"railsystems.ads" 29 0 0# 
   (a : railsystem) : Railsystems__list_trains__list_ptr.list_ptr
  requires { (all_trains__pred a) }
  ensures { (result = a.__split_fields.rec__all_trains) }
 
 predicate all_stations__pred #"railsystems.ads" 29 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_stations_ #"railsystems.ads" 29 0 0# 
   (a : railsystem) : Railsystems__list_stations__list_ptr.list_ptr
  requires { (all_stations__pred a) }
  ensures { (result = a.__split_fields.rec__all_stations) }
 
 predicate all_tracks__pred #"railsystems.ads" 29 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_tracks_ #"railsystems.ads" 29 0 0# 
   (a : railsystem) : Stations__list_tracks__list_ptr.list_ptr
  requires { (all_tracks__pred a) }
  ensures { (result = a.__split_fields.rec__all_tracks) }
 
 function bool_eq #"railsystems.ads" 29 0 0# 
   (a : railsystem) (b : railsystem) : bool =
  (if (( ( ((Railsystems__list_trains__list_ptr.bool_eq a.__split_fields.rec__all_trains b.__split_fields.rec__all_trains) = True) /\ ((Railsystems__list_stations__list_ptr.bool_eq a.__split_fields.rec__all_stations b.__split_fields.rec__all_stations) = True) ) /\ ((Stations__list_tracks__list_ptr.bool_eq a.__split_fields.rec__all_tracks b.__split_fields.rec__all_tracks) = True) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 29 0 0# 
   (a : railsystem) (b : railsystem) : bool
 
 function value__size #"railsystems.ads" 29 0 0# 
   : int
 
 function object__size #"railsystems.ads" 29 0 0# 
   (a : railsystem) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : railsystem.
   ((object__size a) >= 0))
 
 function dummy #"railsystems.ads" 29 0 0# 
   : railsystem
 
 type railsystem__ref #"railsystems.ads" 29 0 0# =
  { mutable railsystem__content "model_trace:" : railsystem }
 
 function railsystem__ref___projection #"railsystems.ads" 29 0 0# 
   (a : railsystem__ref) : railsystem =
  a.railsystem__content
 
 meta "model_projection" function railsystem__ref___projection
 
 meta "inline : no" function railsystem__ref___projection
 
 val railsystem__havoc #"railsystems.ads" 29 0 0# 
   (x : railsystem__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:38, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrain__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 38 0 0# "model" "model_trace:5130" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T23s" defined at railsystems.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrain__L22s__T23s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t23s #"railsystems.ads" 43 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrain__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 29 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t23s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t23s__ref #"railsystems.ads" 43 0 0# =
  { mutable t23s__content "model_trace:" : t23s }
 
 function t23s__ref___projection #"railsystems.ads" 43 0 0# 
   (a : t23s__ref) : t23s =
  a.t23s__content
 
 meta "model_projection" function t23s__ref___projection
 
 meta "inline : no" function t23s__ref___projection
 
 val t23s__havoc #"railsystems.ads" 43 0 0# 
   (x : t23s__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 47 0 0# "model" "model_trace:5203" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 47 0 0# "model" "model_trace:5212" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 47 0 0# "model" "model_trace:5223" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lineorigin" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__lineorigin
 use import "_gnatprove_standard".Main

 function lineorigin #"railsystems.ads" 47 0 0# "model" "model_trace:5234" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "lineorigin" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__lineorigin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "linedestination" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__linedestination
 use import "_gnatprove_standard".Main

 function linedestination #"railsystems.ads" 47 0 0# "model" "model_trace:5245" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "linedestination" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__linedestination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T25s" defined at railsystems.ads:59, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrack__L24s__T25s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t25s #"railsystems.ads" 59 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrack__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 29 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t25s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t25s__ref #"railsystems.ads" 59 0 0# =
  { mutable t25s__content "model_trace:" : t25s }
 
 function t25s__ref___projection #"railsystems.ads" 59 0 0# 
   (a : t25s__ref) : t25s =
  a.t25s__content
 
 meta "model_projection" function t25s__ref___projection
 
 meta "inline : no" function t25s__ref___projection
 
 val t25s__havoc #"railsystems.ads" 59 0 0# 
   (x : t25s__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 68 0 0# "model" "model_trace:5371" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at railsystems.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__location
 use import "_gnatprove_standard".Main

 function location #"railsystems.ads" 68 0 0# "model" "model_trace:5380" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at railsystems.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T27s" defined at railsystems.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addstation__L26s__T27s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t27s #"railsystems.ads" 74 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addstation__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 29 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t27s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t27s__ref #"railsystems.ads" 74 0 0# =
  { mutable t27s__content "model_trace:" : t27s }
 
 function t27s__ref___projection #"railsystems.ads" 74 0 0# 
   (a : t27s__ref) : t27s =
  a.t27s__content
 
 meta "model_projection" function t27s__ref___projection
 
 meta "inline : no" function t27s__ref___projection
 
 val t27s__havoc #"railsystems.ads" 74 0 0# 
   (x : t27s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T29s" defined at railsystems.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addstation__L28s__T29s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t29s #"railsystems.ads" 78 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addstation__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 29 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t29s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t29s__ref #"railsystems.ads" 78 0 0# =
  { mutable t29s__content "model_trace:" : t29s }
 
 function t29s__ref___projection #"railsystems.ads" 78 0 0# 
   (a : t29s__ref) : t29s =
  a.t29s__content
 
 meta "model_projection" function t29s__ref___projection
 
 meta "inline : no" function t29s__ref___projection
 
 val t29s__havoc #"railsystems.ads" 78 0 0# 
   (x : t29s__ref) : unit
  writes {x}

end

(* Module for defining the constant "station" defined at railsystems.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__station
 use import "_gnatprove_standard".Main
 use        Stations__station

 function station #"railsystems.ads" 84 0 0# "model_projected" "model_trace:5499" 
   : Stations__station.station
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station" defined at railsystems.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "train" defined at railsystems.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 function train #"railsystems.ads" 88 0 0# "model_projected" "model_trace:5537" 
   : Trains__train.train
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "track" defined at railsystems.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__track
 use import "_gnatprove_standard".Main
 use        Tracks__track

 function track #"railsystems.ads" 92 0 0# "model_projected" "model_trace:5575" 
   : Tracks__track.track
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "track" defined at railsystems.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at railsystems.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__go__count
 use import "_gnatprove_standard".Main

 function count #"railsystems.ads" 104 0 0# "model" "model_trace:5642" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at railsystems.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T34s" defined at railsystems.ads:111, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__T34s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T32s" defined at railsystems.ads:113, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L31s__T32s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Trains__train
 use        Railsystems__railsystem

 type t32s #"railsystems.ads" 113 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__go__r_system__fields : Railsystems__railsystem.__split_fields) (railsystems__go__train__fields : Trains__train.__split_fields) : int
 
 predicate dynamic_property #"trains.ads" 17 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t32s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t32s__ref #"railsystems.ads" 113 0 0# =
  { mutable t32s__content "model_trace:" : t32s }
 
 function t32s__ref___projection #"railsystems.ads" 113 0 0# 
   (a : t32s__ref) : t32s =
  a.t32s__content
 
 meta "model_projection" function t32s__ref___projection
 
 meta "inline : no" function t32s__ref___projection
 
 val t32s__havoc #"railsystems.ads" 113 0 0# 
   (x : t32s__ref) : unit
  writes {x}

end

(* Module for defining the constant "r_system" defined at railsystems.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 163 0 0# "model_projected" "model_trace:6235" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 163 0 0# "model" "model_trace:6244" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 163 0 0# "model" "model_trace:6255" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrackbyname" defined at railsystems.ads:163, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrackbyname
 use import "_gnatprove_standard".Main
 use        Tracks__track
 use        Railsystems__railsystem

 function gettrackbyname #"railsystems.ads" 163 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track

end

(* Module for defining the constant "r_system" defined at railsystems.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 154 0 0# "model_projected" "model_trace:6203" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stationlocation" defined at railsystems.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__stationlocation
 use import "_gnatprove_standard".Main

 function stationlocation #"railsystems.ads" 154 0 0# "model" "model_trace:6212" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationlocation" defined at railsystems.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__stationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getstationbyname" defined at railsystems.ads:154, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__getstationbyname
 use import "_gnatprove_standard".Main
 use        Stations__station
 use        Railsystems__railsystem

 function getstationbyname #"railsystems.ads" 154 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station

end

(* Module for defining the constant "origin" defined at railsystems.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 136 0 0# "model" "model_trace:6000" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 136 0 0# "model" "model_trace:6011" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "starttime" defined at railsystems.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__starttime
 use import "_gnatprove_standard".Main

 function starttime #"railsystems.ads" 136 0 0# "model" "model_trace:6022" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "starttime" defined at railsystems.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__starttime__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T36s" defined at railsystems.ads:142, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__preparetrain__L35s__T36s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t36s #"railsystems.ads" 142 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__preparetrain__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 29 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t36s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t36s__ref #"railsystems.ads" 142 0 0# =
  { mutable t36s__content "model_trace:" : t36s }
 
 function t36s__ref___projection #"railsystems.ads" 142 0 0# 
   (a : t36s__ref) : t36s =
  a.t36s__content
 
 meta "model_projection" function t36s__ref___projection
 
 meta "inline : no" function t36s__ref___projection
 
 val t36s__havoc #"railsystems.ads" 142 0 0# 
   (x : t36s__ref) : unit
  writes {x}

end

(* Module for defining the constant "r_system" defined at railsystems.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 168 0 0# "model_projected" "model_trace:6293" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at railsystems.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 168 0 0# "model" "model_trace:6302" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrainbyid" defined at railsystems.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrainbyid
 use import "_gnatprove_standard".Main
 use        Trains__train
 use        Railsystems__railsystem

 function gettrainbyid #"railsystems.ads" 168 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train

end

(* Module for axiomatizing type "T1b" defined at railsystems.adb:36, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T1b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 17 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "R2b" defined at railsystems.adb:44, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__go__L_2__R2b
 use import "_gnatprove_standard".Main

 function r2b #"railsystems.adb" 44 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T3b" defined at railsystems.adb:44, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T3b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3b #"railsystems.adb" 44 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3b__ref #"railsystems.adb" 44 0 0# =
  { mutable t3b__content "model_trace:" : t3b }
 
 function t3b__ref___projection #"railsystems.adb" 44 0 0# 
   (a : t3b__ref) : t3b =
  a.t3b__content
 
 meta "model_projection" function t3b__ref___projection
 
 meta "inline : no" function t3b__ref___projection
 
 val t3b__havoc #"railsystems.adb" 44 0 0# 
   (x : t3b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4b" defined at railsystems.adb:50, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T4b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"railsystems.adb" 44 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5b" defined at railsystems.adb:69, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T5b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  11
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T6b" defined at railsystems.adb:70, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T6b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7b" defined at railsystems.adb:71, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T7b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  25
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T8b" defined at railsystems.adb:72, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T8b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  11
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9b" defined at railsystems.adb:73, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T9b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  11
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T10b" defined at railsystems.adb:74, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T10b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  11
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11b" defined at railsystems.adb:75, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_2__T11b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  56
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T12b" defined at railsystems.adb:87, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13b" defined at railsystems.adb:96, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T13b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T14b" defined at railsystems.adb:117, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T14b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T15b" defined at railsystems.adb:119, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T15b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T16b" defined at railsystems.adb:120, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T16b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  30
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T17b" defined at railsystems.adb:121, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T17b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  27
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T18b" defined at railsystems.adb:123, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L_1__T18b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  56
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T19b" defined at railsystems.adb:161, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__preparetrain__T19b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "R20b" defined at railsystems.adb:192, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__L_3__R20b
 use import "_gnatprove_standard".Main

 function r20b #"railsystems.adb" 192 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T21b" defined at railsystems.adb:192, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__getstationbyname__L_3__T21b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t21b #"railsystems.adb" 192 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t21b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t21b__ref #"railsystems.adb" 192 0 0# =
  { mutable t21b__content "model_trace:" : t21b }
 
 function t21b__ref___projection #"railsystems.adb" 192 0 0# 
   (a : t21b__ref) : t21b =
  a.t21b__content
 
 meta "model_projection" function t21b__ref___projection
 
 meta "inline : no" function t21b__ref___projection
 
 val t21b__havoc #"railsystems.adb" 192 0 0# 
   (x : t21b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R24b" defined at railsystems.adb:217, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__L_4__R24b
 use import "_gnatprove_standard".Main

 function r24b #"railsystems.adb" 217 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T25b" defined at railsystems.adb:217, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__gettrackbyname__L_4__T25b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t25b #"railsystems.adb" 217 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t25b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t25b__ref #"railsystems.adb" 217 0 0# =
  { mutable t25b__content "model_trace:" : t25b }
 
 function t25b__ref___projection #"railsystems.adb" 217 0 0# 
   (a : t25b__ref) : t25b =
  a.t25b__content
 
 meta "model_projection" function t25b__ref___projection
 
 meta "inline : no" function t25b__ref___projection
 
 val t25b__havoc #"railsystems.adb" 217 0 0# 
   (x : t25b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R29b" defined at railsystems.adb:323, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__L_5__R29b
 use import "_gnatprove_standard".Main

 function r29b #"railsystems.adb" 323 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T30b" defined at railsystems.adb:323, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__replacetrack__L_5__T30b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t30b #"railsystems.adb" 323 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t30b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t30b__ref #"railsystems.adb" 323 0 0# =
  { mutable t30b__content "model_trace:" : t30b }
 
 function t30b__ref___projection #"railsystems.adb" 323 0 0# 
   (a : t30b__ref) : t30b =
  a.t30b__content
 
 meta "model_projection" function t30b__ref___projection
 
 meta "inline : no" function t30b__ref___projection
 
 val t30b__havoc #"railsystems.adb" 323 0 0# 
   (x : t30b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R31b" defined at railsystems.adb:345, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__L_6__R31b
 use import "_gnatprove_standard".Main

 function r31b #"railsystems.adb" 345 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T32b" defined at railsystems.adb:345, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__replacetrain__L_6__T32b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t32b #"railsystems.adb" 345 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t32b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t32b__ref #"railsystems.adb" 345 0 0# =
  { mutable t32b__content "model_trace:" : t32b }
 
 function t32b__ref___projection #"railsystems.adb" 345 0 0# 
   (a : t32b__ref) : t32b =
  a.t32b__content
 
 meta "model_projection" function t32b__ref___projection
 
 meta "inline : no" function t32b__ref___projection
 
 val t32b__havoc #"railsystems.adb" 345 0 0# 
   (x : t32b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R33b" defined at railsystems.adb:362, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__L_7__R33b
 use import "_gnatprove_standard".Main

 function r33b #"railsystems.adb" 362 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T34b" defined at railsystems.adb:362, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__replacestation__L_7__T34b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t34b #"railsystems.adb" 362 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t34b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t34b__ref #"railsystems.adb" 362 0 0# =
  { mutable t34b__content "model_trace:" : t34b }
 
 function t34b__ref___projection #"railsystems.adb" 362 0 0# 
   (a : t34b__ref) : t34b =
  a.t34b__content
 
 meta "model_projection" function t34b__ref___projection
 
 meta "inline : no" function t34b__ref___projection
 
 val t34b__havoc #"railsystems.adb" 362 0 0# 
   (x : t34b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R35b" defined at railsystems.adb:392, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b
 use import "_gnatprove_standard".Main

 function r35b #"railsystems.adb" 392 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T36b" defined at railsystems.adb:392, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__T36b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t36b #"railsystems.adb" 392 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t36b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t36b__ref #"railsystems.adb" 392 0 0# =
  { mutable t36b__content "model_trace:" : t36b }
 
 function t36b__ref___projection #"railsystems.adb" 392 0 0# 
   (a : t36b__ref) : t36b =
  a.t36b__content
 
 meta "model_projection" function t36b__ref___projection
 
 meta "inline : no" function t36b__ref___projection
 
 val t36b__havoc #"railsystems.adb" 392 0 0# 
   (x : t36b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R37b" defined at railsystems.adb:395, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b
 use import "_gnatprove_standard".Main

 function r37b #"railsystems.adb" 395 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T38b" defined at railsystems.adb:395, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t38b #"railsystems.adb" 395 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t38b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t38b__ref #"railsystems.adb" 395 0 0# =
  { mutable t38b__content "model_trace:" : t38b }
 
 function t38b__ref___projection #"railsystems.adb" 395 0 0# 
   (a : t38b__ref) : t38b =
  a.t38b__content
 
 meta "model_projection" function t38b__ref___projection
 
 meta "inline : no" function t38b__ref___projection
 
 val t38b__havoc #"railsystems.adb" 395 0 0# 
   (x : t38b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R39b" defined at railsystems.adb:415, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b
 use import "_gnatprove_standard".Main

 function r39b #"railsystems.adb" 415 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T40b" defined at railsystems.adb:415, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t40b #"railsystems.adb" 415 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t40b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t40b__ref #"railsystems.adb" 415 0 0# =
  { mutable t40b__content "model_trace:" : t40b }
 
 function t40b__ref___projection #"railsystems.adb" 415 0 0# 
   (a : t40b__ref) : t40b =
  a.t40b__content
 
 meta "model_projection" function t40b__ref___projection
 
 meta "inline : no" function t40b__ref___projection
 
 val t40b__havoc #"railsystems.adb" 415 0 0# 
   (x : t40b__ref) : unit
  writes {x}

end
(* Module for defining a ref holding the value of variable "od" defined at types.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Types__od
 use import "_gnatprove_standard".Main
 use        Types__odrecord

 val od__split_fields #"types.ads" 20 0 0# "model_projected" "model_trace:6835"  : Types__odrecord.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 16 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "od" defined at types.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__od__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__append__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 62 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:75 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__delete_all__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 75 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:75 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 87 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:91 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__init__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 91 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:91 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "constraint_error_def" defined at s-stalib.ads:152, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__constraint_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val constraint_error_def #"s-stalib.ads" 152 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 152 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "constraint_error_def" defined at s-stalib.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__constraint_error_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "numeric_error_def" defined at s-stalib.ads:161, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__numeric_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val numeric_error_def #"s-stalib.ads" 161 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 161 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "numeric_error_def" defined at s-stalib.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__numeric_error_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "program_error_def" defined at s-stalib.ads:170, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__program_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val program_error_def #"s-stalib.ads" 170 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 170 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "program_error_def" defined at s-stalib.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__program_error_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "storage_error_def" defined at s-stalib.ads:179, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__storage_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val storage_error_def #"s-stalib.ads" 179 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 179 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "storage_error_def" defined at s-stalib.ads:179, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__storage_error_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tasking_error_def" defined at s-stalib.ads:188, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__tasking_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val tasking_error_def #"s-stalib.ads" 188 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 188 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tasking_error_def" defined at s-stalib.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__tasking_error_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "abort_signal_def" defined at s-stalib.ads:197, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__abort_signal_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val abort_signal_def #"s-stalib.ads" 197 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 197 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "abort_signal_def" defined at s-stalib.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__abort_signal_def__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__local_partition_id
 use import "_gnatprove_standard".Main

 val local_partition_id #"s-stalib.ads" 213 0 0# "model" "model_trace:10453"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__local_partition_id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__exception_trace
 use import "_gnatprove_standard".Main

 val exception_trace #"s-stalib.ads" 246 0 0# "model" "model_trace:10501"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 218 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__exception_trace__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at a-except.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__exceptions__save_occurrence__target
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val target #"a-except.ads" 124 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at a-except.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Ada__calendar__clock_time
 use import "_gnatprove_standard".Main

 val clock_time #"a-calend.ads" 38 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__clock_time__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "year" defined at a-calend.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__year
 use import "_gnatprove_standard".Main

 val year #"a-calend.ads" 73 0 0# "model" "model_trace:10914"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "month" defined at a-calend.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__month
 use import "_gnatprove_standard".Main

 val month #"a-calend.ads" 74 0 0# "model" "model_trace:10923"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "day" defined at a-calend.ads:75, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__day
 use import "_gnatprove_standard".Main

 val day #"a-calend.ads" 75 0 0# "model" "model_trace:10932"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "seconds" defined at a-calend.ads:76, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 val seconds #"a-calend.ads" 76 0 0# "model_projected" "model_trace:10941"  : Ada__calendar__day_duration.day_duration__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:58, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields #"a-stream.ads" 58 0 0# "model_projected" "model_trace:14624"  : Ada__streams__root_stream_type.__split_fields__ref 
 
 function stream__attr__tag #"a-stream.ads" 58 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-stream.ads:59, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"a-stream.ads" 59 0 0# "model_projected" "model_trace:14633"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"a-stream.ads" 59 0 0# "model_projected" "model_trace:14633'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"a-stream.ads" 59 0 0# "model_projected" "model_trace:14633'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-stream.ads:60, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__last
 use import "_gnatprove_standard".Main

 val last #"a-stream.ads" 60 0 0# "model" "model_trace:14642"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-stream.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:64, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__write__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields #"a-stream.ads" 64 0 0# "model_projected" "model_trace:14660"  : Ada__streams__root_stream_type.__split_fields__ref 
 
 function stream__attr__tag #"a-stream.ads" 64 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:64, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val v #"a-stream.ads" 78 0 0# "model_projected" "model_trace:14709"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function v__first #"a-stream.ads" 78 0 0# "model_projected" "model_trace:14709'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last #"a-stream.ads" 78 0 0# "model_projected" "model_trace:14709'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:84, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__stream_element_arraySR__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val v #"a-stream.ads" 84 0 0#  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function v__first #"a-stream.ads" 84 0 0# 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last #"a-stream.ads" 84 0 0# 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySR__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:87, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__create__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 87 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 93 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__close__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 98 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__close__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__delete__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 99 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__delete__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 100 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__2__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 101 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 205 0 0# "model" "model_trace:13356"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:206, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 206 0 0# "model" "model_trace:13374"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:212, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 212 0 0# "model" "model_trace:13446"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line #"a-textio.ads" 213 0 0# "model" "model_trace:13455"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 213 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:216, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 216 0 0# "model" "model_trace:13473"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line #"a-textio.ads" 217 0 0# "model" "model_trace:13482"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:221, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 221 0 0# "model" "model_trace:13509"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:224, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 224 0 0# "model" "model_trace:13527"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:228, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 228 0 0# "model" "model_trace:13554"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:229, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__available
 use import "_gnatprove_standard".Main

 val available #"a-textio.ads" 229 0 0# "model" "model_trace:13563"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 229 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:232, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 232 0 0# "model" "model_trace:13581"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:233, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__available
 use import "_gnatprove_standard".Main

 val available #"a-textio.ads" 233 0 0# "model" "model_trace:13590"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 233 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__3__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 239 0 0# "model_projected" "model_trace:13617"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 239 0 0# "model_projected" "model_trace:13617'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 239 0 0# "model_projected" "model_trace:13617'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:240, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__4__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 240 0 0# "model_projected" "model_trace:13635"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 240 0 0# "model_projected" "model_trace:13635'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 240 0 0# "model_projected" "model_trace:13635'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 246 0 0# "model_projected" "model_trace:13707"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 246 0 0# "model_projected" "model_trace:13707'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 246 0 0# "model_projected" "model_trace:13707'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:247, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 247 0 0# "model" "model_trace:13716"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:250, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 250 0 0# "model_projected" "model_trace:13734"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 250 0 0# "model_projected" "model_trace:13734'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 250 0 0# "model_projected" "model_trace:13734'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:250, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:251, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 251 0 0# "model" "model_trace:13743"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:251, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__default_wcem
 use import "_gnatprove_standard".Main

 val default_wcem #"a-textio.ads" 362 0 0# "model" "model_trace:14010"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__default_wcem__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:432, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__file
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val file #"a-textio.ads" 432 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 432 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:432, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:433, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"a-textio.ads" 433 0 0# "model_projected" "model_trace:14272"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"a-textio.ads" 433 0 0# "model_projected" "model_trace:14272'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"a-textio.ads" 433 0 0# "model_projected" "model_trace:14272'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:433, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:434, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 434 0 0# "model" "model_trace:14285"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:434, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:438, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__write__2__file
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val file #"a-textio.ads" 438 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 438 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:438, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_in_afcb #"a-textio.ads" 446 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 446 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_out_afcb #"a-textio.ads" 447 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 447 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err_afcb
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_err_afcb #"a-textio.ads" 448 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 448 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_in #"a-textio.ads" 450 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 450 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_out #"a-textio.ads" 451 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 451 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val standard_err #"a-textio.ads" 452 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 452 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_in" defined at a-textio.ads:455, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_in
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_in #"a-textio.ads" 455 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 455 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "current_in" defined at a-textio.ads:455, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_out" defined at a-textio.ads:456, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_out
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_out #"a-textio.ads" 456 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 456 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "current_out" defined at a-textio.ads:456, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_err" defined at a-textio.ads:457, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_err
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_err #"a-textio.ads" 457 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 457 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "current_err" defined at a-textio.ads:457, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tk" defined at stations.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__tk
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val tk__split_fields #"stations.ads" 8 0 0# "model_projected" "model_trace:7437"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tk" defined at stations.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__tk__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__append__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 62 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:75 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__delete_all__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 75 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:75 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 87 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:91 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__init__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 91 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:91 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at stations.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val intracks__split_fields #"stations.ads" 15 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at stations.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at stations.ads:16, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val outtracks__split_fields #"stations.ads" 16 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at stations.ads:16, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at trains.ads:7, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val intracks__split_fields #"trains.ads" 7 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at trains.ads:7, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at trains.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val outtracks__split_fields #"trains.ads" 8 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at trains.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tn" defined at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__tn
 use import "_gnatprove_standard".Main
 use        Trains__train

 val tn__split_fields #"railsystems.ads" 14 0 0# "model_projected" "model_trace:4976"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tn" defined at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__tn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 62 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:75 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 75 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:75 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 87 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:91 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 91 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:91 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "size" defined at list.adb:19 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__contains__size
 use import "_gnatprove_standard".Main

 val size #"list.adb" 19 0 0# "model" "model_trace:28593"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at list.adb:19 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "contain" defined at list.adb:20 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__contains__contain
 use import "_gnatprove_standard".Main

 val contain #"list.adb" 20 0 0# "model" "model_trace:28602"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "contain" defined at list.adb:20 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__contain__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__contains__L_1__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 24 0 0# "model" "model_trace:28681"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 24 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__L_1__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "data" defined at list.adb:137 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__get_element_by_id__data
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 val data__split_fields #"list.adb" 137 0 0# "model_projected" "model_trace:28983"  : Railsystems__list_trains__data_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "data" defined at list.adb:137 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__data__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__get_element_by_id__L_2__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 148 0 0# "model" "model_trace:29062"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 148 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__L_2__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace_by_id__L_3__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 216 0 0# "model" "model_trace:29207"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 216 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__L_3__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "sn" defined at railsystems.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__sn
 use import "_gnatprove_standard".Main
 use        Stations__station

 val sn__split_fields #"railsystems.ads" 21 0 0# "model_projected" "model_trace:5011"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sn" defined at railsystems.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__sn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 62 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:75 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 75 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:75 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 87 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:91 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 91 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:91 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "size" defined at list.adb:19 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__contains__size
 use import "_gnatprove_standard".Main

 val size #"list.adb" 19 0 0# "model" "model_trace:29476"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at list.adb:19 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "contain" defined at list.adb:20 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__contains__contain
 use import "_gnatprove_standard".Main

 val contain #"list.adb" 20 0 0# "model" "model_trace:29485"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "contain" defined at list.adb:20 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__contain__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__contains__L_1__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 24 0 0# "model" "model_trace:29564"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 24 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__L_1__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "data" defined at list.adb:137 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__get_element_by_id__data
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 val data__split_fields #"list.adb" 137 0 0# "model_projected" "model_trace:29866"  : Railsystems__list_stations__data_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 22 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "data" defined at list.adb:137 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__data__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__get_element_by_id__L_2__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 148 0 0# "model" "model_trace:29945"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 148 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__L_2__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace_by_id__L_3__i
 use import "_gnatprove_standard".Main

 val i #"list.adb" 216 0 0# "model" "model_trace:30090"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"list.adb" 216 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__L_3__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:37, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__init__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 37 0 0# "model_projected" "model_trace:5103"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__init__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:38, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 38 0 0# "model_projected" "model_trace:5121"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:47, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 47 0 0# "model_projected" "model_trace:5194"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:68, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 68 0 0# "model_projected" "model_trace:5362"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:84, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacestation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 84 0 0# "model_projected" "model_trace:5490"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:88, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 88 0 0# "model_projected" "model_trace:5528"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:92, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 92 0 0# "model_projected" "model_trace:5566"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:96, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 96 0 0# "model_projected" "model_trace:5604"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:104, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 104 0 0# "model_projected" "model_trace:5622"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:104, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 104 0 0# "model_projected" "model_trace:5631"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:136, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 136 0 0# "model_projected" "model_trace:5980"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 29 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:136, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 136 0 0# "model_projected" "model_trace:5989"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "track" defined at railsystems.adb:26, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__track
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val track__split_fields #"railsystems.adb" 26 0 0# "model_projected" "model_trace:2425"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "track" defined at railsystems.adb:26, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "station" defined at railsystems.adb:27, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__station
 use import "_gnatprove_standard".Main
 use        Stations__station

 val station__split_fields #"railsystems.adb" 27 0 0# "model_projected" "model_trace:2436"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station" defined at railsystems.adb:27, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tempstationlocation" defined at railsystems.adb:28, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__tempstationlocation
 use import "_gnatprove_standard".Main

 val tempstationlocation #"railsystems.adb" 28 0 0# "model" "model_trace:2447"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tempstationlocation" defined at railsystems.adb:28, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__tempstationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "size" defined at railsystems.adb:29, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__size
 use import "_gnatprove_standard".Main

 val size #"railsystems.adb" 29 0 0# "model" "model_trace:2458"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at railsystems.adb:29, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "station_count" defined at railsystems.adb:30, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__station_count
 use import "_gnatprove_standard".Main

 val station_count #"railsystems.adb" 30 0 0# "model" "model_trace:2467"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station_count" defined at railsystems.adb:30, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__station_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:44, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__L_2__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 44 0 0# "model" "model_trace:2565"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__L_2__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "temporiginstation" defined at railsystems.adb:152, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__temporiginstation
 use import "_gnatprove_standard".Main
 use        Stations__station

 val temporiginstation__split_fields #"railsystems.adb" 152 0 0# "model_projected" "model_trace:3164"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "temporiginstation" defined at railsystems.adb:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__temporiginstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "temp" defined at railsystems.adb:187, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__getstationbyname__temp
 use import "_gnatprove_standard".Main
 use        Stations__station

 val temp__split_fields #"railsystems.adb" 187 0 0# "model_projected" "model_trace:3330"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "temp" defined at railsystems.adb:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:192, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__getstationbyname__L_3__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 192 0 0# "model" "model_trace:3356"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 192 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__L_3__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "temp" defined at railsystems.adb:210, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__gettrackbyname__temp
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val temp__split_fields #"railsystems.adb" 210 0 0# "model_projected" "model_trace:3451"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "temp" defined at railsystems.adb:210, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:217, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__gettrackbyname__L_4__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 217 0 0# "model" "model_trace:3489"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__L_4__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "track" defined at railsystems.adb:238, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrack__track
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val track__split_fields #"railsystems.adb" 238 0 0# "model_projected" "model_trace:3627"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "track" defined at railsystems.adb:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.adb:260, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.adb" 260 0 0# "model_projected" "model_trace:3763"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.adb:260, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.adb:284, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__gettrainbyid__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.adb" 284 0 0# "model_projected" "model_trace:3856"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.adb:284, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "station" defined at railsystems.adb:299, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addstation__station
 use import "_gnatprove_standard".Main
 use        Stations__station

 val station__split_fields #"railsystems.adb" 299 0 0# "model_projected" "model_trace:3922"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station" defined at railsystems.adb:299, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:323, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrack__L_5__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 323 0 0# "model" "model_trace:4007"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 323 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:323, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__L_5__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:345, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrain__L_6__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 345 0 0# "model" "model_trace:4160"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 345 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:345, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__L_6__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:362, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacestation__L_7__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 362 0 0# "model" "model_trace:4251"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 362 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__L_7__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tempstation" defined at railsystems.adb:381, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation
 use import "_gnatprove_standard".Main
 use        Stations__station

 val tempstation__split_fields #"railsystems.adb" 381 0 0# "model_projected" "model_trace:4342"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 18 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tempstation" defined at railsystems.adb:381, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "temptrack" defined at railsystems.adb:382, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val temptrack__split_fields #"railsystems.adb" 382 0 0# "model_projected" "model_trace:4353"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "temptrack" defined at railsystems.adb:382, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "od_record" defined at railsystems.adb:383, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record
 use import "_gnatprove_standard".Main
 use        Types__odrecord

 val od_record__split_fields #"railsystems.adb" 383 0 0# "model_projected" "model_trace:4364"  : Types__odrecord.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 16 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "od_record" defined at railsystems.adb:383, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "size" defined at railsystems.adb:384, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__size
 use import "_gnatprove_standard".Main

 val size #"railsystems.adb" 384 0 0# "model" "model_trace:4375"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at railsystems.adb:384, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "found" defined at railsystems.adb:385, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__found
 use import "_gnatprove_standard".Main

 val found #"railsystems.adb" 385 0 0# "model" "model_trace:4384"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 385 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "found" defined at railsystems.adb:385, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at railsystems.adb:392, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__i
 use import "_gnatprove_standard".Main

 val i #"railsystems.adb" 392 0 0# "model" "model_trace:4396"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 392 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at railsystems.adb:392, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "j" defined at railsystems.adb:395, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__j
 use import "_gnatprove_standard".Main

 val j #"railsystems.adb" 395 0 0# "model" "model_trace:4427"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 395 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at railsystems.adb:395, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "w" defined at railsystems.adb:415, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__w
 use import "_gnatprove_standard".Main

 val w #"railsystems.adb" 415 0 0# "model" "model_trace:4615"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.adb" 415 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "w" defined at railsystems.adb:415, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__w__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__get_element_by_id__data," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_by_id__data
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val data #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__get_element_by_id__data", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_by_id__data__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__contains__contain," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__contain
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val contain #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__contains__contain", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__contain__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__contains__contain," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__contain
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val contain #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__contains__contain", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__contain__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__get_element_by_id__data," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_by_id__data
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val data #"railsystems.adb" 415 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__get_element_by_id__data", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_by_id__data__axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"railsystems.adb" 415 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "append" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:75 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:91 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_natural
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_train_state
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_station_locations
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:8782" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:8793" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:8804" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:8817" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:8832" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:8842" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:8852" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:8903" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:8912" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:8921" 
   : int

end

(* Module for defining the value of the aggregate at system.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__underlying_priorities__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 function system__underlying_priorities__aggregate_def #"system.ads" 166 0 0# 
   (temp___142 : int) (temp___143 : int) (temp___144 : int) (temp___145 : int) (temp___146 : int) (temp___147 : int) (temp___148 : int) (temp___149 : int) (temp___150 : int) (temp___151 : int) (temp___152 : int) (temp___153 : int) (temp___154 : int) (temp___155 : int) (temp___156 : int) (temp___157 : int) : Array__Int__Standard__integer.map
 
 axiom def_axiom :
  (forall temp___142 temp___143 temp___144 temp___145 temp___146 temp___147 temp___148 temp___149 temp___150 temp___151 temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 : int.
   (let temp___141 = (system__underlying_priorities__aggregate_def temp___142 temp___143 temp___144 temp___145 temp___146 temp___147 temp___148 temp___149 temp___150 temp___151 temp___152 temp___153 temp___154 temp___155 temp___156 temp___157) in (
    (forall temp___158 : int.
     (if (( (31 <= temp___158) /\ (temp___158 <= 31) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___157))) else if (( (21 <= temp___158) /\ (temp___158 <= 30) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___156)))  else if ((temp___158 = 20)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___155)))  else if ((temp___158 = 19)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___154)))  else if ((temp___158 = 18)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___153)))  else if ((temp___158 = 17)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___152)))  else if ((temp___158 = 16)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___151)))  else if ((temp___158 = 15)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___150)))  else if ((temp___158 = 14)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___149)))  else if ((temp___158 = 13)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___148)))  else if ((temp___158 = 12)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___147)))  else if ((temp___158 = 11)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___146)))  else if ((temp___158 = 10)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___145)))  else if ((temp___158 = 9)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___144)))  else if ((temp___158 = 8)) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___143)))  else if (( (0 <= temp___158) /\ (temp___158 <= 7) )) then (
      ((Array__Int__Standard__integer.get temp___141 temp___158) = (Standard__integer.of_rep temp___142))) else (
      true)))))
  )

end

(* Module for defining the constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__long_bits
 use import "_gnatprove_standard".Main

 function long_bits #"s-parame.ads" 110 0 0# "model" "model_trace:9803" 
   : int

end

(* Module for defining a value for string literal  defined at s-parame.ads:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___159
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___159 #"s-parame.ads" 119 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_attribute_count
 use import "_gnatprove_standard".Main

 function max_attribute_count #"s-parame.ads" 183 0 0# "model" "model_trace:9876" 
   : int

end

(* Module for defining the constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_task_image_length
 use import "_gnatprove_standard".Main

 function max_task_image_length #"s-parame.ads" 199 0 0# "model" "model_trace:9895" 
   : int

end

(* Module for defining the constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_exception_msg_max_length
 use import "_gnatprove_standard".Main

 function default_exception_msg_max_length #"s-parame.ads" 206 0 0# "model" "model_trace:9904" 
   : int

end

(* Module for defining a value for string literal  defined at s-stalib.ads:142, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___160
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___160 #"s-stalib.ads" 142 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:143, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___161
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___161 #"s-stalib.ads" 143 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:144, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___162
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___162 #"s-stalib.ads" 144 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:145, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___163
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___163 #"s-stalib.ads" 145 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:146, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___164
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___164 #"s-stalib.ads" 146 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:148, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___165
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___165 #"s-stalib.ads" 148 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for possibly declaring a logic function for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__abort_undefer_direct
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__adafinal
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__save_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "exception_msg_max_length" defined at a-except.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_msg_max_length
 use import "_gnatprove_standard".Main

 function exception_msg_max_length #"a-except.ads" 153 0 0# "model" "model_trace:8127" 
   : int

end

(* Module for possibly declaring a logic function for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_signal_handler
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_controlled_operation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_library_exception_if_any
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_no_defer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__poll
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_tracebacks" defined at a-except.ads:280, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__max_tracebacks
 use import "_gnatprove_standard".Main

 function max_tracebacks #"a-except.ads" 280 0 0# "model" "model_trace:8455" 
   : int

end

(* Module for possibly declaring a logic function for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__clock
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function clock #"a-calend.ads" 58 0 0# 
   (ada__calendar__clock_time : Main.__private) : Ada__calendar__time.time

end

(* Module for possibly declaring a logic function for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__split
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__read
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__write
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strncpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__clearerr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__free
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memcpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memmove
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mktemp
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rewind
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpnam
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_binary_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_text_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__full_name
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at s-wchcon.ads:170, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__wch_con__wc_encoding_letters__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function system__wch_con__wc_encoding_letters__aggregate_def #"s-wchcon.ads" 170 0 0# 
   (temp___167 : int) (temp___168 : int) (temp___169 : int) (temp___170 : int) (temp___171 : int) (temp___172 : int) : Array__Int__Standard__character.map
 
 axiom def_axiom :
  (forall temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 : int.
   (let temp___166 = (system__wch_con__wc_encoding_letters__aggregate_def temp___167 temp___168 temp___169 temp___170 temp___171 temp___172) in (
    ( ( ( ( ( ((Array__Int__Standard__character.get temp___166 1) = (Standard__character.of_rep temp___167)) /\ ((Array__Int__Standard__character.get temp___166 2) = (Standard__character.of_rep temp___168)) ) /\ ((Array__Int__Standard__character.get temp___166 3) = (Standard__character.of_rep temp___169)) ) /\ ((Array__Int__Standard__character.get temp___166 4) = (Standard__character.of_rep temp___170)) ) /\ ((Array__Int__Standard__character.get temp___166 5) = (Standard__character.of_rep temp___171)) ) /\ ((Array__Int__Standard__character.get temp___166 6) = (Standard__character.of_rep temp___172)) )))
  )

end

(* Module for defining the constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequence
 use import "_gnatprove_standard".Main

 function wc_longest_sequence #"s-wchcon.ads" 189 0 0# "model" "model_trace:19451" 
   : int

end

(* Module for defining the value of the aggregate at s-wchcon.ads:194, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__wch_con__wc_longest_sequences__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__natural
 use        Array__Int__Standard__natural
 use        Array__Int__Standard__natural

 function system__wch_con__wc_longest_sequences__aggregate_def #"s-wchcon.ads" 194 0 0# 
   (temp___175 : int) (temp___176 : int) (temp___177 : int) (temp___178 : int) (temp___179 : int) (temp___180 : int) : Array__Int__Standard__natural.map
 
 axiom def_axiom :
  (forall temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 : int.
   (let temp___174 = (system__wch_con__wc_longest_sequences__aggregate_def temp___175 temp___176 temp___177 temp___178 temp___179 temp___180) in (
    ( ( ( ( ( ((Array__Int__Standard__natural.get temp___174 1) = (Standard__natural.of_rep temp___175)) /\ ((Array__Int__Standard__natural.get temp___174 2) = (Standard__natural.of_rep temp___176)) ) /\ ((Array__Int__Standard__natural.get temp___174 3) = (Standard__natural.of_rep temp___177)) ) /\ ((Array__Int__Standard__natural.get temp___174 4) = (Standard__natural.of_rep temp___178)) ) /\ ((Array__Int__Standard__natural.get temp___174 5) = (Standard__natural.of_rep temp___179)) ) /\ ((Array__Int__Standard__natural.get temp___174 6) = (Standard__natural.of_rep temp___180)) )))
  )

end

(* Module for possibly declaring a logic function for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__create
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__open
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__close
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_input
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_output
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_error
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__lm
 use import "_gnatprove_standard".Main

 function lm #"a-textio.ads" 352 0 0# "model" "model_trace:13982" 
   : int

end

(* Module for defining the constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__pm
 use import "_gnatprove_standard".Main

 function pm #"a-textio.ads" 355 0 0# "model" "model_trace:13996" 
   : int

end

(* Module for possibly declaring a logic function for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__initialize_standard_files
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:75 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:91 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:75 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:91 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__init
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_trains__contains__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__L_1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_trains__get_element_by_id__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__L_2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_3" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_trains__replace_by_id__L_3
 use import "_gnatprove_standard".Main

 exception L_3

end

(* Module giving an empty axiom for the entity "L_3" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__L_3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:75 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:91 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__init
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_stations__contains__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__L_1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_stations__get_element_by_id__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__L_2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_3" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__list_stations__replace_by_id__L_3
 use import "_gnatprove_standard".Main

 exception L_3

end

(* Module giving an empty axiom for the entity "L_3" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__L_3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at railsystems.ads:37, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrain" defined at railsystems.ads:38, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrack" defined at railsystems.ads:47, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addstation" defined at railsystems.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacestation" defined at railsystems.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacestation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrain" defined at railsystems.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrack" defined at railsystems.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addincomingoutgoingtracksforeachstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "go" defined at railsystems.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__go
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "preparetrain" defined at railsystems.ads:136, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__preparetrain
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at railsystems.adb:35, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__go__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at railsystems.adb:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__L_1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at railsystems.adb:44, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__go__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at railsystems.adb:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__L_2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_3" defined at railsystems.adb:192, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__getstationbyname__L_3
 use import "_gnatprove_standard".Main

 exception L_3

end

(* Module giving an empty axiom for the entity "L_3" defined at railsystems.adb:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__L_3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_4" defined at railsystems.adb:217, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__gettrackbyname__L_4
 use import "_gnatprove_standard".Main

 exception L_4

end

(* Module giving an empty axiom for the entity "L_4" defined at railsystems.adb:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__L_4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_5" defined at railsystems.adb:323, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__replacetrack__L_5
 use import "_gnatprove_standard".Main

 exception L_5

end

(* Module giving an empty axiom for the entity "L_5" defined at railsystems.adb:323, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__L_5__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_6" defined at railsystems.adb:345, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__replacetrain__L_6
 use import "_gnatprove_standard".Main

 exception L_6

end

(* Module giving an empty axiom for the entity "L_6" defined at railsystems.adb:345, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__L_6__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_7" defined at railsystems.adb:362, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__replacestation__L_7
 use import "_gnatprove_standard".Main

 exception L_7

end

(* Module giving an empty axiom for the entity "L_7" defined at railsystems.adb:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__L_7__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_8" defined at railsystems.adb:392, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8
 use import "_gnatprove_standard".Main

 exception L_8

end

(* Module giving an empty axiom for the entity "L_8" defined at railsystems.adb:392, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_9" defined at railsystems.adb:395, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9
 use import "_gnatprove_standard".Main

 exception L_9

end

(* Module giving an empty axiom for the entity "L_9" defined at railsystems.adb:395, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_10" defined at railsystems.adb:415, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10
 use import "_gnatprove_standard".Main

 exception L_10

end

(* Module giving an empty axiom for the entity "L_10" defined at railsystems.adb:415, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__Tmax_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__max_size

 predicate dynamic_invariant #"railsystems.adb" 415 0 0# "inline" 
   (temp___expr_185 : int) (temp___is_init_182 : bool) (temp___do_constant_183 : bool) (temp___do_toplevel_184 : bool)  =
  (if (( temp___is_init_182 \/ (Types__max_size.first <= Types__max_size.last) )) then (
   (Types__max_size.dynamic_property Types__max_size.first Types__max_size.last temp___expr_185)) else true)
 
 predicate default_initial_assumption #"types.ads" 3 0 0# "inline" 
   (temp___186 : int) (temp___187 : bool)  =
  true

end

(* Module giving axioms for type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__train_state__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__train_state

 predicate dynamic_invariant #"types.ads" 3 0 0# "inline" 
   (temp___expr_191 : int) (temp___is_init_188 : bool) (temp___do_constant_189 : bool) (temp___do_toplevel_190 : bool)  =
  (if (( temp___is_init_188 \/ (Types__train_state.first <= Types__train_state.last) )) then (
   (Types__train_state.dynamic_property Types__train_state.first Types__train_state.last temp___expr_191)) else true)
 
 predicate default_initial_assumption #"types.ads" 8 0 0# "inline" 
   (temp___192 : int) (temp___193 : bool)  =
  true

end

(* Module giving axioms for type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__station_locations__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 predicate dynamic_invariant #"types.ads" 8 0 0# "inline" 
   (temp___expr_197 : int) (temp___is_init_194 : bool) (temp___do_constant_195 : bool) (temp___do_toplevel_196 : bool)  =
  (if (( temp___is_init_194 \/ (Types__station_locations.first <= Types__station_locations.last) )) then (
   (Types__station_locations.dynamic_property Types__station_locations.first Types__station_locations.last temp___expr_197)) else true)
 
 predicate default_initial_assumption #"types.ads" 11 0 0# "inline" 
   (temp___198 : int) (temp___199 : bool)  =
  true

end

(* Module giving axioms for type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__timetable__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__timetable

 predicate dynamic_invariant #"types.ads" 11 0 0# "inline" 
   (temp___expr_203 : int) (temp___is_init_200 : bool) (temp___do_constant_201 : bool) (temp___do_toplevel_202 : bool)  =
  (if (( temp___is_init_200 \/ (Types__timetable.first <= Types__timetable.last) )) then (
   (Types__timetable.dynamic_property Types__timetable.first Types__timetable.last temp___expr_203)) else true)
 
 predicate default_initial_assumption #"types.ads" 14 0 0# "inline" 
   (temp___204 : int) (temp___205 : bool)  =
  true

end

(* Module giving axioms for type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__odrecord__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__odrecord

 predicate dynamic_invariant #"types.ads" 14 0 0# "inline" 
   (temp___expr_209 : Types__odrecord.odrecord) (temp___is_init_206 : bool) (temp___do_constant_207 : bool) (temp___do_toplevel_208 : bool)  =
  true
 
 predicate default_initial_assumption #"types.ads" 16 0 0# "inline" 
   (temp___210 : Types__odrecord.odrecord) (temp___211 : bool)  =
  ( (if ((Types__odrecord.origin__pred temp___210)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__origin (Types__odrecord.__split_fields temp___210))) = 0)) else true) /\ (if ((Types__odrecord.destination__pred temp___210)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__destination (Types__odrecord.__split_fields temp___210))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__list_od__data_type

 predicate dynamic_invariant #"types.ads" 16 0 0# "inline" 
   (temp___expr_215 : Types__list_od__data_type.data_type) (temp___is_init_212 : bool) (temp___do_constant_213 : bool) (temp___do_toplevel_214 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 22 0 0# "inline" 
   (temp___216 : Types__list_od__data_type.data_type) (temp___217 : bool)  =
  ( (if ((Types__list_od__data_type.origin__pred temp___216)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___216))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___216)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___216))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:95 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data

 predicate dynamic_invariant #"list.ads" 22 0 0# "inline" 
   (temp___expr_221 : Types__list_od__data.data) (temp___is_init_218 : bool) (temp___do_constant_219 : bool) (temp___do_toplevel_220 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 95 0 0# "inline" 
   (temp___222 : Types__list_od__data.data) (temp___223 : bool)  =
  ( (if ((Types__list_od__data.data__pred temp___222)) then (
   (let temp___224 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___222)) in (
    ( (if ((Types__list_od__data_type.origin__pred temp___224)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___224))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___224)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___224))) = 0)) else true) )))
  ) else true) /\ (if ((Types__list_od__data.id__pred temp___222)) then (
   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___222))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:103 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Types__list_od__list_array

 predicate dynamic_invariant #"list.ads" 95 0 0# "inline" 
   (temp___expr_228 : Types__list_od__list_array.list_array) (temp___is_init_225 : bool) (temp___do_constant_226 : bool) (temp___do_toplevel_227 : bool)  =
  (if (temp___do_constant_226) then (
   true) else (
   (Types__list_od__list_array.dynamic_property Standard__positive.first Standard__positive.last (Types__list_od__list_array.first temp___expr_228) (Types__list_od__list_array.last temp___expr_228))))

end

(* Module giving axioms for type "T4s" defined at list.ads:108 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at list.ads:108 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:105 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 103 0 0# "inline" 
   (temp___expr_233 : Types__list_od__list_ptr.list_ptr) (temp___is_init_230 : bool) (temp___do_constant_231 : bool) (temp___do_toplevel_232 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 105 0 0# "inline" 
   (temp___235 : Types__list_od__list_ptr.list_ptr) (temp___236 : bool)  =
  ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___235)) then (
   ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___235))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___235)) then (
   (let temp___237 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___235)) in (
    (forall temp___238 : int.
     (if (( (Types__list_od__list_ptr__T4s.first <= temp___238) /\ (temp___238 <= Types__list_od__list_ptr__T4s.last) )) then (
      (let temp___239 = (Array__Int__Types__list_od__data.get temp___237 temp___238) in (
       ( (if ((Types__list_od__data.data__pred temp___239)) then (
        (let temp___240 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___239)) in (
         ( (if ((Types__list_od__data_type.origin__pred temp___240)) then (
          ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___240))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___240)) then (
          ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___240))) = 0)) else true) )))
       ) else true) /\ (if ((Types__list_od__data.id__pred temp___239)) then (
        ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___239))) = 0)) else true) )))
     ) else true))))
  ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___235)) then (
   ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___235))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___235)) then (
   ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___235))) = 100)) else true) )

end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_244 : int) (temp___is_init_241 : bool) (temp___do_constant_242 : bool) (temp___do_toplevel_243 : bool)  =
  (if (( temp___is_init_241 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_244)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___245 : int) (temp___246 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_250 : BV32.t) (temp___is_init_247 : bool) (temp___do_constant_248 : bool) (temp___do_toplevel_249 : bool)  =
  (if (( temp___is_init_247 \/ (BV32.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_250)) else true)
 
 predicate default_initial_assumption #"system.ads" 108 0 0# "inline" 
   (temp___251 : BV32.t) (temp___252 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 108 0 0# "inline" 
   (temp___expr_256 : int) (temp___is_init_253 : bool) (temp___do_constant_254 : bool) (temp___do_toplevel_255 : bool)  =
  (if (( temp___is_init_253 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_256)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___257 : int) (temp___258 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_262 : int) (temp___is_init_259 : bool) (temp___do_constant_260 : bool) (temp___do_toplevel_261 : bool)  =
  (if (( temp___is_init_259 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_262)) else true)
 
 predicate default_initial_assumption #"system.ads" 100 0 0# "inline" 
   (temp___263 : int) (temp___264 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 100 0 0# "inline" 
   (temp___expr_268 : int) (temp___is_init_265 : bool) (temp___do_constant_266 : bool) (temp___do_toplevel_267 : bool)  =
  (if (( temp___is_init_265 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_268)) else true)
 
 predicate default_initial_assumption #"system.ads" 101 0 0# "inline" 
   (temp___269 : int) (temp___270 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 101 0 0# "inline" 
   (temp___expr_274 : int) (temp___is_init_271 : bool) (temp___do_constant_272 : bool) (temp___do_toplevel_273 : bool)  =
  (if (( temp___is_init_271 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_274)) else true)
 
 predicate default_initial_assumption #"system.ads" 102 0 0# "inline" 
   (temp___275 : int) (temp___276 : bool)  =
  true

end

(* Module giving axioms for type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__Tpriorities_mappingB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priorities_mapping__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 predicate dynamic_invariant #"system.ads" 102 0 0# "inline" 
   (temp___expr_280 : Array__Int__Standard__integer.map) (temp___is_init_277 : bool) (temp___do_constant_278 : bool) (temp___do_toplevel_279 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 161 0 0# "inline" 
   (temp___282 : Array__Int__Standard__integer.map) (temp___283 : bool)  =
  true

end

(* Module giving axioms for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Ttask_storage_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__task_storage_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__task_storage_size

 predicate dynamic_invariant #"system.ads" 161 0 0# "inline" 
   (temp___expr_289 : int) (temp___is_init_286 : bool) (temp___do_constant_287 : bool) (temp___do_toplevel_288 : bool)  =
  (if (( temp___is_init_286 \/ (System__parameters__task_storage_size.first <= System__parameters__task_storage_size.last) )) then (
   (System__parameters__task_storage_size.dynamic_property System__parameters__task_storage_size.first System__parameters__task_storage_size.last temp___expr_289)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 58 0 0# "inline" 
   (temp___290 : int) (temp___291 : bool)  =
  true

end

(* Module giving axioms for type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Tsize_typeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__size_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__size_type

 predicate dynamic_invariant #"s-parame.ads" 58 0 0# "inline" 
   (temp___expr_295 : int) (temp___is_init_292 : bool) (temp___do_constant_293 : bool) (temp___do_toplevel_294 : bool)  =
  (if (( temp___is_init_292 \/ (System__parameters__size_type.first <= System__parameters__size_type.last) )) then (
   (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last temp___expr_295)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 61 0 0# "inline" 
   (temp___296 : int) (temp___297 : bool)  =
  true

end

(* Module giving axioms for type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__percentage__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__percentage

 predicate dynamic_invariant #"s-parame.ads" 61 0 0# "inline" 
   (temp___expr_301 : int) (temp___is_init_298 : bool) (temp___do_constant_299 : bool) (temp___do_toplevel_300 : bool)  =
  (if (( temp___is_init_298 \/ (System__parameters__percentage.first <= System__parameters__percentage.last) )) then (
   (System__parameters__percentage.dynamic_property System__parameters__percentage.first System__parameters__percentage.last temp___expr_301)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 67 0 0# "inline" 
   (temp___302 : int) (temp___303 : bool)  =
  true

end

(* Module giving axioms for type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__c_address__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__Tbig_stringP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__big_string__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"s-parame.ads" 67 0 0# "inline" 
   (temp___expr_307 : Array__Int__Standard__character.map) (temp___is_init_304 : bool) (temp___do_constant_305 : bool) (temp___do_toplevel_306 : bool)  =
  true
 
 predicate default_initial_assumption #"s-stalib.ads" 62 0 0# "inline" 
   (temp___309 : Array__Int__Standard__character.map) (temp___310 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__to_ptrGP4411__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T2s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__exception_trace_kind__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__standard_library__exception_trace_kind

 predicate dynamic_invariant #"s-stalib.ads" 62 0 0# "inline" 
   (temp___expr_316 : int) (temp___is_init_313 : bool) (temp___do_constant_314 : bool) (temp___do_toplevel_315 : bool)  =
  (if (( temp___is_init_313 \/ (System__standard_library__exception_trace_kind.first <= System__standard_library__exception_trace_kind.last) )) then (
   (System__standard_library__exception_trace_kind.dynamic_property System__standard_library__exception_trace_kind.first System__standard_library__exception_trace_kind.last temp___expr_316)) else true)
 
 predicate default_initial_assumption #"s-stalib.ads" 218 0 0# "inline" 
   (temp___317 : int) (temp___318 : bool)  =
  true

end

(* Module giving axioms for type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__traceback_entry__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__tracebacks_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__traceback_entries__tracebacks_array

 predicate dynamic_invariant #"s-stalib.ads" 218 0 0# "inline" 
   (temp___expr_322 : System__traceback_entries__tracebacks_array.tracebacks_array) (temp___is_init_319 : bool) (temp___do_constant_320 : bool) (temp___do_toplevel_321 : bool)  =
  (if (temp___do_constant_320) then (
   true) else (
   (System__traceback_entries__tracebacks_array.dynamic_property Standard__positive.first Standard__positive.last (System__traceback_entries__tracebacks_array.first temp___expr_322) (System__traceback_entries__tracebacks_array.last temp___expr_322))))

end

(* Module giving axioms for type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_id__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 predicate dynamic_invariant #"s-traent.ads" 56 0 0# "inline" 
   (temp___expr_327 : Ada__exceptions__exception_id.exception_id) (temp___is_init_324 : bool) (temp___do_constant_325 : bool) (temp___do_toplevel_326 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 58 0 0# "inline" 
   (temp___328 : Ada__exceptions__exception_id.exception_id) (temp___329 : bool)  =
  true

end

(* Module giving axioms for type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__Ttracebacks_arrayP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__tracebacks_array__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 predicate dynamic_invariant #"a-except.ads" 58 0 0# "inline" 
   (temp___expr_333 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___is_init_330 : bool) (temp___do_constant_331 : bool) (temp___do_toplevel_332 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 283 0 0# "inline" 
   (temp___335 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___336 : bool)  =
  true

end

(* Module giving axioms for type "exception_occurrence" defined at a-except.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__Oeq

 axiom user_eq__def_axiom :
  (forall a b : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_occurrence.user_eq a b)].
   ((Ada__exceptions__exception_occurrence.user_eq a b) = (Ada__exceptions__Oeq.oeq a b)))
 
 predicate dynamic_invariant #"a-except.ads" 63 0 0# "inline" 
   (temp___expr_342 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___is_init_339 : bool) (temp___do_constant_340 : bool) (temp___do_toplevel_341 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 63 0 0# "inline" 
   (temp___343 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___344 : bool)  =
  true

end

(* Module giving axioms for type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__code_loc__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T11s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T12s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__time__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 predicate dynamic_invariant #"a-except.ads" 63 0 0# "inline" 
   (temp___expr_348 : Ada__calendar__time.time) (temp___is_init_345 : bool) (temp___do_constant_346 : bool) (temp___do_toplevel_347 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 44 0 0# "inline" 
   (temp___349 : Ada__calendar__time.time) (temp___350 : bool)  =
  true

end

(* Module giving axioms for type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__year_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__year_number

 predicate dynamic_invariant #"a-calend.ads" 44 0 0# "inline" 
   (temp___expr_354 : int) (temp___is_init_351 : bool) (temp___do_constant_352 : bool) (temp___do_toplevel_353 : bool)  =
  (if (( temp___is_init_351 \/ (Ada__calendar__year_number.first <= Ada__calendar__year_number.last) )) then (
   (Ada__calendar__year_number.dynamic_property Ada__calendar__year_number.first Ada__calendar__year_number.last temp___expr_354)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 50 0 0# "inline" 
   (temp___355 : int) (temp___356 : bool)  =
  true

end

(* Module giving axioms for type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__month_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__month_number

 predicate dynamic_invariant #"a-calend.ads" 50 0 0# "inline" 
   (temp___expr_360 : int) (temp___is_init_357 : bool) (temp___do_constant_358 : bool) (temp___do_toplevel_359 : bool)  =
  (if (( temp___is_init_357 \/ (Ada__calendar__month_number.first <= Ada__calendar__month_number.last) )) then (
   (Ada__calendar__month_number.dynamic_property Ada__calendar__month_number.first Ada__calendar__month_number.last temp___expr_360)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 51 0 0# "inline" 
   (temp___361 : int) (temp___362 : bool)  =
  true

end

(* Module giving axioms for type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__day_number

 predicate dynamic_invariant #"a-calend.ads" 51 0 0# "inline" 
   (temp___expr_366 : int) (temp___is_init_363 : bool) (temp___do_constant_364 : bool) (temp___do_toplevel_365 : bool)  =
  (if (( temp___is_init_363 \/ (Ada__calendar__day_number.first <= Ada__calendar__day_number.last) )) then (
   (Ada__calendar__day_number.dynamic_property Ada__calendar__day_number.first Ada__calendar__day_number.last temp___expr_366)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 52 0 0# "inline" 
   (temp___367 : int) (temp___368 : bool)  =
  true

end

(* Module giving axioms for type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_duration__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 predicate dynamic_invariant #"a-calend.ads" 52 0 0# "inline" 
   (temp___expr_372 : Ada__calendar__day_duration.day_duration) (temp___is_init_369 : bool) (temp___do_constant_370 : bool) (temp___do_toplevel_371 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 56 0 0# "inline" 
   (temp___373 : Ada__calendar__day_duration.day_duration) (temp___374 : bool)  =
  true

end

(* Module giving axioms for type "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__root_stream_type__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 predicate dynamic_invariant #"a-calend.ads" 56 0 0# "inline" 
   (temp___expr_378 : Ada__streams__root_stream_type.root_stream_type) (temp___is_init_375 : bool) (temp___do_constant_376 : bool) (temp___do_toplevel_377 : bool)  =
  true
 
 predicate default_initial_assumption #"a-stream.ads" 70 0 0# "inline" 
   (temp___379 : Ada__streams__root_stream_type.root_stream_type) (temp___380 : bool)  =
  ((Ada__streams__root_stream_type.attr__tag temp___379) = Ada__streams__root_stream_type.__tag)

end

(* Module giving axioms for type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__stream_element

 predicate dynamic_invariant #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_384 : BV8.t) (temp___is_init_381 : bool) (temp___do_constant_382 : bool) (temp___do_toplevel_383 : bool)  =
  (if (( temp___is_init_381 \/ (BV8.ule Ada__streams__stream_element.first Ada__streams__stream_element.last) )) then (
   (Ada__streams__stream_element.dynamic_property Ada__streams__stream_element.first Ada__streams__stream_element.last temp___expr_384)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 42 0 0# "inline" 
   (temp___385 : BV8.t) (temp___386 : bool)  =
  true

end

(* Module giving axioms for type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Tstream_element_offsetB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_offset__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element_offset

 predicate dynamic_invariant #"a-stream.ads" 42 0 0# "inline" 
   (temp___expr_390 : int) (temp___is_init_387 : bool) (temp___do_constant_388 : bool) (temp___do_toplevel_389 : bool)  =
  (if (( temp___is_init_387 \/ (Ada__streams__stream_element_offset.first <= Ada__streams__stream_element_offset.last) )) then (
   (Ada__streams__stream_element_offset.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last temp___expr_390)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 44 0 0# "inline" 
   (temp___391 : int) (temp___392 : bool)  =
  true

end

(* Module giving axioms for type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_count__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element_count

 predicate dynamic_invariant #"a-stream.ads" 44 0 0# "inline" 
   (temp___expr_396 : int) (temp___is_init_393 : bool) (temp___do_constant_394 : bool) (temp___do_toplevel_395 : bool)  =
  (if (( temp___is_init_393 \/ (Ada__streams__stream_element_count.first <= Ada__streams__stream_element_count.last) )) then (
   (Ada__streams__stream_element_count.dynamic_property Ada__streams__stream_element_count.first Ada__streams__stream_element_count.last temp___expr_396)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 51 0 0# "inline" 
   (temp___397 : int) (temp___398 : bool)  =
  true

end

(* Module giving axioms for type "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_array__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_array

 predicate dynamic_invariant #"a-stream.ads" 51 0 0# "inline" 
   (temp___expr_402 : Ada__streams__stream_element_array.stream_element_array) (temp___is_init_399 : bool) (temp___do_constant_400 : bool) (temp___do_toplevel_401 : bool)  =
  (if (temp___do_constant_400) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__stream_element_array.first temp___expr_402) (Ada__streams__stream_element_array.last temp___expr_402))))

end

(* Module giving axioms for type "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Troot_stream_typeC__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 predicate dynamic_invariant #"a-stream.ads" 54 0 0# "inline" 
   (temp___expr_408 : Ada__streams__root_stream_type.root_stream_type) (temp___is_init_405 : bool) (temp___do_constant_406 : bool) (temp___do_toplevel_407 : bool)  =
  true

end

(* Module giving axioms for type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__dirs__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__int

 predicate dynamic_invariant #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_412 : int) (temp___is_init_409 : bool) (temp___do_constant_410 : bool) (temp___do_toplevel_411 : bool)  =
  (if (( temp___is_init_409 \/ (System__crtl__int.first <= System__crtl__int.last) )) then (
   (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last temp___expr_412)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 53 0 0# "inline" 
   (temp___413 : int) (temp___414 : bool)  =
  true

end

(* Module giving axioms for type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__TlongB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__long__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__long

 predicate dynamic_invariant #"s-crtl.ads" 53 0 0# "inline" 
   (temp___expr_418 : int) (temp___is_init_415 : bool) (temp___do_constant_416 : bool) (temp___do_toplevel_417 : bool)  =
  (if (( temp___is_init_415 \/ (System__crtl__long.first <= System__crtl__long.last) )) then (
   (System__crtl__long.dynamic_property System__crtl__long.first System__crtl__long.last temp___expr_418)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 55 0 0# "inline" 
   (temp___419 : int) (temp___420 : bool)  =
  true

end

(* Module giving axioms for type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__off_t__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__off_t

 predicate dynamic_invariant #"s-crtl.ads" 55 0 0# "inline" 
   (temp___expr_424 : int) (temp___is_init_421 : bool) (temp___do_constant_422 : bool) (temp___do_toplevel_423 : bool)  =
  (if (( temp___is_init_421 \/ (System__crtl__off_t.first <= System__crtl__off_t.last) )) then (
   (System__crtl__off_t.dynamic_property System__crtl__off_t.first System__crtl__off_t.last temp___expr_424)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 58 0 0# "inline" 
   (temp___425 : int) (temp___426 : bool)  =
  true

end

(* Module giving axioms for type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__size_t__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__size_t

 predicate dynamic_invariant #"s-crtl.ads" 58 0 0# "inline" 
   (temp___expr_430 : BV32.t) (temp___is_init_427 : bool) (temp___do_constant_428 : bool) (temp___do_toplevel_429 : bool)  =
  (if (( temp___is_init_427 \/ (BV32.ule System__crtl__size_t.first System__crtl__size_t.last) )) then (
   (System__crtl__size_t.dynamic_property System__crtl__size_t.first System__crtl__size_t.last temp___expr_430)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 60 0 0# "inline" 
   (temp___431 : BV32.t) (temp___432 : bool)  =
  true

end

(* Module giving axioms for type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tssize_tB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__ssize_t__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__ssize_t

 predicate dynamic_invariant #"s-crtl.ads" 60 0 0# "inline" 
   (temp___expr_436 : int) (temp___is_init_433 : bool) (temp___do_constant_434 : bool) (temp___do_toplevel_435 : bool)  =
  (if (( temp___is_init_433 \/ (System__crtl__ssize_t.first <= System__crtl__ssize_t.last) )) then (
   (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last temp___expr_436)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 62 0 0# "inline" 
   (temp___437 : int) (temp___438 : bool)  =
  true

end

(* Module giving axioms for type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tint64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__int64

 predicate dynamic_invariant #"s-crtl.ads" 62 0 0# "inline" 
   (temp___expr_442 : int) (temp___is_init_439 : bool) (temp___do_constant_440 : bool) (temp___do_toplevel_441 : bool)  =
  (if (( temp___is_init_439 \/ (System__crtl__int64.first <= System__crtl__int64.last) )) then (
   (System__crtl__int64.dynamic_property System__crtl__int64.first System__crtl__int64.last temp___expr_442)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 65 0 0# "inline" 
   (temp___443 : int) (temp___444 : bool)  =
  true

end

(* Module giving axioms for type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__filename_encoding__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__filename_encoding

 predicate dynamic_invariant #"s-crtl.ads" 65 0 0# "inline" 
   (temp___expr_448 : int) (temp___is_init_445 : bool) (temp___do_constant_446 : bool) (temp___do_toplevel_447 : bool)  =
  (if (( temp___is_init_445 \/ (System__crtl__filename_encoding.first <= System__crtl__filename_encoding.last) )) then (
   (System__crtl__filename_encoding.dynamic_property System__crtl__filename_encoding.first System__crtl__filename_encoding.last temp___expr_448)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 72 0 0# "inline" 
   (temp___449 : int) (temp___450 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_8

 predicate dynamic_invariant #"s-crtl.ads" 72 0 0# "inline" 
   (temp___expr_454 : int) (temp___is_init_451 : bool) (temp___do_constant_452 : bool) (temp___do_toplevel_453 : bool)  =
  (if (( temp___is_init_451 \/ (Interfaces__integer_8.first <= Interfaces__integer_8.last) )) then (
   (Interfaces__integer_8.dynamic_property Interfaces__integer_8.first Interfaces__integer_8.last temp___expr_454)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 46 0 0# "inline" 
   (temp___455 : int) (temp___456 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_16

 predicate dynamic_invariant #"interfac.ads" 46 0 0# "inline" 
   (temp___expr_460 : int) (temp___is_init_457 : bool) (temp___do_constant_458 : bool) (temp___do_toplevel_459 : bool)  =
  (if (( temp___is_init_457 \/ (Interfaces__integer_16.first <= Interfaces__integer_16.last) )) then (
   (Interfaces__integer_16.dynamic_property Interfaces__integer_16.first Interfaces__integer_16.last temp___expr_460)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 49 0 0# "inline" 
   (temp___461 : int) (temp___462 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_32

 predicate dynamic_invariant #"interfac.ads" 49 0 0# "inline" 
   (temp___expr_466 : int) (temp___is_init_463 : bool) (temp___do_constant_464 : bool) (temp___do_toplevel_465 : bool)  =
  (if (( temp___is_init_463 \/ (Interfaces__integer_32.first <= Interfaces__integer_32.last) )) then (
   (Interfaces__integer_32.dynamic_property Interfaces__integer_32.first Interfaces__integer_32.last temp___expr_466)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 52 0 0# "inline" 
   (temp___467 : int) (temp___468 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_64

 predicate dynamic_invariant #"interfac.ads" 52 0 0# "inline" 
   (temp___expr_472 : int) (temp___is_init_469 : bool) (temp___do_constant_470 : bool) (temp___do_toplevel_471 : bool)  =
  (if (( temp___is_init_469 \/ (Interfaces__integer_64.first <= Interfaces__integer_64.last) )) then (
   (Interfaces__integer_64.dynamic_property Interfaces__integer_64.first Interfaces__integer_64.last temp___expr_472)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 55 0 0# "inline" 
   (temp___473 : int) (temp___474 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__unsigned_8

 predicate dynamic_invariant #"interfac.ads" 55 0 0# "inline" 
   (temp___expr_478 : BV8.t) (temp___is_init_475 : bool) (temp___do_constant_476 : bool) (temp___do_toplevel_477 : bool)  =
  (if (( temp___is_init_475 \/ (BV8.ule Interfaces__unsigned_8.first Interfaces__unsigned_8.last) )) then (
   (Interfaces__unsigned_8.dynamic_property Interfaces__unsigned_8.first Interfaces__unsigned_8.last temp___expr_478)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 63 0 0# "inline" 
   (temp___479 : BV8.t) (temp___480 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16

 predicate dynamic_invariant #"interfac.ads" 63 0 0# "inline" 
   (temp___expr_484 : BV16.t) (temp___is_init_481 : bool) (temp___do_constant_482 : bool) (temp___do_toplevel_483 : bool)  =
  (if (( temp___is_init_481 \/ (BV16.ule Interfaces__unsigned_16.first Interfaces__unsigned_16.last) )) then (
   (Interfaces__unsigned_16.dynamic_property Interfaces__unsigned_16.first Interfaces__unsigned_16.last temp___expr_484)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 66 0 0# "inline" 
   (temp___485 : BV16.t) (temp___486 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_24__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_24

 predicate dynamic_invariant #"interfac.ads" 66 0 0# "inline" 
   (temp___expr_490 : BV32.t) (temp___is_init_487 : bool) (temp___do_constant_488 : bool) (temp___do_toplevel_489 : bool)  =
  (if (( temp___is_init_487 \/ (BV32.ule Interfaces__unsigned_24.first Interfaces__unsigned_24.last) )) then (
   (Interfaces__unsigned_24.dynamic_property Interfaces__unsigned_24.first Interfaces__unsigned_24.last temp___expr_490)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 69 0 0# "inline" 
   (temp___491 : BV32.t) (temp___492 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_32

 predicate dynamic_invariant #"interfac.ads" 69 0 0# "inline" 
   (temp___expr_496 : BV32.t) (temp___is_init_493 : bool) (temp___do_constant_494 : bool) (temp___do_toplevel_495 : bool)  =
  (if (( temp___is_init_493 \/ (BV32.ule Interfaces__unsigned_32.first Interfaces__unsigned_32.last) )) then (
   (Interfaces__unsigned_32.dynamic_property Interfaces__unsigned_32.first Interfaces__unsigned_32.last temp___expr_496)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 74 0 0# "inline" 
   (temp___497 : BV32.t) (temp___498 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__unsigned_64

 predicate dynamic_invariant #"interfac.ads" 74 0 0# "inline" 
   (temp___expr_502 : BV64.t) (temp___is_init_499 : bool) (temp___do_constant_500 : bool) (temp___do_toplevel_501 : bool)  =
  (if (( temp___is_init_499 \/ (BV64.ule Interfaces__unsigned_64.first Interfaces__unsigned_64.last) )) then (
   (Interfaces__unsigned_64.dynamic_property Interfaces__unsigned_64.first Interfaces__unsigned_64.last temp___expr_502)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 77 0 0# "inline" 
   (temp___503 : BV64.t) (temp___504 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_32

 predicate dynamic_invariant #"interfac.ads" 77 0 0# "inline" 
   (temp___expr_508 : Interfaces__ieee_float_32.ieee_float_32) (temp___is_init_505 : bool) (temp___do_constant_506 : bool) (temp___do_toplevel_507 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 169 0 0# "inline" 
   (temp___509 : Interfaces__ieee_float_32.ieee_float_32) (temp___510 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_64

 predicate dynamic_invariant #"interfac.ads" 169 0 0# "inline" 
   (temp___expr_514 : Interfaces__ieee_float_64.ieee_float_64) (temp___is_init_511 : bool) (temp___do_constant_512 : bool) (temp___do_toplevel_513 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 172 0 0# "inline" 
   (temp___515 : Interfaces__ieee_float_64.ieee_float_64) (temp___516 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_extended_floatB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_extended_float__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_extended_float

 predicate dynamic_invariant #"interfac.ads" 172 0 0# "inline" 
   (temp___expr_520 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___is_init_517 : bool) (temp___do_constant_518 : bool) (temp___do_toplevel_519 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 182 0 0# "inline" 
   (temp___521 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___522 : bool)  =
  true

end

(* Module giving axioms for type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__int

 predicate dynamic_invariant #"interfac.ads" 182 0 0# "inline" 
   (temp___expr_526 : int) (temp___is_init_523 : bool) (temp___do_constant_524 : bool) (temp___do_toplevel_525 : bool)  =
  (if (( temp___is_init_523 \/ (Interfaces__c_streams__int.first <= Interfaces__c_streams__int.last) )) then (
   (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last temp___expr_526)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 42 0 0# "inline" 
   (temp___527 : int) (temp___528 : bool)  =
  true

end

(* Module giving axioms for type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__long__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__long

 predicate dynamic_invariant #"i-cstrea.ads" 42 0 0# "inline" 
   (temp___expr_532 : int) (temp___is_init_529 : bool) (temp___do_constant_530 : bool) (temp___do_toplevel_531 : bool)  =
  (if (( temp___is_init_529 \/ (Interfaces__c_streams__long.first <= Interfaces__c_streams__long.last) )) then (
   (Interfaces__c_streams__long.dynamic_property Interfaces__c_streams__long.first Interfaces__c_streams__long.last temp___expr_532)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 43 0 0# "inline" 
   (temp___533 : int) (temp___534 : bool)  =
  true

end

(* Module giving axioms for type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__size_t__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__size_t

 predicate dynamic_invariant #"i-cstrea.ads" 43 0 0# "inline" 
   (temp___expr_538 : BV32.t) (temp___is_init_535 : bool) (temp___do_constant_536 : bool) (temp___do_toplevel_537 : bool)  =
  (if (( temp___is_init_535 \/ (BV32.ule Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last) )) then (
   (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last temp___expr_538)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 44 0 0# "inline" 
   (temp___539 : BV32.t) (temp___540 : bool)  =
  true

end

(* Module giving axioms for type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__ssize_t__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__ssize_t

 predicate dynamic_invariant #"i-cstrea.ads" 44 0 0# "inline" 
   (temp___expr_544 : int) (temp___is_init_541 : bool) (temp___do_constant_542 : bool) (temp___do_toplevel_543 : bool)  =
  (if (( temp___is_init_541 \/ (Interfaces__c_streams__ssize_t.first <= Interfaces__c_streams__ssize_t.last) )) then (
   (Interfaces__c_streams__ssize_t.dynamic_property Interfaces__c_streams__ssize_t.first Interfaces__c_streams__ssize_t.last temp___expr_544)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 45 0 0# "inline" 
   (temp___545 : int) (temp___546 : bool)  =
  true

end

(* Module giving axioms for type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__int64

 predicate dynamic_invariant #"i-cstrea.ads" 45 0 0# "inline" 
   (temp___expr_550 : int) (temp___is_init_547 : bool) (temp___do_constant_548 : bool) (temp___do_toplevel_549 : bool)  =
  (if (( temp___is_init_547 \/ (Interfaces__c_streams__int64.first <= Interfaces__c_streams__int64.last) )) then (
   (Interfaces__c_streams__int64.dynamic_property Interfaces__c_streams__int64.first Interfaces__c_streams__int64.last temp___expr_550)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 46 0 0# "inline" 
   (temp___551 : int) (temp___552 : bool)  =
  true

end

(* Module giving axioms for type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__voids__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__content_encoding__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 46 0 0# "inline" 
   (temp___expr_556 : int) (temp___is_init_553 : bool) (temp___do_constant_554 : bool) (temp___do_toplevel_555 : bool)  =
  (if (( temp___is_init_553 \/ (Interfaces__c_streams__content_encoding.first <= Interfaces__c_streams__content_encoding.last) )) then (
   (Interfaces__c_streams__content_encoding.dynamic_property Interfaces__c_streams__content_encoding.first Interfaces__c_streams__content_encoding.last temp___expr_556)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 230 0 0# "inline" 
   (temp___557 : int) (temp___558 : bool)  =
  true

end

(* Module giving axioms for type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__text_content_encoding__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__text_content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 230 0 0# "inline" 
   (temp___expr_562 : int) (temp___is_init_559 : bool) (temp___do_constant_560 : bool) (temp___do_toplevel_561 : bool)  =
  (if (( temp___is_init_559 \/ (Interfaces__c_streams__text_content_encoding.first <= Interfaces__c_streams__text_content_encoding.last) )) then (
   (Interfaces__c_streams__text_content_encoding.dynamic_property Interfaces__c_streams__text_content_encoding.first Interfaces__c_streams__text_content_encoding.last temp___expr_562)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 248 0 0# "inline" 
   (temp___563 : int) (temp___564 : bool)  =
  true

end

(* Module giving axioms for type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__non_default_text_content_encoding__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__non_default_text_content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 248 0 0# "inline" 
   (temp___expr_568 : int) (temp___is_init_565 : bool) (temp___do_constant_566 : bool) (temp___do_toplevel_567 : bool)  =
  (if (( temp___is_init_565 \/ (Interfaces__c_streams__non_default_text_content_encoding.first <= Interfaces__c_streams__non_default_text_content_encoding.last) )) then (
   (Interfaces__c_streams__non_default_text_content_encoding.dynamic_property Interfaces__c_streams__non_default_text_content_encoding.first Interfaces__c_streams__non_default_text_content_encoding.last temp___expr_568)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 251 0 0# "inline" 
   (temp___569 : int) (temp___570 : bool)  =
  true

end

(* Module giving axioms for type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__file_mode__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__file_mode

 predicate dynamic_invariant #"i-cstrea.ads" 251 0 0# "inline" 
   (temp___expr_574 : int) (temp___is_init_571 : bool) (temp___do_constant_572 : bool) (temp___do_toplevel_573 : bool)  =
  (if (( temp___is_init_571 \/ (System__file_control_block__file_mode.first <= System__file_control_block__file_mode.last) )) then (
   (System__file_control_block__file_mode.dynamic_property System__file_control_block__file_mode.first System__file_control_block__file_mode.last temp___expr_574)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 63 0 0# "inline" 
   (temp___575 : int) (temp___576 : bool)  =
  true

end

(* Module giving axioms for type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__read_file_mode__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__read_file_mode

 predicate dynamic_invariant #"s-ficobl.ads" 63 0 0# "inline" 
   (temp___expr_580 : int) (temp___is_init_577 : bool) (temp___do_constant_578 : bool) (temp___do_toplevel_579 : bool)  =
  (if (( temp___is_init_577 \/ (System__file_control_block__read_file_mode.first <= System__file_control_block__read_file_mode.last) )) then (
   (System__file_control_block__read_file_mode.dynamic_property System__file_control_block__read_file_mode.first System__file_control_block__read_file_mode.last temp___expr_580)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 64 0 0# "inline" 
   (temp___581 : int) (temp___582 : bool)  =
  true

end

(* Module giving axioms for type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__shared_status_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__shared_status_type

 predicate dynamic_invariant #"s-ficobl.ads" 64 0 0# "inline" 
   (temp___expr_586 : int) (temp___is_init_583 : bool) (temp___do_constant_584 : bool) (temp___do_toplevel_585 : bool)  =
  (if (( temp___is_init_583 \/ (System__file_control_block__shared_status_type.first <= System__file_control_block__shared_status_type.last) )) then (
   (System__file_control_block__shared_status_type.dynamic_property System__file_control_block__shared_status_type.first System__file_control_block__shared_status_type.last temp___expr_586)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 69 0 0# "inline" 
   (temp___587 : int) (temp___588 : bool)  =
  true

end

(* Module giving axioms for type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_methodB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_encoding_method__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_encoding_method

 predicate dynamic_invariant #"s-ficobl.ads" 69 0 0# "inline" 
   (temp___expr_592 : int) (temp___is_init_589 : bool) (temp___do_constant_590 : bool) (temp___do_toplevel_591 : bool)  =
  (if (( temp___is_init_589 \/ (System__wch_con__wc_encoding_method.first <= System__wch_con__wc_encoding_method.last) )) then (
   (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last temp___expr_592)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 94 0 0# "inline" 
   (temp___593 : int) (temp___594 : bool)  =
  true

end

(* Module giving axioms for type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_esc_encoding_method__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_esc_encoding_method

 predicate dynamic_invariant #"s-wchcon.ads" 94 0 0# "inline" 
   (temp___expr_598 : int) (temp___is_init_595 : bool) (temp___do_constant_596 : bool) (temp___do_toplevel_597 : bool)  =
  (if (( temp___is_init_595 \/ (System__wch_con__wc_esc_encoding_method.first <= System__wch_con__wc_esc_encoding_method.last) )) then (
   (System__wch_con__wc_esc_encoding_method.dynamic_property System__wch_con__wc_esc_encoding_method.first System__wch_con__wc_esc_encoding_method.last temp___expr_598)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 180 0 0# "inline" 
   (temp___599 : int) (temp___600 : bool)  =
  true

end

(* Module giving axioms for type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_upper_half_encoding_method__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_upper_half_encoding_method

 predicate dynamic_invariant #"s-wchcon.ads" 180 0 0# "inline" 
   (temp___expr_604 : int) (temp___is_init_601 : bool) (temp___do_constant_602 : bool) (temp___do_toplevel_603 : bool)  =
  (if (( temp___is_init_601 \/ (System__wch_con__wc_upper_half_encoding_method.first <= System__wch_con__wc_upper_half_encoding_method.last) )) then (
   (System__wch_con__wc_upper_half_encoding_method.dynamic_property System__wch_con__wc_upper_half_encoding_method.first System__wch_con__wc_upper_half_encoding_method.last temp___expr_604)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 184 0 0# "inline" 
   (temp___605 : int) (temp___606 : bool)  =
  true

end

(* Module giving axioms for type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_type__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 predicate dynamic_invariant #"s-wchcon.ads" 184 0 0# "inline" 
   (temp___expr_610 : Ada__text_io__file_type.file_type) (temp___is_init_607 : bool) (temp___do_constant_608 : bool) (temp___do_toplevel_609 : bool)  =
  true
 
 predicate default_initial_assumption #"a-textio.ads" 52 0 0# "inline" 
   (temp___611 : Ada__text_io__file_type.file_type) (temp___612 : bool)  =
  true

end

(* Module giving axioms for type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_mode__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__file_mode

 predicate dynamic_invariant #"a-textio.ads" 52 0 0# "inline" 
   (temp___expr_616 : int) (temp___is_init_613 : bool) (temp___do_constant_614 : bool) (temp___do_toplevel_615 : bool)  =
  (if (( temp___is_init_613 \/ (Ada__text_io__file_mode.first <= Ada__text_io__file_mode.last) )) then (
   (Ada__text_io__file_mode.dynamic_property Ada__text_io__file_mode.first Ada__text_io__file_mode.last temp___expr_616)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 53 0 0# "inline" 
   (temp___617 : int) (temp___618 : bool)  =
  true

end

(* Module giving axioms for type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__TcountB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__count__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__count

 predicate dynamic_invariant #"a-textio.ads" 53 0 0# "inline" 
   (temp___expr_622 : int) (temp___is_init_619 : bool) (temp___do_constant_620 : bool) (temp___do_toplevel_621 : bool)  =
  (if (( temp___is_init_619 \/ (Ada__text_io__count.first <= Ada__text_io__count.last) )) then (
   (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last temp___expr_622)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 64 0 0# "inline" 
   (temp___623 : int) (temp___624 : bool)  =
  true

end

(* Module giving axioms for type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__positive_count__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__positive_count

 predicate dynamic_invariant #"a-textio.ads" 64 0 0# "inline" 
   (temp___expr_628 : int) (temp___is_init_625 : bool) (temp___do_constant_626 : bool) (temp___do_toplevel_627 : bool)  =
  (if (( temp___is_init_625 \/ (Ada__text_io__positive_count.first <= Ada__text_io__positive_count.last) )) then (
   (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last temp___expr_628)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 68 0 0# "inline" 
   (temp___629 : int) (temp___630 : bool)  =
  true

end

(* Module giving axioms for type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__field__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__field

 predicate dynamic_invariant #"a-textio.ads" 68 0 0# "inline" 
   (temp___expr_634 : int) (temp___is_init_631 : bool) (temp___do_constant_632 : bool) (temp___do_toplevel_633 : bool)  =
  (if (( temp___is_init_631 \/ (Ada__text_io__field.first <= Ada__text_io__field.last) )) then (
   (Ada__text_io__field.dynamic_property Ada__text_io__field.first Ada__text_io__field.last temp___expr_634)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 73 0 0# "inline" 
   (temp___635 : int) (temp___636 : bool)  =
  true

end

(* Module giving axioms for type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__number_base__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__number_base

 predicate dynamic_invariant #"a-textio.ads" 73 0 0# "inline" 
   (temp___expr_640 : int) (temp___is_init_637 : bool) (temp___do_constant_638 : bool) (temp___do_toplevel_639 : bool)  =
  (if (( temp___is_init_637 \/ (Ada__text_io__number_base.first <= Ada__text_io__number_base.last) )) then (
   (Ada__text_io__number_base.dynamic_property Ada__text_io__number_base.first Ada__text_io__number_base.last temp___expr_640)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 78 0 0# "inline" 
   (temp___641 : int) (temp___642 : bool)  =
  true

end

(* Module giving axioms for type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__type_set__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__type_set

 predicate dynamic_invariant #"a-textio.ads" 78 0 0# "inline" 
   (temp___expr_646 : int) (temp___is_init_643 : bool) (temp___do_constant_644 : bool) (temp___do_toplevel_645 : bool)  =
  (if (( temp___is_init_643 \/ (Ada__text_io__type_set.first <= Ada__text_io__type_set.last) )) then (
   (Ada__text_io__type_set.dynamic_property Ada__text_io__type_set.first Ada__text_io__type_set.last temp___expr_646)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 80 0 0# "inline" 
   (temp___647 : int) (temp___648 : bool)  =
  true

end

(* Module giving axioms for type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Tracks__track__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Tracks__track

 predicate dynamic_invariant #"a-textio.ads" 80 0 0# "inline" 
   (temp___expr_656 : Tracks__track.track) (temp___is_init_653 : bool) (temp___do_constant_654 : bool) (temp___do_toplevel_655 : bool)  =
  true
 
 predicate default_initial_assumption #"tracks.ads" 7 0 0# "inline" 
   (temp___657 : Tracks__track.track) (temp___658 : bool)  =
  ( ( ( ( ( (if ((Tracks__track.id__pred temp___657)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___657))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___657)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___657))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___657)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___657))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___657)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___657))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___657)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___657))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___657)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___657))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type

 predicate dynamic_invariant #"tracks.ads" 7 0 0# "inline" 
   (temp___expr_662 : Stations__list_tracks__data_type.data_type) (temp___is_init_659 : bool) (temp___do_constant_660 : bool) (temp___do_toplevel_661 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 22 0 0# "inline" 
   (temp___663 : Stations__list_tracks__data_type.data_type) (temp___664 : bool)  =
  ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___663)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___663)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___663)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___663)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___663)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___663)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___663))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:95 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 22 0 0# "inline" 
   (temp___expr_668 : Stations__list_tracks__data.data) (temp___is_init_665 : bool) (temp___do_constant_666 : bool) (temp___do_toplevel_667 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 95 0 0# "inline" 
   (temp___669 : Stations__list_tracks__data.data) (temp___670 : bool)  =
  ( (if ((Stations__list_tracks__data.data__pred temp___669)) then (
   (let temp___671 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___669)) in (
    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___671)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___671)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___671)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___671)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___671)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___671)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___671))) = 0)) else true) )))
  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___669)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___669))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:103 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Stations__list_tracks__list_array

 predicate dynamic_invariant #"list.ads" 95 0 0# "inline" 
   (temp___expr_675 : Stations__list_tracks__list_array.list_array) (temp___is_init_672 : bool) (temp___do_constant_673 : bool) (temp___do_toplevel_674 : bool)  =
  (if (temp___do_constant_673) then (
   true) else (
   (Stations__list_tracks__list_array.dynamic_property Standard__positive.first Standard__positive.last (Stations__list_tracks__list_array.first temp___expr_675) (Stations__list_tracks__list_array.last temp___expr_675))))

end

(* Module giving axioms for type "T4s" defined at list.ads:108 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at list.ads:108 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:105 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Array__Int__Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 103 0 0# "inline" 
   (temp___expr_680 : Stations__list_tracks__list_ptr.list_ptr) (temp___is_init_677 : bool) (temp___do_constant_678 : bool) (temp___do_toplevel_679 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 105 0 0# "inline" 
   (temp___682 : Stations__list_tracks__list_ptr.list_ptr) (temp___683 : bool)  =
  ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___682)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___682))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___682)) then (
   (let temp___684 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___682)) in (
    (forall temp___685 : int.
     (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___685) /\ (temp___685 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
      (let temp___686 = (Array__Int__Stations__list_tracks__data.get temp___684 temp___685) in (
       ( (if ((Stations__list_tracks__data.data__pred temp___686)) then (
        (let temp___687 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___686)) in (
         ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___687)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___687)) then (
          ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___687)) then (
          ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___687)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___687)) then (
          ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___687)) then (
          ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___687))) = 0)) else true) )))
       ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___686)) then (
        ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___686))) = 0)) else true) )))
     ) else true))))
  ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___682)) then (
   ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___682))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___682)) then (
   ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___682))) = 100)) else true) )

end

(* Module giving axioms for type "station" defined at stations.ads:18, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_691 : Stations__station.station) (temp___is_init_688 : bool) (temp___do_constant_689 : bool) (temp___do_toplevel_690 : bool)  =
  true
 
 predicate default_initial_assumption #"stations.ads" 18 0 0# "inline" 
   (temp___695 : Stations__station.station) (temp___696 : bool)  =
  ( ( ( ( ( (if ((Stations__station.id__pred temp___695)) then (
   ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___695))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___695)) then (
   ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___695))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___695)) then (
   ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___695))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___695)) then (
   (let temp___697 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___695)) in (
    ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___697)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___697))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___697)) then (
     (let temp___698 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___697)) in (
      (forall temp___699 : int.
       (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___699) /\ (temp___699 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
        (let temp___700 = (Array__Int__Stations__list_tracks__data.get temp___698 temp___699) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___700)) then (
          (let temp___701 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___700)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___701)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___701)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___701)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___701)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___701)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___701)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___701))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___700)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___700))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___697)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___697))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___697)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___697))) = 100)) else true) )))
  ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___695)) then (
   (let temp___702 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___695)) in (
    ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___702)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___702))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___702)) then (
     (let temp___703 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___702)) in (
      (forall temp___704 : int.
       (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___704) /\ (temp___704 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
        (let temp___705 = (Array__Int__Stations__list_tracks__data.get temp___703 temp___704) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___705)) then (
          (let temp___706 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___705)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___706)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___706)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___706)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___706)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___706)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___706)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___706))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___705)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___705))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___702)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___702))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___702)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___702))) = 100)) else true) )))
  ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___695)) then (
   (let temp___707 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___695)) in (
    ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___707)) then (
     ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___707))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___707)) then (
     (let temp___708 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___707)) in (
      (forall temp___709 : int.
       (if (( (Types__list_od__list_ptr__T4s.first <= temp___709) /\ (temp___709 <= Types__list_od__list_ptr__T4s.last) )) then (
        (let temp___710 = (Array__Int__Types__list_od__data.get temp___708 temp___709) in (
         ( (if ((Types__list_od__data.data__pred temp___710)) then (
          (let temp___711 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___710)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___711)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___711))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___711)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___711))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___710)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___710))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___707)) then (
     ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___707))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___707)) then (
     ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___707))) = 100)) else true) )))
  ) else true) )

end

(* Module giving axioms for type "T1s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T2s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at trains.ads:11, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___723
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___723 #"trains.ads" 11 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at trains.ads:12, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___724
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___724 #"trains.ads" 12 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Array__Int__Standard__character
 use        Temp___723
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 12 0 0# "inline" 
   (temp___expr_715 : Trains__train_location.train_location) (temp___is_init_712 : bool) (temp___do_constant_713 : bool) (temp___do_toplevel_714 : bool)  =
  true
 
 predicate default_initial_assumption #"trains.ads" 9 0 0# "inline" 
   (temp___721 : Trains__train_location.train_location) (temp___722 : bool)  =
  ( ( ( (if ((Trains__train_location.currentlocation__pred temp___721)) then (
   ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___721)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___721)) then (
   ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___721)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___721)) then (
   (let temp___725 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___721)) in (
    ( ( ( ( ( (if ((Tracks__track.id__pred temp___725)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___725))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___725)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___725))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___725)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___725))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___725)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___725))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___725)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___725))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___725)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___725))) = 0)) else true) )))
  ) else true) ) /\ (if ((Trains__train_location.station__pred temp___721)) then (
   (let temp___726 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___721)) in (
    ( ( ( ( ( (if ((Stations__station.id__pred temp___726)) then (
     ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___726))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___726)) then (
     ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___726))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___726)) then (
     ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___726))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___726)) then (
     (let temp___727 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___726)) in (
      ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___727)) then (
       ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___727))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___727)) then (
       (let temp___728 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___727)) in (
        (forall temp___729 : int.
         (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___729) /\ (temp___729 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
          (let temp___730 = (Array__Int__Stations__list_tracks__data.get temp___728 temp___729) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___730)) then (
            (let temp___731 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___730)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___731)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___731)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___731)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___731)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___731)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___731)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___731))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___730)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___730))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___727)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___727))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___727)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___727))) = 100)) else true) )))
    ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___726)) then (
     (let temp___732 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___726)) in (
      ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___732)) then (
       ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___732))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___732)) then (
       (let temp___733 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___732)) in (
        (forall temp___734 : int.
         (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___734) /\ (temp___734 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
          (let temp___735 = (Array__Int__Stations__list_tracks__data.get temp___733 temp___734) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___735)) then (
            (let temp___736 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___735)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___736)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___736)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___736)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___736)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___736)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___736)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___736))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___735)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___735))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___732)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___732))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___732)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___732))) = 100)) else true) )))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___726)) then (
     (let temp___737 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___726)) in (
      ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___737)) then (
       ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___737))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___737)) then (
       (let temp___738 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___737)) in (
        (forall temp___739 : int.
         (if (( (Types__list_od__list_ptr__T4s.first <= temp___739) /\ (temp___739 <= Types__list_od__list_ptr__T4s.last) )) then (
          (let temp___740 = (Array__Int__Types__list_od__data.get temp___738 temp___739) in (
           ( (if ((Types__list_od__data.data__pred temp___740)) then (
            (let temp___741 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___740)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___741)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___741))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___741)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___741))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___740)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___740))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___737)) then (
       ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___737))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___737)) then (
       ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___737))) = 100)) else true) )))
    ) else true) )))
  ) else true) )

end

(* Module giving axioms for type "train" defined at trains.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_745 : Trains__train.train) (temp___is_init_742 : bool) (temp___do_constant_743 : bool) (temp___do_toplevel_744 : bool)  =
  true
 
 predicate default_initial_assumption #"trains.ads" 17 0 0# "inline" 
   (temp___751 : Trains__train.train) (temp___752 : bool)  =
  ( ( ( ( ( (if ((Trains__train.id__pred temp___751)) then (
   ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields temp___751))) = 0)) else true) /\ (if ((Trains__train.location__pred temp___751)) then (
   (let temp___753 = (Trains__train.rec__location (Trains__train.__split_fields temp___751)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___753)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___753)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___753)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___753)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___753)) then (
     (let temp___754 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___753)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___754)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___754))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___754)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___754))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___754)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___754))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___754)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___754))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___754)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___754))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___754)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___754))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___753)) then (
     (let temp___755 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___753)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___755)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___755))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___755)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___755))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___755)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___755))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___755)) then (
       (let temp___756 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___755)) in (
        ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___756)) then (
         ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___756))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___756)) then (
         (let temp___757 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___756)) in (
          (forall temp___758 : int.
           (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___758) /\ (temp___758 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
            (let temp___759 = (Array__Int__Stations__list_tracks__data.get temp___757 temp___758) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___759)) then (
              (let temp___760 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___759)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___760)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___760)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___760)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___760)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___760)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___760)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___760))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___759)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___759))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___756)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___756))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___756)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___756))) = 100)) else true) )))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___755)) then (
       (let temp___761 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___755)) in (
        ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___761)) then (
         ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___761))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___761)) then (
         (let temp___762 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___761)) in (
          (forall temp___763 : int.
           (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___763) /\ (temp___763 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
            (let temp___764 = (Array__Int__Stations__list_tracks__data.get temp___762 temp___763) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___764)) then (
              (let temp___765 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___764)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___765)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___765)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___765)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___765)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___765)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___765)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___765))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___764)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___764))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___761)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___761))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___761)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___761))) = 100)) else true) )))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___755)) then (
       (let temp___766 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___755)) in (
        ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___766)) then (
         ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___766))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___766)) then (
         (let temp___767 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___766)) in (
          (forall temp___768 : int.
           (if (( (Types__list_od__list_ptr__T4s.first <= temp___768) /\ (temp___768 <= Types__list_od__list_ptr__T4s.last) )) then (
            (let temp___769 = (Array__Int__Types__list_od__data.get temp___767 temp___768) in (
             ( (if ((Types__list_od__data.data__pred temp___769)) then (
              (let temp___770 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___769)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___770)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___770))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___770)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___770))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___769)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___769))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___766)) then (
         ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___766))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___766)) then (
         ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___766))) = 100)) else true) )))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Trains__train.origin__pred temp___751)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields temp___751))) = 0)) else true) ) /\ (if ((Trains__train.destination__pred temp___751)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields temp___751))) = 0)) else true) ) /\ (if ((Trains__train.state__pred temp___751)) then (
   ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields temp___751))) = 3)) else true) ) /\ (if ((Trains__train.start_run_time__pred temp___751)) then (
   ((Types__timetable.to_rep (Trains__train.rec__start_run_time (Trains__train.__split_fields temp___751))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:22 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 17 0 0# "inline" 
   (temp___expr_774 : Railsystems__list_trains__data_type.data_type) (temp___is_init_771 : bool) (temp___do_constant_772 : bool) (temp___do_toplevel_773 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 22 0 0# "inline" 
   (temp___780 : Railsystems__list_trains__data_type.data_type) (temp___781 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___780)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___780))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___780)) then (
   (let temp___782 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___780)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___782)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___782)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___782)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___782)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___782)) then (
     (let temp___783 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___782)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___783)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___783))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___783)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___783))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___783)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___783))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___783)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___783))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___783)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___783))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___783)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___783))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___782)) then (
     (let temp___784 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___782)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___784)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___784))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___784)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___784))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___784)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___784))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___784)) then (
       (let temp___785 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___784)) in (
        ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___785)) then (
         ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___785))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___785)) then (
         (let temp___786 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___785)) in (
          (forall temp___787 : int.
           (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___787) /\ (temp___787 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
            (let temp___788 = (Array__Int__Stations__list_tracks__data.get temp___786 temp___787) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___788)) then (
              (let temp___789 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___788)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___789)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___789)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___789)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___789)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___789)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___789)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___789))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___788)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___788))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___785)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___785))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___785)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___785))) = 100)) else true) )))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___784)) then (
       (let temp___790 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___784)) in (
        ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___790)) then (
         ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___790))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___790)) then (
         (let temp___791 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___790)) in (
          (forall temp___792 : int.
           (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___792) /\ (temp___792 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
            (let temp___793 = (Array__Int__Stations__list_tracks__data.get temp___791 temp___792) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___793)) then (
              (let temp___794 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___793)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___794)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___794)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___794)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___794)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___794)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___794)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___794))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___793)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___793))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___790)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___790))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___790)) then (
         ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___790))) = 100)) else true) )))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___784)) then (
       (let temp___795 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___784)) in (
        ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___795)) then (
         ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___795))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___795)) then (
         (let temp___796 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___795)) in (
          (forall temp___797 : int.
           (if (( (Types__list_od__list_ptr__T4s.first <= temp___797) /\ (temp___797 <= Types__list_od__list_ptr__T4s.last) )) then (
            (let temp___798 = (Array__Int__Types__list_od__data.get temp___796 temp___797) in (
             ( (if ((Types__list_od__data.data__pred temp___798)) then (
              (let temp___799 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___798)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___799)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___799))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___799)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___799))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___798)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___798))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___795)) then (
         ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___795))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___795)) then (
         ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___795))) = 100)) else true) )))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___780)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___780))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___780)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___780))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___780)) then (
   ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___780))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___780)) then (
   ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___780))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:95 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 22 0 0# "inline" 
   (temp___expr_803 : Railsystems__list_trains__data.data) (temp___is_init_800 : bool) (temp___do_constant_801 : bool) (temp___do_toplevel_802 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 95 0 0# "inline" 
   (temp___809 : Railsystems__list_trains__data.data) (temp___810 : bool)  =
  ( (if ((Railsystems__list_trains__data.data__pred temp___809)) then (
   (let temp___811 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___809)) in (
    ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___811)) then (
     ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___811))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___811)) then (
     (let temp___812 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___811)) in (
      ( ( ( (if ((Trains__train_location.currentlocation__pred temp___812)) then (
       ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___812)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___812)) then (
       ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___812)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___812)) then (
       (let temp___813 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___812)) in (
        ( ( ( ( ( (if ((Tracks__track.id__pred temp___813)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___813))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___813)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___813))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___813)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___813))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___813)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___813))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___813)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___813))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___813)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___813))) = 0)) else true) )))
      ) else true) ) /\ (if ((Trains__train_location.station__pred temp___812)) then (
       (let temp___814 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___812)) in (
        ( ( ( ( ( (if ((Stations__station.id__pred temp___814)) then (
         ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___814))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___814)) then (
         ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___814))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___814)) then (
         ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___814))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___814)) then (
         (let temp___815 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___814)) in (
          ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___815)) then (
           ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___815))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___815)) then (
           (let temp___816 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___815)) in (
            (forall temp___817 : int.
             (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___817) /\ (temp___817 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
              (let temp___818 = (Array__Int__Stations__list_tracks__data.get temp___816 temp___817) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___818)) then (
                (let temp___819 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___818)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___819)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___819)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___819)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___819)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___819)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___819)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___819))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___818)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___818))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___815)) then (
           ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___815))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___815)) then (
           ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___815))) = 100)) else true) )))
        ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___814)) then (
         (let temp___820 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___814)) in (
          ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___820)) then (
           ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___820))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___820)) then (
           (let temp___821 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___820)) in (
            (forall temp___822 : int.
             (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___822) /\ (temp___822 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
              (let temp___823 = (Array__Int__Stations__list_tracks__data.get temp___821 temp___822) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___823)) then (
                (let temp___824 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___823)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___824)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___824)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___824)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___824)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___824)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___824)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___824))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___823)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___823))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___820)) then (
           ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___820))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___820)) then (
           ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___820))) = 100)) else true) )))
        ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___814)) then (
         (let temp___825 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___814)) in (
          ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___825)) then (
           ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___825))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___825)) then (
           (let temp___826 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___825)) in (
            (forall temp___827 : int.
             (if (( (Types__list_od__list_ptr__T4s.first <= temp___827) /\ (temp___827 <= Types__list_od__list_ptr__T4s.last) )) then (
              (let temp___828 = (Array__Int__Types__list_od__data.get temp___826 temp___827) in (
               ( (if ((Types__list_od__data.data__pred temp___828)) then (
                (let temp___829 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___828)) in (
                 ( (if ((Types__list_od__data_type.origin__pred temp___829)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___829))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___829)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___829))) = 0)) else true) )))
               ) else true) /\ (if ((Types__list_od__data.id__pred temp___828)) then (
                ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___828))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___825)) then (
           ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___825))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___825)) then (
           ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___825))) = 100)) else true) )))
        ) else true) )))
      ) else true) )))
    ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___811)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___811))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___811)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___811))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___811)) then (
     ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___811))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___811)) then (
     ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___811))) = 0)) else true) )))
  ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___809)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___809))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:103 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Railsystems__list_trains__list_array

 predicate dynamic_invariant #"list.ads" 95 0 0# "inline" 
   (temp___expr_833 : Railsystems__list_trains__list_array.list_array) (temp___is_init_830 : bool) (temp___do_constant_831 : bool) (temp___do_toplevel_832 : bool)  =
  (if (temp___do_constant_831) then (
   true) else (
   (Railsystems__list_trains__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_trains__list_array.first temp___expr_833) (Railsystems__list_trains__list_array.last temp___expr_833))))

end

(* Module giving axioms for type "T4s" defined at list.ads:108 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at list.ads:108 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:105 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Temp___723
 use        Temp___724
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 103 0 0# "inline" 
   (temp___expr_843 : Railsystems__list_trains__list_ptr.list_ptr) (temp___is_init_840 : bool) (temp___do_constant_841 : bool) (temp___do_toplevel_842 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 105 0 0# "inline" 
   (temp___850 : Railsystems__list_trains__list_ptr.list_ptr) (temp___851 : bool)  =
  ( ( ( (if ((Railsystems__list_trains__list_ptr.size__pred temp___850)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__list_ptr.rec__size (Railsystems__list_trains__list_ptr.__split_fields temp___850))) = 0)) else true) /\ (if ((Railsystems__list_trains__list_ptr.elements__pred temp___850)) then (
   (let temp___852 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___850)) in (
    (forall temp___853 : int.
     (if (( (Railsystems__list_trains__list_ptr__T4s.first <= temp___853) /\ (temp___853 <= Railsystems__list_trains__list_ptr__T4s.last) )) then (
      (let temp___854 = (Array__Int__Railsystems__list_trains__data.get temp___852 temp___853) in (
       ( (if ((Railsystems__list_trains__data.data__pred temp___854)) then (
        (let temp___855 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___854)) in (
         ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___855)) then (
          ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___855))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___855)) then (
          (let temp___856 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___855)) in (
           ( ( ( (if ((Trains__train_location.currentlocation__pred temp___856)) then (
            ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___856)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___856)) then (
            ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___856)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___856)) then (
            (let temp___857 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___856)) in (
             ( ( ( ( ( (if ((Tracks__track.id__pred temp___857)) then (
              ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___857))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___857)) then (
              ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___857))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___857)) then (
              ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___857))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___857)) then (
              ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___857))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___857)) then (
              ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___857))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___857)) then (
              ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___857))) = 0)) else true) )))
           ) else true) ) /\ (if ((Trains__train_location.station__pred temp___856)) then (
            (let temp___858 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___856)) in (
             ( ( ( ( ( (if ((Stations__station.id__pred temp___858)) then (
              ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___858))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___858)) then (
              ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___858))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___858)) then (
              ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___858))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___858)) then (
              (let temp___859 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___858)) in (
               ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___859)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___859))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___859)) then (
                (let temp___860 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___859)) in (
                 (forall temp___861 : int.
                  (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___861) /\ (temp___861 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                   (let temp___862 = (Array__Int__Stations__list_tracks__data.get temp___860 temp___861) in (
                    ( (if ((Stations__list_tracks__data.data__pred temp___862)) then (
                     (let temp___863 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___862)) in (
                      ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___863)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___863)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___863)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___863)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___863)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___863)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___863))) = 0)) else true) )))
                    ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___862)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___862))) = 0)) else true) )))
                  ) else true))))
               ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___859)) then (
                ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___859))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___859)) then (
                ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___859))) = 100)) else true) )))
             ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___858)) then (
              (let temp___864 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___858)) in (
               ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___864)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___864))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___864)) then (
                (let temp___865 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___864)) in (
                 (forall temp___866 : int.
                  (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___866) /\ (temp___866 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                   (let temp___867 = (Array__Int__Stations__list_tracks__data.get temp___865 temp___866) in (
                    ( (if ((Stations__list_tracks__data.data__pred temp___867)) then (
                     (let temp___868 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___867)) in (
                      ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___868)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___868)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___868)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___868)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___868)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___868)) then (
                       ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___868))) = 0)) else true) )))
                    ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___867)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___867))) = 0)) else true) )))
                  ) else true))))
               ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___864)) then (
                ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___864))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___864)) then (
                ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___864))) = 100)) else true) )))
             ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___858)) then (
              (let temp___869 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___858)) in (
               ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___869)) then (
                ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___869))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___869)) then (
                (let temp___870 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___869)) in (
                 (forall temp___871 : int.
                  (if (( (Types__list_od__list_ptr__T4s.first <= temp___871) /\ (temp___871 <= Types__list_od__list_ptr__T4s.last) )) then (
                   (let temp___872 = (Array__Int__Types__list_od__data.get temp___870 temp___871) in (
                    ( (if ((Types__list_od__data.data__pred temp___872)) then (
                     (let temp___873 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___872)) in (
                      ( (if ((Types__list_od__data_type.origin__pred temp___873)) then (
                       ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___873))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___873)) then (
                       ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___873))) = 0)) else true) )))
                    ) else true) /\ (if ((Types__list_od__data.id__pred temp___872)) then (
                     ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___872))) = 0)) else true) )))
                  ) else true))))
               ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___869)) then (
                ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___869))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___869)) then (
                ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___869))) = 100)) else true) )))
             ) else true) )))
           ) else true) )))
         ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___855)) then (
          ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___855))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___855)) then (
          ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___855))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___855)) then (
          ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___855))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___855)) then (
          ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___855))) = 0)) else true) )))
       ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___854)) then (
        ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___854))) = 0)) else true) )))
     ) else true))))
  ) else true) ) /\ (if ((Railsystems__list_trains__list_ptr.head__pred temp___850)) then (
   ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__head (Railsystems__list_trains__list_ptr.__split_fields temp___850))) = 1)) else true) ) /\ (if ((Railsystems__list_trains__list_ptr.list_max_size__pred temp___850)) then (
   ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__list_max_size (Railsystems__list_trains__list_ptr.__split_fields temp___850))) = 100)) else true) )

end

(* Module giving axioms for type "T38s" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__contains__L_1__T38s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T47s" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__get_element_by_id__L_2__T47s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T50s" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__replace_by_id__L_3__T50s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "data_type" defined at list.ads:22 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__list_stations__data_type
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_877 : Railsystems__list_stations__data_type.data_type) (temp___is_init_874 : bool) (temp___do_constant_875 : bool) (temp___do_toplevel_876 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 22 0 0# "inline" 
   (temp___881 : Railsystems__list_stations__data_type.data_type) (temp___882 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___881)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___881))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___881)) then (
   ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___881))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___881)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___881))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___881)) then (
   (let temp___883 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___881)) in (
    ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___883)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___883))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___883)) then (
     (let temp___884 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___883)) in (
      (forall temp___885 : int.
       (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___885) /\ (temp___885 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
        (let temp___886 = (Array__Int__Stations__list_tracks__data.get temp___884 temp___885) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___886)) then (
          (let temp___887 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___886)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___887)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___887)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___887)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___887)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___887)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___887)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___887))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___886)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___886))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___883)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___883))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___883)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___883))) = 100)) else true) )))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___881)) then (
   (let temp___888 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___881)) in (
    ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___888)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___888))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___888)) then (
     (let temp___889 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___888)) in (
      (forall temp___890 : int.
       (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___890) /\ (temp___890 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
        (let temp___891 = (Array__Int__Stations__list_tracks__data.get temp___889 temp___890) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___891)) then (
          (let temp___892 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___891)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___892)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___892)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___892)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___892)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___892)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___892)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___892))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___891)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___891))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___888)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___888))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___888)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___888))) = 100)) else true) )))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___881)) then (
   (let temp___893 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___881)) in (
    ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___893)) then (
     ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___893))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___893)) then (
     (let temp___894 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___893)) in (
      (forall temp___895 : int.
       (if (( (Types__list_od__list_ptr__T4s.first <= temp___895) /\ (temp___895 <= Types__list_od__list_ptr__T4s.last) )) then (
        (let temp___896 = (Array__Int__Types__list_od__data.get temp___894 temp___895) in (
         ( (if ((Types__list_od__data.data__pred temp___896)) then (
          (let temp___897 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___896)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___897)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___897))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___897)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___897))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___896)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___896))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___893)) then (
     ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___893))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___893)) then (
     ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___893))) = 100)) else true) )))
  ) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:95 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_901 : Railsystems__list_stations__data.data) (temp___is_init_898 : bool) (temp___do_constant_899 : bool) (temp___do_toplevel_900 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 95 0 0# "inline" 
   (temp___905 : Railsystems__list_stations__data.data) (temp___906 : bool)  =
  ( (if ((Railsystems__list_stations__data.data__pred temp___905)) then (
   (let temp___907 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___905)) in (
    ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___907)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___907))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___907)) then (
     ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___907))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___907)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___907))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___907)) then (
     (let temp___908 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___907)) in (
      ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___908)) then (
       ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___908))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___908)) then (
       (let temp___909 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___908)) in (
        (forall temp___910 : int.
         (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___910) /\ (temp___910 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
          (let temp___911 = (Array__Int__Stations__list_tracks__data.get temp___909 temp___910) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___911)) then (
            (let temp___912 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___911)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___912)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___912)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___912)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___912)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___912)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___912)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___912))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___911)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___911))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___908)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___908))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___908)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___908))) = 100)) else true) )))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___907)) then (
     (let temp___913 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___907)) in (
      ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___913)) then (
       ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___913))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___913)) then (
       (let temp___914 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___913)) in (
        (forall temp___915 : int.
         (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___915) /\ (temp___915 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
          (let temp___916 = (Array__Int__Stations__list_tracks__data.get temp___914 temp___915) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___916)) then (
            (let temp___917 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___916)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___917)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___917)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___917)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___917)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___917)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___917)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___917))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___916)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___916))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___913)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___913))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___913)) then (
       ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___913))) = 100)) else true) )))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___907)) then (
     (let temp___918 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___907)) in (
      ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___918)) then (
       ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___918))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___918)) then (
       (let temp___919 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___918)) in (
        (forall temp___920 : int.
         (if (( (Types__list_od__list_ptr__T4s.first <= temp___920) /\ (temp___920 <= Types__list_od__list_ptr__T4s.last) )) then (
          (let temp___921 = (Array__Int__Types__list_od__data.get temp___919 temp___920) in (
           ( (if ((Types__list_od__data.data__pred temp___921)) then (
            (let temp___922 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___921)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___922)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___922))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___922)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___922))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___921)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___921))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___918)) then (
       ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___918))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___918)) then (
       ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___918))) = 100)) else true) )))
    ) else true) )))
  ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___905)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___905))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:103 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Railsystems__list_stations__list_array

 predicate dynamic_invariant #"list.ads" 95 0 0# "inline" 
   (temp___expr_926 : Railsystems__list_stations__list_array.list_array) (temp___is_init_923 : bool) (temp___do_constant_924 : bool) (temp___do_toplevel_925 : bool)  =
  (if (temp___do_constant_924) then (
   true) else (
   (Railsystems__list_stations__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_stations__list_array.first temp___expr_926) (Railsystems__list_stations__list_array.last temp___expr_926))))

end

(* Module giving axioms for type "T9s" defined at list.ads:108 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at list.ads:108 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:105 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 103 0 0# "inline" 
   (temp___expr_934 : Railsystems__list_stations__list_ptr.list_ptr) (temp___is_init_931 : bool) (temp___do_constant_932 : bool) (temp___do_toplevel_933 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 105 0 0# "inline" 
   (temp___939 : Railsystems__list_stations__list_ptr.list_ptr) (temp___940 : bool)  =
  ( ( ( (if ((Railsystems__list_stations__list_ptr.size__pred temp___939)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__list_ptr.rec__size (Railsystems__list_stations__list_ptr.__split_fields temp___939))) = 0)) else true) /\ (if ((Railsystems__list_stations__list_ptr.elements__pred temp___939)) then (
   (let temp___941 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___939)) in (
    (forall temp___942 : int.
     (if (( (Railsystems__list_stations__list_ptr__T9s.first <= temp___942) /\ (temp___942 <= Railsystems__list_stations__list_ptr__T9s.last) )) then (
      (let temp___943 = (Array__Int__Railsystems__list_stations__data.get temp___941 temp___942) in (
       ( (if ((Railsystems__list_stations__data.data__pred temp___943)) then (
        (let temp___944 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___943)) in (
         ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___944)) then (
          ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___944))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___944)) then (
          ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___944))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___944)) then (
          ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___944))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___944)) then (
          (let temp___945 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___944)) in (
           ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___945)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___945))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___945)) then (
            (let temp___946 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___945)) in (
             (forall temp___947 : int.
              (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___947) /\ (temp___947 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
               (let temp___948 = (Array__Int__Stations__list_tracks__data.get temp___946 temp___947) in (
                ( (if ((Stations__list_tracks__data.data__pred temp___948)) then (
                 (let temp___949 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___948)) in (
                  ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___949)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___949)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___949)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___949)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___949)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___949)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___949))) = 0)) else true) )))
                ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___948)) then (
                 ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___948))) = 0)) else true) )))
              ) else true))))
           ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___945)) then (
            ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___945))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___945)) then (
            ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___945))) = 100)) else true) )))
         ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___944)) then (
          (let temp___950 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___944)) in (
           ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___950)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___950))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___950)) then (
            (let temp___951 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___950)) in (
             (forall temp___952 : int.
              (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___952) /\ (temp___952 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
               (let temp___953 = (Array__Int__Stations__list_tracks__data.get temp___951 temp___952) in (
                ( (if ((Stations__list_tracks__data.data__pred temp___953)) then (
                 (let temp___954 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___953)) in (
                  ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___954)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___954)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___954)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___954)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___954)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___954)) then (
                   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___954))) = 0)) else true) )))
                ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___953)) then (
                 ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___953))) = 0)) else true) )))
              ) else true))))
           ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___950)) then (
            ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___950))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___950)) then (
            ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___950))) = 100)) else true) )))
         ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___944)) then (
          (let temp___955 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___944)) in (
           ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___955)) then (
            ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___955))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___955)) then (
            (let temp___956 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___955)) in (
             (forall temp___957 : int.
              (if (( (Types__list_od__list_ptr__T4s.first <= temp___957) /\ (temp___957 <= Types__list_od__list_ptr__T4s.last) )) then (
               (let temp___958 = (Array__Int__Types__list_od__data.get temp___956 temp___957) in (
                ( (if ((Types__list_od__data.data__pred temp___958)) then (
                 (let temp___959 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___958)) in (
                  ( (if ((Types__list_od__data_type.origin__pred temp___959)) then (
                   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___959))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___959)) then (
                   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___959))) = 0)) else true) )))
                ) else true) /\ (if ((Types__list_od__data.id__pred temp___958)) then (
                 ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___958))) = 0)) else true) )))
              ) else true))))
           ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___955)) then (
            ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___955))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___955)) then (
            ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___955))) = 100)) else true) )))
         ) else true) )))
       ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___943)) then (
        ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___943))) = 0)) else true) )))
     ) else true))))
  ) else true) ) /\ (if ((Railsystems__list_stations__list_ptr.head__pred temp___939)) then (
   ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__head (Railsystems__list_stations__list_ptr.__split_fields temp___939))) = 1)) else true) ) /\ (if ((Railsystems__list_stations__list_ptr.list_max_size__pred temp___939)) then (
   ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__list_max_size (Railsystems__list_stations__list_ptr.__split_fields temp___939))) = 100)) else true) )

end

(* Module giving axioms for type "T53s" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__contains__L_1__T53s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T62s" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__get_element_by_id__L_2__T62s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T65s" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__replace_by_id__L_3__T65s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "railsystem" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__railsystem
 use        Temp___723
 use        Temp___724
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 105 0 0# "inline" 
   (temp___expr_963 : Railsystems__railsystem.railsystem) (temp___is_init_960 : bool) (temp___do_constant_961 : bool) (temp___do_toplevel_962 : bool)  =
  true
 
 predicate default_initial_assumption #"railsystems.ads" 29 0 0# "inline" 
   (temp___975 : Railsystems__railsystem.railsystem) (temp___976 : bool)  =
  ( ( (if ((Railsystems__railsystem.all_trains__pred temp___975)) then (
   (let temp___977 = (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___975)) in (
    ( ( ( (if ((Railsystems__list_trains__list_ptr.size__pred temp___977)) then (
     ((Standard__natural.to_rep (Railsystems__list_trains__list_ptr.rec__size (Railsystems__list_trains__list_ptr.__split_fields temp___977))) = 0)) else true) /\ (if ((Railsystems__list_trains__list_ptr.elements__pred temp___977)) then (
     (let temp___978 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___977)) in (
      (forall temp___979 : int.
       (if (( (Railsystems__list_trains__list_ptr__T4s.first <= temp___979) /\ (temp___979 <= Railsystems__list_trains__list_ptr__T4s.last) )) then (
        (let temp___980 = (Array__Int__Railsystems__list_trains__data.get temp___978 temp___979) in (
         ( (if ((Railsystems__list_trains__data.data__pred temp___980)) then (
          (let temp___981 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___980)) in (
           ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___981)) then (
            ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___981))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___981)) then (
            (let temp___982 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___981)) in (
             ( ( ( (if ((Trains__train_location.currentlocation__pred temp___982)) then (
              ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___982)) = Temp___723.temp___723)) else true) /\ (if ((Trains__train_location.none__pred temp___982)) then (
              ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___982)) = Temp___724.temp___724)) else true) ) /\ (if ((Trains__train_location.track__pred temp___982)) then (
              (let temp___983 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___982)) in (
               ( ( ( ( ( (if ((Tracks__track.id__pred temp___983)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___983))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___983)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___983))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___983)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___983))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___983)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___983))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___983)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___983))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___983)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___983))) = 0)) else true) )))
             ) else true) ) /\ (if ((Trains__train_location.station__pred temp___982)) then (
              (let temp___984 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___982)) in (
               ( ( ( ( ( (if ((Stations__station.id__pred temp___984)) then (
                ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___984))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___984)) then (
                ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___984))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___984)) then (
                ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___984))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___984)) then (
                (let temp___985 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___984)) in (
                 ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___985)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___985))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___985)) then (
                  (let temp___986 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___985)) in (
                   (forall temp___987 : int.
                    (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___987) /\ (temp___987 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                     (let temp___988 = (Array__Int__Stations__list_tracks__data.get temp___986 temp___987) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___988)) then (
                       (let temp___989 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___988)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___989)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___989)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___989)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___989)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___989)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___989)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___989))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___988)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___988))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___985)) then (
                  ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___985))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___985)) then (
                  ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___985))) = 100)) else true) )))
               ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___984)) then (
                (let temp___990 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___984)) in (
                 ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___990)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___990))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___990)) then (
                  (let temp___991 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___990)) in (
                   (forall temp___992 : int.
                    (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___992) /\ (temp___992 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                     (let temp___993 = (Array__Int__Stations__list_tracks__data.get temp___991 temp___992) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___993)) then (
                       (let temp___994 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___993)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___994)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___994)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___994)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___994)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___994)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___994)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___994))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___993)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___993))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___990)) then (
                  ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___990))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___990)) then (
                  ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___990))) = 100)) else true) )))
               ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___984)) then (
                (let temp___995 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___984)) in (
                 ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___995)) then (
                  ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___995))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___995)) then (
                  (let temp___996 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___995)) in (
                   (forall temp___997 : int.
                    (if (( (Types__list_od__list_ptr__T4s.first <= temp___997) /\ (temp___997 <= Types__list_od__list_ptr__T4s.last) )) then (
                     (let temp___998 = (Array__Int__Types__list_od__data.get temp___996 temp___997) in (
                      ( (if ((Types__list_od__data.data__pred temp___998)) then (
                       (let temp___999 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___998)) in (
                        ( (if ((Types__list_od__data_type.origin__pred temp___999)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___999))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___999)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___999))) = 0)) else true) )))
                      ) else true) /\ (if ((Types__list_od__data.id__pred temp___998)) then (
                       ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___998))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___995)) then (
                  ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___995))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___995)) then (
                  ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___995))) = 100)) else true) )))
               ) else true) )))
             ) else true) )))
           ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___981)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___981))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___981)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___981))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___981)) then (
            ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___981))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___981)) then (
            ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___981))) = 0)) else true) )))
         ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___980)) then (
          ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___980))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__list_trains__list_ptr.head__pred temp___977)) then (
     ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__head (Railsystems__list_trains__list_ptr.__split_fields temp___977))) = 1)) else true) ) /\ (if ((Railsystems__list_trains__list_ptr.list_max_size__pred temp___977)) then (
     ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__list_max_size (Railsystems__list_trains__list_ptr.__split_fields temp___977))) = 100)) else true) )))
  ) else true) /\ (if ((Railsystems__railsystem.all_stations__pred temp___975)) then (
   (let temp___1000 = (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___975)) in (
    ( ( ( (if ((Railsystems__list_stations__list_ptr.size__pred temp___1000)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__list_ptr.rec__size (Railsystems__list_stations__list_ptr.__split_fields temp___1000))) = 0)) else true) /\ (if ((Railsystems__list_stations__list_ptr.elements__pred temp___1000)) then (
     (let temp___1001 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___1000)) in (
      (forall temp___1002 : int.
       (if (( (Railsystems__list_stations__list_ptr__T9s.first <= temp___1002) /\ (temp___1002 <= Railsystems__list_stations__list_ptr__T9s.last) )) then (
        (let temp___1003 = (Array__Int__Railsystems__list_stations__data.get temp___1001 temp___1002) in (
         ( (if ((Railsystems__list_stations__data.data__pred temp___1003)) then (
          (let temp___1004 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___1003)) in (
           ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___1004)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___1004))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___1004)) then (
            ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___1004))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___1004)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___1004))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___1004)) then (
            (let temp___1005 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___1004)) in (
             ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___1005)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___1005))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___1005)) then (
              (let temp___1006 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___1005)) in (
               (forall temp___1007 : int.
                (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___1007) /\ (temp___1007 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                 (let temp___1008 = (Array__Int__Stations__list_tracks__data.get temp___1006 temp___1007) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___1008)) then (
                   (let temp___1009 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___1008)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___1009)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___1009)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___1009)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___1009)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___1009)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___1009)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___1009))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___1008)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___1008))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___1005)) then (
              ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___1005))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___1005)) then (
              ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___1005))) = 100)) else true) )))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___1004)) then (
            (let temp___1010 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___1004)) in (
             ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___1010)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___1010))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___1010)) then (
              (let temp___1011 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___1010)) in (
               (forall temp___1012 : int.
                (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___1012) /\ (temp___1012 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
                 (let temp___1013 = (Array__Int__Stations__list_tracks__data.get temp___1011 temp___1012) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___1013)) then (
                   (let temp___1014 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___1013)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___1014)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___1014)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___1014)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___1014)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___1014)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___1014)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___1014))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___1013)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___1013))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___1010)) then (
              ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___1010))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___1010)) then (
              ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___1010))) = 100)) else true) )))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___1004)) then (
            (let temp___1015 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___1004)) in (
             ( ( ( (if ((Types__list_od__list_ptr.size__pred temp___1015)) then (
              ((Standard__natural.to_rep (Types__list_od__list_ptr.rec__size (Types__list_od__list_ptr.__split_fields temp___1015))) = 0)) else true) /\ (if ((Types__list_od__list_ptr.elements__pred temp___1015)) then (
              (let temp___1016 = (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___1015)) in (
               (forall temp___1017 : int.
                (if (( (Types__list_od__list_ptr__T4s.first <= temp___1017) /\ (temp___1017 <= Types__list_od__list_ptr__T4s.last) )) then (
                 (let temp___1018 = (Array__Int__Types__list_od__data.get temp___1016 temp___1017) in (
                  ( (if ((Types__list_od__data.data__pred temp___1018)) then (
                   (let temp___1019 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___1018)) in (
                    ( (if ((Types__list_od__data_type.origin__pred temp___1019)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___1019))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___1019)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___1019))) = 0)) else true) )))
                  ) else true) /\ (if ((Types__list_od__data.id__pred temp___1018)) then (
                   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___1018))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Types__list_od__list_ptr.head__pred temp___1015)) then (
              ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__head (Types__list_od__list_ptr.__split_fields temp___1015))) = 1)) else true) ) /\ (if ((Types__list_od__list_ptr.list_max_size__pred temp___1015)) then (
              ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__list_max_size (Types__list_od__list_ptr.__split_fields temp___1015))) = 100)) else true) )))
           ) else true) )))
         ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___1003)) then (
          ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___1003))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__list_stations__list_ptr.head__pred temp___1000)) then (
     ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__head (Railsystems__list_stations__list_ptr.__split_fields temp___1000))) = 1)) else true) ) /\ (if ((Railsystems__list_stations__list_ptr.list_max_size__pred temp___1000)) then (
     ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__list_max_size (Railsystems__list_stations__list_ptr.__split_fields temp___1000))) = 100)) else true) )))
  ) else true) ) /\ (if ((Railsystems__railsystem.all_tracks__pred temp___975)) then (
   (let temp___1020 = (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___975)) in (
    ( ( ( (if ((Stations__list_tracks__list_ptr.size__pred temp___1020)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__list_ptr.rec__size (Stations__list_tracks__list_ptr.__split_fields temp___1020))) = 0)) else true) /\ (if ((Stations__list_tracks__list_ptr.elements__pred temp___1020)) then (
     (let temp___1021 = (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___1020)) in (
      (forall temp___1022 : int.
       (if (( (Stations__list_tracks__list_ptr__T4s.first <= temp___1022) /\ (temp___1022 <= Stations__list_tracks__list_ptr__T4s.last) )) then (
        (let temp___1023 = (Array__Int__Stations__list_tracks__data.get temp___1021 temp___1022) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___1023)) then (
          (let temp___1024 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___1023)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___1024)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___1024)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___1024)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___1024)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___1024)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___1024)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___1024))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___1023)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___1023))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__list_tracks__list_ptr.head__pred temp___1020)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__head (Stations__list_tracks__list_ptr.__split_fields temp___1020))) = 1)) else true) ) /\ (if ((Stations__list_tracks__list_ptr.list_max_size__pred temp___1020)) then (
     ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__list_max_size (Stations__list_tracks__list_ptr.__split_fields temp___1020))) = 100)) else true) )))
  ) else true) )

end

(* Module giving axioms for type "T23s" defined at railsystems.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrain__L22s__T23s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T25s" defined at railsystems.ads:59, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrack__L24s__T25s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T27s" defined at railsystems.ads:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addstation__L26s__T27s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T29s" defined at railsystems.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addstation__L28s__T29s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T34s" defined at railsystems.ads:111, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__T34s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T32s" defined at railsystems.ads:113, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L31s__T32s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at railsystems.ads:111, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1025
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1025 #"railsystems.ads" 111 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "T36s" defined at railsystems.ads:142, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__preparetrain__L35s__T36s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1b" defined at railsystems.adb:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T1b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3b" defined at railsystems.adb:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T3b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4b" defined at railsystems.adb:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T4b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5b" defined at railsystems.adb:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T5b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6b" defined at railsystems.adb:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T6b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7b" defined at railsystems.adb:71, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T7b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8b" defined at railsystems.adb:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T8b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9b" defined at railsystems.adb:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T9b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10b" defined at railsystems.adb:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T10b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11b" defined at railsystems.adb:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_2__T11b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12b" defined at railsystems.adb:87, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T12b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13b" defined at railsystems.adb:96, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T13b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14b" defined at railsystems.adb:117, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T14b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T15b" defined at railsystems.adb:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T15b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T16b" defined at railsystems.adb:120, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T16b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T17b" defined at railsystems.adb:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T17b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T18b" defined at railsystems.adb:123, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L_1__T18b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T19b" defined at railsystems.adb:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__preparetrain__T19b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T21b" defined at railsystems.adb:192, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__getstationbyname__L_3__T21b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T25b" defined at railsystems.adb:217, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__gettrackbyname__L_4__T25b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T30b" defined at railsystems.adb:323, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__replacetrack__L_5__T30b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T32b" defined at railsystems.adb:345, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__replacetrain__L_6__T32b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T34b" defined at railsystems.adb:362, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__replacestation__L_7__T34b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T36b" defined at railsystems.adb:392, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__T36b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T38b" defined at railsystems.adb:395, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T40b" defined at railsystems.adb:415, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at railsystems.adb:96, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1320
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1320 #"railsystems.adb" 96 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:117, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1343
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1343 #"railsystems.adb" 117 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1344
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1344 #"railsystems.adb" 119 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:120, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1345
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1345 #"railsystems.adb" 120 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:121, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1346
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1346 #"railsystems.adb" 121 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:123, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1347
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1347 #"railsystems.adb" 123 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:87, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1348
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1348 #"railsystems.adb" 87 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:50, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1355
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1355 #"railsystems.adb" 50 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:69, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1381
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1381 #"railsystems.adb" 69 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:70, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1382
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1382 #"railsystems.adb" 70 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:71, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1383
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1383 #"railsystems.adb" 71 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:72, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1385
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1385 #"railsystems.adb" 72 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:73, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1386
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1386 #"railsystems.adb" 73 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:74, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1387
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1387 #"railsystems.adb" 74 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:75, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1388
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1388 #"railsystems.adb" 75 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:36, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1391
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1391 #"railsystems.adb" 36 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at railsystems.adb:161, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1417
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1417 #"railsystems.adb" 161 0 0# 
   : Array__Int__Standard__character.map

end
(* Module for defining the value of constant "e_id" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__e_id

 axiom e_id__def_axiom :
  ((Types__list_od__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "max_size" defined at list.ads:24 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__max_size

 axiom max_size__def_axiom :
  ((Types__list_od__max_size.max_size ) = 100)

end

(* Module for defining the value of constant "no_found" defined at list.ads:25 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 4294967296)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 30)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 31)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 15)

end

(* Module for defining the value of constant "null_address" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV32.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__underlying_priorities__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__underlying_priorities
 use        Array__Int__Standard__integer
 use        System__underlying_priorities__aggregate_def
 use        Array__Int__Standard__integer

 axiom underlying_priorities__def_axiom :
  ((System__underlying_priorities.underlying_priorities ) = (System__underlying_priorities__aggregate_def.system__underlying_priorities__aggregate_def ( -15 ) ( -7 ) ( -6 ) ( -5 ) ( -4 ) ( -3 ) ( -2 ) ( -1 ) 0 1 2 3 4 5 6 15))

end

(* Module for defining the value of constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__unspecified_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__unspecified_size

 axiom unspecified_size__def_axiom :
  ((System__parameters__unspecified_size.unspecified_size ) = ( -2147483648 ))

end

(* Module for defining the value of constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__dynamic__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__dynamic

 axiom dynamic__def_axiom :
  ((System__parameters__dynamic.dynamic ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_percentage__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__sec_stack_percentage

 axiom sec_stack_percentage__def_axiom :
  ((System__parameters__sec_stack_percentage.sec_stack_percentage ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_dynamic__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__sec_stack_dynamic

 axiom sec_stack_dynamic__def_axiom :
  ((System__parameters__sec_stack_dynamic.sec_stack_dynamic ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_env_stack_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_env_stack_size

 axiom default_env_stack_size__def_axiom :
  ((System__parameters__default_env_stack_size.default_env_stack_size ) = 8192000)

end

(* Module for defining the value of constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__stack_grows_down__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__stack_grows_down

 axiom stack_grows_down__def_axiom :
  ((System__parameters__stack_grows_down.stack_grows_down ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__long_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__long_bits

 axiom long_bits__def_axiom :
  ((System__parameters__long_bits.long_bits ) = 32)

end

(* Module for defining the value of constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__c_malloc_linkname__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__parameters__c_malloc_linkname
 use        Temp___159

 axiom c_malloc_linkname__def_axiom :
  ((System__parameters__c_malloc_linkname.c_malloc_linkname ) = (Standard__string.of_array Temp___159.temp___159 1 13))

end

(* Module for defining the value of constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__garbage_collected__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__garbage_collected

 axiom garbage_collected__def_axiom :
  ((System__parameters__garbage_collected.garbage_collected ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__single_lock__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__single_lock

 axiom single_lock__def_axiom :
  ((System__parameters__single_lock.single_lock ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__no_abort__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__no_abort

 axiom no_abort__def_axiom :
  ((System__parameters__no_abort.no_abort ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_attribute_count__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_attribute_count

 axiom max_attribute_count__def_axiom :
  ((System__parameters__max_attribute_count.max_attribute_count ) = 32)

end

(* Module for defining the value of constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__runtime_traces__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__runtime_traces

 axiom runtime_traces__def_axiom :
  ((System__parameters__runtime_traces.runtime_traces ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_task_image_length__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_task_image_length

 axiom max_task_image_length__def_axiom :
  ((System__parameters__max_task_image_length.max_task_image_length ) = 256)

end

(* Module for defining the value of constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_exception_msg_max_length__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_exception_msg_max_length

 axiom default_exception_msg_max_length__def_axiom :
  ((System__parameters__default_exception_msg_max_length.default_exception_msg_max_length ) = 200)

end

(* Module for defining the value of constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__constraint_error_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__constraint_error_name
 use        Temp___160

 axiom constraint_error_name__def_axiom :
  ((System__standard_library__constraint_error_name.constraint_error_name ) = (Standard__string.of_array Temp___160.temp___160 1 17))

end

(* Module for defining the value of constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__program_error_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__program_error_name
 use        Temp___161

 axiom program_error_name__def_axiom :
  ((System__standard_library__program_error_name.program_error_name ) = (Standard__string.of_array Temp___161.temp___161 1 14))

end

(* Module for defining the value of constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__storage_error_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__storage_error_name
 use        Temp___162

 axiom storage_error_name__def_axiom :
  ((System__standard_library__storage_error_name.storage_error_name ) = (Standard__string.of_array Temp___162.temp___162 1 14))

end

(* Module for defining the value of constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__tasking_error_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__tasking_error_name
 use        Temp___163

 axiom tasking_error_name__def_axiom :
  ((System__standard_library__tasking_error_name.tasking_error_name ) = (Standard__string.of_array Temp___163.temp___163 1 14))

end

(* Module for defining the value of constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__abort_signal_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__abort_signal_name
 use        Temp___164

 axiom abort_signal_name__def_axiom :
  ((System__standard_library__abort_signal_name.abort_signal_name ) = (Standard__string.of_array Temp___164.temp___164 1 14))

end

(* Module for defining the value of constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__numeric_error_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__numeric_error_name
 use        Temp___165

 axiom numeric_error_name__def_axiom :
  ((System__standard_library__numeric_error_name.numeric_error_name ) = (Standard__string.of_array Temp___165.temp___165 1 14))

end

(* Module for defining the value of constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__traceback_entries__null_tb_entry__axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        System__traceback_entries__null_tb_entry

 axiom null_tb_entry__def_axiom :
  ((System__traceback_entries__null_tb_entry.null_tb_entry ) = System__null_address.null_address)

end

(* Module for defining the value of constant "exception_msg_max_length" defined at a-except.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__exception_msg_max_length__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__exceptions__exception_msg_max_length

 axiom exception_msg_max_length__def_axiom :
  ((Ada__exceptions__exception_msg_max_length.exception_msg_max_length ) = 200)

end

(* Module for defining the value of constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__null_loc__axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        Ada__exceptions__null_loc

 axiom null_loc__def_axiom :
  ((Ada__exceptions__null_loc.null_loc ) = System__null_address.null_address)

end

(* Module for defining the value of constant "max_tracebacks" defined at a-except.ads:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__max_tracebacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__exceptions__max_tracebacks

 axiom max_tracebacks__def_axiom :
  ((Ada__exceptions__max_tracebacks.max_tracebacks ) = 50)

end

(* Module for defining the value of constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__eof__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iofbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iolbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__ionbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__l_tmpnam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_cur__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_end__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__max_path_len__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "null_stream" defined at i-cstrea.ads:313, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__null_stream__axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        Interfaces__c_streams__null_stream

 axiom null_stream__def_axiom :
  ((Interfaces__c_streams__null_stream.null_stream ) = System__null_address.null_address)

end

(* Module for defining the value of constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_hex__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_hex

 axiom wcem_hex__def_axiom :
  ((System__wch_con__wcem_hex.wcem_hex ) = 1)

end

(* Module for defining the value of constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_upper__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_upper

 axiom wcem_upper__def_axiom :
  ((System__wch_con__wcem_upper.wcem_upper ) = 2)

end

(* Module for defining the value of constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_shift_jis__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_shift_jis

 axiom wcem_shift_jis__def_axiom :
  ((System__wch_con__wcem_shift_jis.wcem_shift_jis ) = 3)

end

(* Module for defining the value of constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_euc__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_euc

 axiom wcem_euc__def_axiom :
  ((System__wch_con__wcem_euc.wcem_euc ) = 4)

end

(* Module for defining the value of constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_utf8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_utf8

 axiom wcem_utf8__def_axiom :
  ((System__wch_con__wcem_utf8.wcem_utf8 ) = 5)

end

(* Module for defining the value of constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_brackets__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_brackets

 axiom wcem_brackets__def_axiom :
  ((System__wch_con__wcem_brackets.wcem_brackets ) = 6)

end

(* Module for defining the value of constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_encoding_letters__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_encoding_letters
 use        Array__Int__Standard__character
 use        System__wch_con__wc_encoding_letters__aggregate_def
 use        Array__Int__Standard__character

 axiom wc_encoding_letters__def_axiom :
  ((System__wch_con__wc_encoding_letters.wc_encoding_letters ) = (System__wch_con__wc_encoding_letters__aggregate_def.system__wch_con__wc_encoding_letters__aggregate_def 104 117 115 101 56 98))

end

(* Module for defining the value of constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequence__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_longest_sequence

 axiom wc_longest_sequence__def_axiom :
  ((System__wch_con__wc_longest_sequence.wc_longest_sequence ) = 12)

end

(* Module for defining the value of constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequences__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_longest_sequences
 use        Array__Int__Standard__natural
 use        System__wch_con__wc_longest_sequences__aggregate_def
 use        Array__Int__Standard__natural

 axiom wc_longest_sequences__def_axiom :
  ((System__wch_con__wc_longest_sequences.wc_longest_sequences ) = (System__wch_con__wc_longest_sequences__aggregate_def.system__wch_con__wc_longest_sequences__aggregate_def 5 2 2 2 6 12))

end

(* Module for defining the value of constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__unbounded__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__unbounded

 axiom unbounded__def_axiom :
  ((Ada__text_io__unbounded.unbounded ) = 0)

end

(* Module for defining the value of constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__lm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__lm

 axiom lm__def_axiom :
  ((Ada__text_io__lm.lm ) = 10)

end

(* Module for defining the value of constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__pm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__pm

 axiom pm__def_axiom :
  ((Ada__text_io__pm.pm ) = 12)

end

(* Module for defining the value of constant "e_id" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__e_id

 axiom e_id__def_axiom :
  ((Stations__list_tracks__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "max_size" defined at list.ads:24 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__max_size

 axiom max_size__def_axiom :
  ((Stations__list_tracks__max_size.max_size ) = 100)

end

(* Module for defining the value of constant "no_found" defined at list.ads:25 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:23 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_trains__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "max_size" defined at list.ads:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__max_size

 axiom max_size__def_axiom :
  ((Railsystems__list_trains__max_size.max_size ) = 100)

end

(* Module for defining the value of constant "no_found" defined at list.ads:25 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R37s" defined at list.adb:24 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__contains__L_1__R37s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R46s" defined at list.adb:148 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__get_element_by_id__L_2__R46s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R49s" defined at list.adb:216 instantiated at railsystems.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__replace_by_id__L_3__R49s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:23 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_stations__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "max_size" defined at list.ads:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__max_size

 axiom max_size__def_axiom :
  ((Railsystems__list_stations__max_size.max_size ) = 100)

end

(* Module for defining the value of constant "no_found" defined at list.ads:25 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R52s" defined at list.adb:24 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__contains__L_1__R52s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R61s" defined at list.adb:148 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__get_element_by_id__L_2__R61s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R64s" defined at list.adb:216 instantiated at railsystems.ads:22, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__replace_by_id__L_3__R64s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R2b" defined at railsystems.adb:44, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__go__L_2__R2b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R20b" defined at railsystems.adb:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__getstationbyname__L_3__R20b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R24b" defined at railsystems.adb:217, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__gettrackbyname__L_4__R24b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R29b" defined at railsystems.adb:323, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__replacetrack__L_5__R29b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R31b" defined at railsystems.adb:345, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__replacetrain__L_6__R31b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R33b" defined at railsystems.adb:362, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__replacestation__L_7__R33b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R35b" defined at railsystems.adb:392, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R37b" defined at railsystems.adb:395, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R39b" defined at railsystems.adb:415, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:49 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__contains__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__contains

 val contains #"list.ads" 49 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Types__list_od__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:52 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_size

 val get_size #"list.ads" 52 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Types__list_od__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_size.get_size a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:55 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element

 val get_element #"list.ads" 55 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element.get_element a location)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall location : int [(Types__list_od__get_element.get_element a location)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Types__list_od__get_element.get_element a location) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:58 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element_by_id

 val get_element_by_id #"list.ads" 58 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element_by_id.get_element_by_id a id)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall id : int [(Types__list_od__get_element_by_id.get_element_by_id a id)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Types__list_od__get_element_by_id.get_element_by_id a id) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__full__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__full

 val full #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Types__list_od__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__append__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val append #"list.ads" 62 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (d : Types__list_od__data_type.data_type) (id : int) : unit
  requires { ( (id > 0) /\ (id <= 100) ) }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:75 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val delete_all #"list.ads" 75 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:87 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val replace_by_id #"list.ads" 87 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (id : int) (newvalue : Types__list_od__data_type.data_type) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:91 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__init__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val init #"list.ads" 91 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print #"sprint.ads" 3 0 0# 
   (s : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_natural__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_natural #"sprint.ads" 4 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_train_state__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_train_state #"sprint.ads" 5 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_station_locations__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_station_locations #"sprint.ads" 6 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__default_stack_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type__axiom
 use        System__parameters__default_stack_size

 val default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__parameters__default_stack_size.default_stack_size ())) /\ (System__parameters__size_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom default_stack_size__post_axiom :
  (forall __void_param : unit [(System__parameters__default_stack_size.default_stack_size __void_param)].
   ( true -> (let result = (System__parameters__default_stack_size.default_stack_size __void_param) in (
    (System__parameters__size_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__minimum_stack_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type__axiom
 use        System__parameters__minimum_stack_size

 val minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__parameters__minimum_stack_size.minimum_stack_size ())) /\ (System__parameters__size_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom minimum_stack_size__post_axiom :
  (forall __void_param : unit [(System__parameters__minimum_stack_size.minimum_stack_size __void_param)].
   ( true -> (let result = (System__parameters__minimum_stack_size.minimum_stack_size __void_param) in (
    (System__parameters__size_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__adjust_storage_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__size_type__axiom
 use        System__parameters__adjust_storage_size

 val adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int
  requires { true }
  ensures { ( (result = (System__parameters__adjust_storage_size.adjust_storage_size size)) /\ (System__parameters__size_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom adjust_storage_size__post_axiom :
  (forall size : int [(System__parameters__adjust_storage_size.adjust_storage_size size)].
   ( (System__parameters__size_type.in_range size) -> (let result = (System__parameters__adjust_storage_size.adjust_storage_size size) in (
    (System__parameters__size_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__abort_undefer_direct__axiom
 use import "_gnatprove_standard".Main

 val abort_undefer_direct #"s-stalib.ads" 254 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__adafinal__axiom
 use import "_gnatprove_standard".Main

 val adafinal #"s-stalib.ads" 259 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__pc_for__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__pc_for

 val pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__traceback_entries__pc_for.pc_for tb_entry)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom pc_for__post_axiom :
  (forall tb_entry : BV32.t [(System__traceback_entries__pc_for.pc_for tb_entry)].
   ( (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
    (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last tb_entry)) else true) -> (let result = (System__traceback_entries__pc_for.pc_for tb_entry) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__tb_entry_for__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__tb_entry_for

 val tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__traceback_entries__tb_entry_for.tb_entry_for pc)) /\ (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
   (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true) ) }
 
 axiom tb_entry_for__post_axiom :
  (forall pc : BV32.t [(System__traceback_entries__tb_entry_for.tb_entry_for pc)].
   ( (System__address__axiom.dynamic_invariant pc True True True) -> (let result = (System__traceback_entries__tb_entry_for.tb_entry_for pc) in (
    (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
     (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__exception_name

 val exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name.exception_name id)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__exception_name.exception_name id)].
   ( (Ada__exceptions__exception_id__axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__exception_name.exception_name id) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__exception_name__2

 val exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name__2.exception_name__2 x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name__2.exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name__2.exception_name__2 x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string__axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__wide_exception_name

 val wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_exception_name.wide_exception_name id)) /\ (Standard__wide_string__axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_exception_name.wide_exception_name id)].
   ( (Ada__exceptions__exception_id__axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_exception_name.wide_exception_name id) in (
    (Standard__wide_string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__wide_exception_name__2

 val wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)) /\ (Standard__wide_string__axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x) in (
    (Standard__wide_string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string__axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__wide_wide_exception_name

 val wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)) /\ (Standard__wide_wide_string__axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)].
   ( (Ada__exceptions__exception_id__axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id) in (
    (Standard__wide_wide_string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__wide_wide_exception_name__2

 val wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)) /\ (Standard__wide_wide_string__axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x) in (
    (Standard__wide_wide_string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception #"a-except.ads" 90 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_exception #"a-except.ads" 90 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_message__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__exception_message

 val exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_message.exception_message x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_message__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_message.exception_message x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_message.exception_message x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence #"a-except.ads" 96 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_identity__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__exception_identity

 val exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_identity.exception_identity x)) /\ (Ada__exceptions__exception_id__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_identity__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_identity.exception_identity x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_identity.exception_identity x) in (
    (Ada__exceptions__exception_id__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_information__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__exception_information

 val exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_information.exception_information x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_information__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_information.exception_information x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_information.exception_information x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__save_occurrence__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom

 val save_occurrence #"a-except.ads" 123 0 0# 
   (target : Ada__exceptions__exception_occurrence.exception_occurrence__ref) (source : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant target.Ada__exceptions__exception_occurrence.exception_occurrence__content True True True) }
  writes {target}

end

(* Module for declaring a program function (and possibly an axiom) for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eid_to_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__eid_to_string

 val eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__eid_to_string.eid_to_string x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom eid_to_string__post_axiom :
  (forall x : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__eid_to_string.eid_to_string x)].
   ( (Ada__exceptions__exception_id__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eid_to_string.eid_to_string x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eid__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id__axiom
 use        Ada__exceptions__string_to_eid

 val string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id
  requires { true }
  ensures { ( (result = (Ada__exceptions__string_to_eid.string_to_eid s)) /\ (Ada__exceptions__exception_id__axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eid__post_axiom :
  (forall s : Standard__string.string [(Ada__exceptions__string_to_eid.string_to_eid s)].
   ( (Standard__string__axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eid.string_to_eid s) in (
    (Ada__exceptions__exception_id__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name_simple__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__exception_name_simple

 val exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name_simple.exception_name_simple x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name_simple__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name_simple.exception_name_simple x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name_simple.exception_name_simple x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception_always__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception_always #"a-except.ads" 188 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_exception_always #"a-except.ads" 188 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_signal_handler__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada__exceptions__exception_id

 val raise_from_signal_handler #"a-except.ads" 197 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (m : BV32.t) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_from_signal_handler #"a-except.ads" 197 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (m : BV32.t) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_controlled_operation__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_library_exception_if_any__axiom
 use import "_gnatprove_standard".Main

 val reraise_library_exception_if_any #"a-except.ads" 224 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_always__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_always #"a-except.ads" 231 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val reraise_occurrence_always #"a-except.ads" 231 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_no_defer__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__triggered_by_abort__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__triggered_by_abort

 val triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (Ada__exceptions__triggered_by_abort.triggered_by_abort ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__poll__axiom
 use import "_gnatprove_standard".Main

 val poll #"a-except.ads" 270 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__Oeq

 val oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool
  requires { true }
  ensures { (result = (Ada__exceptions__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__get_exception_machine_occurrence__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__get_exception_machine_occurrence

 val get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV32.t
  requires { true }
  ensures { ( (result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_exception_machine_occurrence__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eo_to_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__eo_to_string

 val eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__eo_to_string.eo_to_string x)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom eo_to_string__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__eo_to_string.eo_to_string x)].
   ( (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eo_to_string.eo_to_string x) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eo__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence__axiom
 use        Ada__exceptions__string_to_eo

 val string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence
  requires { true }
  ensures { ( (result = (Ada__exceptions__string_to_eo.string_to_eo s)) /\ (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eo__post_axiom :
  (forall s : Standard__string.string [(Ada__exceptions__string_to_eo.string_to_eo s)].
   ( (Standard__string__axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eo.string_to_eo s) in (
    (Ada__exceptions__exception_occurrence__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__clock__axiom
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__clock

 val volatile__effect #"a-calend.ads" 58 0 0#  : Main.__private__ref 
 
 val clock #"a-calend.ads" 58 0 0# 
   (__void_param : unit) : Ada__calendar__time.time
  requires { true }
  ensures { (Ada__calendar__time__axiom.dynamic_invariant result True False True) }
  writes {volatile__effect}
 
 axiom clock__post_axiom :
  (forall ada__calendar__clock_time : Main.__private [(Ada__calendar__clock.clock ada__calendar__clock_time)].
   ( true -> (let result = (Ada__calendar__clock.clock ada__calendar__clock_time) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__year__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__year

 val year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__year.year date)) /\ (Ada__calendar__year_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom year__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__year.year date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__year.year date) in (
    (Ada__calendar__year_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__month__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__month

 val month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__month.month date)) /\ (Ada__calendar__month_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom month__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__month.month date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__month.month date) in (
    (Ada__calendar__month_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__day__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day

 val day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__day.day date)) /\ (Ada__calendar__day_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom day__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__day.day date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__day.day date) in (
    (Ada__calendar__day_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__seconds__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom
 use        Ada__calendar__seconds

 val seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration
  requires { true }
  ensures { ( (result = (Ada__calendar__seconds.seconds date)) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom seconds__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__seconds.seconds date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__seconds.seconds date) in (
    (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__split__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom

 val split #"a-calend.ads" 71 0 0# 
   (date : Ada__calendar__time.time) (year : int__ref) (month : int__ref) (day : int__ref) (seconds : Ada__calendar__day_duration.day_duration__ref) : unit
  requires { true }
  ensures { ( ( ( (Ada__calendar__year_number__axiom.dynamic_invariant year.int__content True True True) /\ (Ada__calendar__month_number__axiom.dynamic_invariant month.int__content True True True) ) /\ (Ada__calendar__day_number__axiom.dynamic_invariant day.int__content True True True) ) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant seconds.Ada__calendar__day_duration.day_duration__content True True True) ) }
  writes {year, month, day, seconds}

end

(* Module for declaring a program function (and possibly an axiom) for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__time_of__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number
 use        Ada__calendar__month_number
 use        Ada__calendar__day_number
 use        Ada__calendar__day_duration
 use        Ada__calendar__time_of

 val time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__time_of.time_of year month day seconds)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom time_of__post_axiom :
  (forall year month day : int.
  (forall seconds : Main.__fixed [(Ada__calendar__time_of.time_of year month day seconds)].
   ( ( ( ( (Ada__calendar__year_number.in_range year) /\ (Ada__calendar__month_number.in_range month) ) /\ (Ada__calendar__day_number.in_range day) ) /\ (Ada__calendar__day_duration.in_range seconds) ) -> (let result = (Ada__calendar__time_of.time_of year month day seconds) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd

 val oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd.oadd left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Oadd.oadd left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Oadd.oadd left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd__2

 val oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd__2.oadd__2 left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left : Main.__fixed.
  (forall right : Ada__calendar__time.time [(Ada__calendar__Oadd__2.oadd__2 left right)].
   ( ( (Standard__duration.in_range left) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Oadd__2.oadd__2 left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract

 val osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract.osubtract left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Osubtract.osubtract left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Osubtract.osubtract left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration__axiom
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract__2

 val osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract__2.osubtract__2 left right)) /\ (Standard__duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left right : Ada__calendar__time.time [(Ada__calendar__Osubtract__2.osubtract__2 left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Osubtract__2.osubtract__2 left right) in (
    (Standard__duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Olt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Olt

 val olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ole__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ole

 val ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ogt

 val ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oge__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Oge

 val oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__read__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__root_stream_type__axiom
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_offset__axiom
 use        Ada__streams__stream_element_array
 use        Array__Int__Ada__streams__stream_element

 val read #"a-stream.ads" 57 0 0# 
   (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : int) (item__last : int) (last : int__ref) : unit
  requires { true }
  ensures { ( ( (Ada__streams__root_stream_type__axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) /\ (if (True) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last item__first item__last))) ) /\ (Ada__streams__stream_element_offset__axiom.dynamic_invariant last.int__content True True True) ) }
  writes {stream__split_fields, item, last}
 
 namespace Dispatch
  val read #"a-stream.ads" 57 0 0# 
    (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : int) (item__last : int) (last : int__ref) : unit
   requires { true }
   ensures { ( ( (Ada__streams__root_stream_type__axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) /\ (if (True) then (
    true) else (
    (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last item__first item__last))) ) /\ (Ada__streams__stream_element_offset__axiom.dynamic_invariant last.int__content True True True) ) }
   writes {stream__split_fields, item, last}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__write__axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__root_stream_type__axiom
 use        Ada__streams__stream_element_array

 val write #"a-stream.ads" 63 0 0# 
   (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array) : unit
  requires { true }
  ensures { (Ada__streams__root_stream_type__axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) }
  writes {stream__split_fields}
 
 namespace Dispatch
  val write #"a-stream.ads" 63 0 0# 
    (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array) : unit
   requires { true }
   ensures { (Ada__streams__root_stream_type__axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) }
   writes {stream__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strlen__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__crtl__size_t__axiom
 use        System__crtl__strlen

 val strlen #"s-crtl.ads" 85 0 0# 
   (a : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__strlen.strlen a)) /\ (System__crtl__size_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom strlen__post_axiom :
  (forall a : BV32.t [(System__crtl__strlen.strlen a)].
   ( (System__address__axiom.dynamic_invariant a True True True) -> (let result = (System__crtl__strlen.strlen a) in (
    (System__crtl__size_t__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strncpy__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val strncpy #"s-crtl.ads" 88 0 0# 
   (dest : BV32.t) (src : BV32.t) (n : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__atoi__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__integer__axiom
 use        System__address__axiom
 use        System__crtl__atoi

 val atoi #"s-crtl.ads" 95 0 0# 
   (a : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__atoi.atoi a)) /\ (Standard__integer__axiom.dynamic_invariant result True False True) ) }
 
 axiom atoi__post_axiom :
  (forall a : BV32.t [(System__crtl__atoi.atoi a)].
   ( (System__address__axiom.dynamic_invariant a True True True) -> (let result = (System__crtl__atoi.atoi a) in (
    (Standard__integer__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__clearerr__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val clearerr #"s-crtl.ads" 98 0 0# 
   (stream : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__dup

 val dup #"s-crtl.ads" 101 0 0# 
   (handle : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__dup.dup handle)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom dup__post_axiom :
  (forall handle : int [(System__crtl__dup.dup handle)].
   ( (System__crtl__int.in_range handle) -> (let result = (System__crtl__dup.dup handle) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup2__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__dup2

 val dup2 #"s-crtl.ads" 104 0 0# 
   (from : int) (to__ : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__dup2.dup2 from to__)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom dup2__post_axiom :
  (forall from to__ : int [(System__crtl__dup2.dup2 from to__)].
   ( ( (System__crtl__int.in_range from) /\ (System__crtl__int.in_range to__) ) -> (let result = (System__crtl__dup2.dup2 from to__) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fclose__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int__axiom
 use        System__crtl__fclose

 val fclose #"s-crtl.ads" 107 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fclose.fclose stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fclose__post_axiom :
  (forall stream : BV32.t [(System__crtl__fclose.fclose stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fclose.fclose stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fdopen__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fdopen

 val fdopen #"s-crtl.ads" 110 0 0# 
   (handle : int) (mode : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__fdopen.fdopen handle mode)) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom fdopen__post_axiom :
  (forall handle : int.
  (forall mode : BV32.t [(System__crtl__fdopen.fdopen handle mode)].
   ( ( (System__crtl__int.in_range handle) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) -> (let result = (System__crtl__fdopen.fdopen handle mode) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fflush__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int__axiom
 use        System__crtl__fflush

 val fflush #"s-crtl.ads" 113 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fflush.fflush stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fflush__post_axiom :
  (forall stream : BV32.t [(System__crtl__fflush.fflush stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fflush.fflush stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgetc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int__axiom
 use        System__crtl__fgetc

 val fgetc #"s-crtl.ads" 116 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fgetc.fgetc stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fgetc__post_axiom :
  (forall stream : BV32.t [(System__crtl__fgetc.fgetc stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fgetc.fgetc stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgets__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__fgets

 val fgets #"s-crtl.ads" 119 0 0# 
   (strng : BV32.t) (n : int) (stream : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__fgets.fgets strng n stream)) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
   (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result)) else true) ) }
 
 axiom fgets__post_axiom :
  (forall strng stream : BV32.t.
  (forall n : int [(System__crtl__fgets.fgets strng n stream)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng)) else true) /\ (System__crtl__int.in_range n) ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fgets.fgets strng n stream) in (
    (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
     (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fopen__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding
 use        System__crtl__fopen

 val fopen #"s-crtl.ads" 122 0 0# 
   (filename : BV32.t) (mode : BV32.t) (encoding : int) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__fopen.fopen filename mode encoding)) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom fopen__post_axiom :
  (forall filename mode : BV32.t.
  (forall encoding : int [(System__crtl__fopen.fopen filename mode encoding)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) /\ (System__crtl__filename_encoding.in_range encoding) ) -> (let result = (System__crtl__fopen.fopen filename mode encoding) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__fputc

 val fputc #"s-crtl.ads" 128 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fputc.fputc c stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fputc__post_axiom :
  (forall c : int.
  (forall stream : BV32.t [(System__crtl__fputc.fputc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputc.fputc c stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputwc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__fputwc

 val fputwc #"s-crtl.ads" 131 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fputwc.fputwc c stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fputwc__post_axiom :
  (forall c : int.
  (forall stream : BV32.t [(System__crtl__fputwc.fputwc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputwc.fputwc c stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputs__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int__axiom
 use        System__crtl__fputs

 val fputs #"s-crtl.ads" 134 0 0# 
   (strng : BV32.t) (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__fputs.fputs strng stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fputs__post_axiom :
  (forall strng stream : BV32.t [(System__crtl__fputs.fputs strng stream)].
   ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng)) else true) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputs.fputs strng stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__free__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val free #"s-crtl.ads" 137 0 0# 
   (ptr : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__freopen__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding
 use        System__crtl__freopen

 val freopen #"s-crtl.ads" 140 0 0# 
   (filename : BV32.t) (mode : BV32.t) (stream : BV32.t) (encoding : int) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__freopen.freopen filename mode stream encoding)) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom freopen__post_axiom :
  (forall filename mode stream : BV32.t.
  (forall encoding : int [(System__crtl__freopen.freopen filename mode stream encoding)].
   ( ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) /\ (System__crtl__filename_encoding.in_range encoding) ) -> (let result = (System__crtl__freopen.freopen filename mode stream encoding) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__long
 use        System__crtl__fseek

 val fseek #"s-crtl.ads" 147 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__fseek.fseek stream offset origin)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fseek__post_axiom :
  (forall stream : BV32.t.
  (forall offset origin : int [(System__crtl__fseek.fseek stream offset origin)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (System__crtl__long.in_range offset) ) /\ (System__crtl__int.in_range origin) ) -> (let result = (System__crtl__fseek.fseek stream offset origin) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek64__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__int64
 use        System__crtl__fseek64

 val fseek64 #"s-crtl.ads" 153 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__fseek64.fseek64 stream offset origin)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fseek64__post_axiom :
  (forall stream : BV32.t.
  (forall offset origin : int [(System__crtl__fseek64.fseek64 stream offset origin)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (System__crtl__int64.in_range offset) ) /\ (System__crtl__int.in_range origin) ) -> (let result = (System__crtl__fseek64.fseek64 stream offset origin) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__long__axiom
 use        System__crtl__ftell

 val ftell #"s-crtl.ads" 159 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__ftell.ftell stream)) /\ (System__crtl__long__axiom.dynamic_invariant result True False True) ) }
 
 axiom ftell__post_axiom :
  (forall stream : BV32.t [(System__crtl__ftell.ftell stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__ftell.ftell stream) in (
    (System__crtl__long__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell64__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int64__axiom
 use        System__crtl__ftell64

 val ftell64 #"s-crtl.ads" 162 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__ftell64.ftell64 stream)) /\ (System__crtl__int64__axiom.dynamic_invariant result True False True) ) }
 
 axiom ftell64__post_axiom :
  (forall stream : BV32.t [(System__crtl__ftell64.ftell64 stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__ftell64.ftell64 stream) in (
    (System__crtl__int64__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__getenv__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__string
 use        Standard__string__axiom
 use        System__address__axiom
 use        System__crtl__getenv

 val getenv #"s-crtl.ads" 165 0 0# 
   (s : Standard__string.string) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__getenv.getenv s)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom getenv__post_axiom :
  (forall s : Standard__string.string [(System__crtl__getenv.getenv s)].
   ( (Standard__string__axiom.dynamic_invariant s True True True) -> (let result = (System__crtl__getenv.getenv s) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__isatty__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__isatty

 val isatty #"s-crtl.ads" 168 0 0# 
   (handle : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__isatty.isatty handle)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom isatty__post_axiom :
  (forall handle : int [(System__crtl__isatty.isatty handle)].
   ( (System__crtl__int.in_range handle) -> (let result = (System__crtl__isatty.isatty handle) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__lseek__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__off_t
 use        System__crtl__off_t__axiom
 use        System__crtl__lseek

 val lseek #"s-crtl.ads" 171 0 0# 
   (fd : int) (offset : int) (direction : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__lseek.lseek fd offset direction)) /\ (System__crtl__off_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom lseek__post_axiom :
  (forall fd offset direction : int [(System__crtl__lseek.lseek fd offset direction)].
   ( ( ( (System__crtl__int.in_range fd) /\ (System__crtl__off_t.in_range offset) ) /\ (System__crtl__int.in_range direction) ) -> (let result = (System__crtl__lseek.lseek fd offset direction) in (
    (System__crtl__off_t__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__malloc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__crtl__size_t
 use        System__crtl__malloc

 val malloc #"s-crtl.ads" 174 0 0# 
   (size : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__malloc.malloc size)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom malloc__post_axiom :
  (forall size : BV32.t [(System__crtl__malloc.malloc size)].
   ( (System__crtl__size_t.in_range size) -> (let result = (System__crtl__malloc.malloc size) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memcpy__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val memcpy #"s-crtl.ads" 177 0 0# 
   (s1 : BV32.t) (s2 : BV32.t) (n : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memmove__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val memmove #"s-crtl.ads" 180 0 0# 
   (s1 : BV32.t) (s2 : BV32.t) (n : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mktemp__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val mktemp #"s-crtl.ads" 183 0 0# 
   (template : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__pclose__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__crtl__int__axiom
 use        System__crtl__pclose

 val pclose #"s-crtl.ads" 186 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__pclose.pclose stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom pclose__post_axiom :
  (forall stream : BV32.t [(System__crtl__pclose.pclose stream)].
   ( (System__address__axiom.dynamic_invariant stream True True True) -> (let result = (System__crtl__pclose.pclose stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__popen__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__crtl__popen

 val popen #"s-crtl.ads" 189 0 0# 
   (command : BV32.t) (mode : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__popen.popen command mode)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom popen__post_axiom :
  (forall command mode : BV32.t [(System__crtl__popen.popen command mode)].
   ( ( (System__address__axiom.dynamic_invariant command True True True) /\ (System__address__axiom.dynamic_invariant mode True True True) ) -> (let result = (System__crtl__popen.popen command mode) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__realloc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address__axiom
 use        System__crtl__size_t
 use        System__crtl__realloc

 val realloc #"s-crtl.ads" 192 0 0# 
   (ptr : BV32.t) (size : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__realloc.realloc ptr size)) /\ (System__address__axiom.dynamic_invariant result True False True) ) }
 
 axiom realloc__post_axiom :
  (forall ptr size : BV32.t [(System__crtl__realloc.realloc ptr size)].
   ( ( (System__address__axiom.dynamic_invariant ptr True True True) /\ (System__crtl__size_t.in_range size) ) -> (let result = (System__crtl__realloc.realloc ptr size) in (
    (System__address__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rewind__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val rewind #"s-crtl.ads" 196 0 0# 
   (stream : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rmdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        System__crtl__int__axiom
 use        System__crtl__rmdir

 val rmdir #"s-crtl.ads" 199 0 0# 
   (dir_name : Standard__string.string) : int
  requires { true }
  ensures { ( (result = (System__crtl__rmdir.rmdir dir_name)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom rmdir__post_axiom :
  (forall dir_name : Standard__string.string [(System__crtl__rmdir.rmdir dir_name)].
   ( (Standard__string__axiom.dynamic_invariant dir_name True True True) -> (let result = (System__crtl__rmdir.rmdir dir_name) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__chdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        System__crtl__int__axiom
 use        System__crtl__chdir

 val chdir #"s-crtl.ads" 202 0 0# 
   (dir_name : Standard__string.string) : int
  requires { true }
  ensures { ( (result = (System__crtl__chdir.chdir dir_name)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom chdir__post_axiom :
  (forall dir_name : Standard__string.string [(System__crtl__chdir.chdir dir_name)].
   ( (Standard__string__axiom.dynamic_invariant dir_name True True True) -> (let result = (System__crtl__chdir.chdir dir_name) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mkdir__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        System__crtl__int__axiom
 use        System__crtl__filename_encoding
 use        System__crtl__mkdir

 val mkdir #"s-crtl.ads" 205 0 0# 
   (dir_name : Standard__string.string) (encoding : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__mkdir.mkdir dir_name encoding)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom mkdir__post_axiom :
  (forall dir_name : Standard__string.string.
  (forall encoding : int [(System__crtl__mkdir.mkdir dir_name encoding)].
   ( ( (Standard__string__axiom.dynamic_invariant dir_name True True True) /\ (System__crtl__filename_encoding.in_range encoding) ) -> (let result = (System__crtl__mkdir.mkdir dir_name encoding) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__setvbuf__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__size_t
 use        System__crtl__setvbuf

 val setvbuf #"s-crtl.ads" 210 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__setvbuf.setvbuf stream buffer mode size)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom setvbuf__post_axiom :
  (forall stream buffer size : BV32.t.
  (forall mode : int [(System__crtl__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__int.in_range mode) ) /\ (System__crtl__size_t.in_range size) ) -> (let result = (System__crtl__setvbuf.setvbuf stream buffer mode size) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpnam__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val tmpnam #"s-crtl.ads" 217 0 0# 
   (str : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpfile__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__tmpfile

 val tmpfile #"s-crtl.ads" 220 0 0# 
   (__void_param : unit) : BV32.t
  requires { true }
  ensures { ( (result = (System__crtl__tmpfile.tmpfile ())) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom tmpfile__post_axiom :
  (forall __void_param : unit [(System__crtl__tmpfile.tmpfile __void_param)].
   ( true -> (let result = (System__crtl__tmpfile.tmpfile __void_param) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ungetc__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__ungetc

 val ungetc #"s-crtl.ads" 223 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__ungetc.ungetc c stream)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom ungetc__post_axiom :
  (forall c : int.
  (forall stream : BV32.t [(System__crtl__ungetc.ungetc c stream)].
   ( ( (System__crtl__int.in_range c) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__ungetc.ungetc c stream) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__unlink__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int__axiom
 use        System__crtl__unlink

 val unlink #"s-crtl.ads" 226 0 0# 
   (filename : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__unlink.unlink filename)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom unlink__post_axiom :
  (forall filename : BV32.t [(System__crtl__unlink.unlink filename)].
   ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) -> (let result = (System__crtl__unlink.unlink filename) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__open__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__open

 val open #"s-crtl.ads" 229 0 0# 
   (filename : BV32.t) (oflag : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__open.open filename oflag)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom open__post_axiom :
  (forall filename : BV32.t.
  (forall oflag : int [(System__crtl__open.open filename oflag)].
   ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (System__crtl__int.in_range oflag) ) -> (let result = (System__crtl__open.open filename oflag) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__close__axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__int__axiom
 use        System__crtl__close

 val close #"s-crtl.ads" 232 0 0# 
   (fd : int) : int
  requires { true }
  ensures { ( (result = (System__crtl__close.close fd)) /\ (System__crtl__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom close__post_axiom :
  (forall fd : int [(System__crtl__close.close fd)].
   ( (System__crtl__int.in_range fd) -> (let result = (System__crtl__close.close fd) in (
    (System__crtl__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__read__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__size_t
 use        System__crtl__ssize_t__axiom
 use        System__crtl__read

 val read #"s-crtl.ads" 235 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__read.read fd buffer count)) /\ (System__crtl__ssize_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom read__post_axiom :
  (forall fd : int.
  (forall buffer count : BV32.t [(System__crtl__read.read fd buffer count)].
   ( ( ( (System__crtl__int.in_range fd) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__size_t.in_range count) ) -> (let result = (System__crtl__read.read fd buffer count) in (
    (System__crtl__ssize_t__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__write__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int
 use        System__crtl__size_t
 use        System__crtl__ssize_t__axiom
 use        System__crtl__write

 val write #"s-crtl.ads" 238 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
  requires { true }
  ensures { ( (result = (System__crtl__write.write fd buffer count)) /\ (System__crtl__ssize_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom write__post_axiom :
  (forall fd : int.
  (forall buffer count : BV32.t [(System__crtl__write.write fd buffer count)].
   ( ( ( (System__crtl__int.in_range fd) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__size_t.in_range count) ) -> (let result = (System__crtl__write.write fd buffer count) in (
    (System__crtl__ssize_t__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdin__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdin

 val stdin #"i-cstrea.ads" 72 0 0# 
   (__void_param : unit) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stdin.stdin ())) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stdin__post_axiom :
  (forall __void_param : unit [(Interfaces__c_streams__stdin.stdin __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdin.stdin __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdout__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdout

 val stdout #"i-cstrea.ads" 73 0 0# 
   (__void_param : unit) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stdout.stdout ())) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stdout__post_axiom :
  (forall __void_param : unit [(Interfaces__c_streams__stdout.stdout __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdout.stdout __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stderr__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stderr

 val stderr #"i-cstrea.ads" 74 0 0# 
   (__void_param : unit) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__stderr.stderr ())) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stderr__post_axiom :
  (forall __void_param : unit [(Interfaces__c_streams__stderr.stderr __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stderr.stderr __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__feof__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__feof

 val feof #"i-cstrea.ads" 95 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__feof.feof stream)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom feof__post_axiom :
  (forall stream : BV32.t [(Interfaces__c_streams__feof.feof stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__feof.feof stream) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__ferror__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__ferror

 val ferror #"i-cstrea.ads" 97 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__ferror.ferror stream)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom ferror__post_axiom :
  (forall stream : BV32.t [(Interfaces__c_streams__ferror.ferror stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__ferror.ferror stream) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fileno__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__fileno

 val fileno #"i-cstrea.ads" 106 0 0# 
   (stream : BV32.t) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fileno.fileno stream)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom fileno__post_axiom :
  (forall stream : BV32.t [(Interfaces__c_streams__fileno.fileno stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__fileno.fileno stream) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__size_t__axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread

 val fread #"i-cstrea.ads" 128 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fread.fread buffer size count stream)) /\ (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom fread__post_axiom :
  (forall buffer size count stream : BV32.t [(Interfaces__c_streams__fread.fread buffer size count stream)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fread.fread buffer size count stream) in (
    (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__size_t__axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread__2

 val fread__2 #"i-cstrea.ads" 134 0 0# 
   (buffer : BV32.t) (index : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)) /\ (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom fread__2__post_axiom :
  (forall buffer index size count stream : BV32.t [(Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)].
   ( ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t.in_range index) ) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream) in (
    (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fwrite__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__size_t__axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fwrite

 val fwrite #"i-cstrea.ads" 171 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream)) /\ (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True) ) }
 
 axiom fwrite__post_axiom :
  (forall buffer size count stream : BV32.t [(Interfaces__c_streams__fwrite.fwrite buffer size count stream)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t.in_range size) ) /\ (Interfaces__c_streams__size_t.in_range count) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream) in (
    (Interfaces__c_streams__size_t__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__setvbuf__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__setvbuf

 val setvbuf #"i-cstrea.ads" 184 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom setvbuf__post_axiom :
  (forall stream buffer size : BV32.t.
  (forall mode : int [(Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last) )) then (
    (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last buffer)) else true) ) /\ (Interfaces__c_streams__int.in_range mode) ) /\ (Interfaces__c_streams__size_t.in_range size) ) -> (let result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__file_exists__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__file_exists

 val file_exists #"i-cstrea.ads" 212 0 0# 
   (name : BV32.t) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__file_exists.file_exists name)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom file_exists__post_axiom :
  (forall name : BV32.t [(Interfaces__c_streams__file_exists.file_exists name)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last) )) then (
    (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last name)) else true) -> (let result = (Interfaces__c_streams__file_exists.file_exists name) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__is_regular_file__axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__int__axiom
 use        Interfaces__c_streams__is_regular_file

 val is_regular_file #"i-cstrea.ads" 215 0 0# 
   (handle : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c_streams__is_regular_file.is_regular_file handle)) /\ (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True) ) }
 
 axiom is_regular_file__post_axiom :
  (forall handle : int [(Interfaces__c_streams__is_regular_file.is_regular_file handle)].
   ( (Interfaces__c_streams__int.in_range handle) -> (let result = (Interfaces__c_streams__is_regular_file.is_regular_file handle) in (
    (Interfaces__c_streams__int__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_binary_mode__axiom
 use import "_gnatprove_standard".Main

 val set_binary_mode #"i-cstrea.ads" 223 0 0# 
   (handle : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_text_mode__axiom
 use import "_gnatprove_standard".Main

 val set_text_mode #"i-cstrea.ads" 224 0 0# 
   (handle : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_mode__axiom
 use import "_gnatprove_standard".Main

 val set_mode #"i-cstrea.ads" 254 0 0# 
   (handle : int) (mode : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__full_name__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val full_name #"i-cstrea.ads" 262 0 0# 
   (nam : BV32.t) (buffer : BV32.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        System__wch_con__wc_encoding_method__axiom
 use        System__wch_con__get_wc_encoding_method

 val get_wc_encoding_method #"s-wchcon.ads" 203 0 0# 
   (c : int) : int
  requires { true }
  ensures { ( (result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)) /\ (System__wch_con__wc_encoding_method__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_wc_encoding_method__post_axiom :
  (forall c : int [(System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)].
   ( (Standard__character.in_range c) -> (let result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c) in (
    (System__wch_con__wc_encoding_method__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        System__wch_con__wc_encoding_method__axiom
 use        System__wch_con__get_wc_encoding_method__2

 val get_wc_encoding_method__2 #"s-wchcon.ads" 207 0 0# 
   (s : Standard__string.string) : int
  requires { true }
  ensures { ( (result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)) /\ (System__wch_con__wc_encoding_method__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_wc_encoding_method__2__post_axiom :
  (forall s : Standard__string.string [(System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)].
   ( (Standard__string__axiom.dynamic_invariant s True True True) -> (let result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s) in (
    (System__wch_con__wc_encoding_method__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__is_start_of_encoding__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__is_start_of_encoding

 val is_start_of_encoding #"s-wchcon.ads" 212 0 0# 
   (c : int) (em : int) : bool
  requires { true }
  ensures { (result = (System__wch_con__is_start_of_encoding.is_start_of_encoding c em)) }

end

(* Module for declaring a program function (and possibly an axiom) for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__create__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val create #"a-textio.ads" 86 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) (name : Standard__string.string) (form : Standard__string.string) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__open__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val open #"a-textio.ads" 92 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) (name : Standard__string.string) (form : Standard__string.string) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__close__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val close #"a-textio.ads" 98 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__delete__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val delete #"a-textio.ads" 99 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val reset #"a-textio.ads" 100 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom

 val reset__2 #"a-textio.ads" 101 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { true }
  ensures { (Ada__text_io__file_type__axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__mode__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__file_mode__axiom
 use        Ada__text_io__mode

 val mode #"a-textio.ads" 103 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__mode.mode file)) /\ (Ada__text_io__file_mode__axiom.dynamic_invariant result True False True) ) }
 
 axiom mode__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__mode.mode file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__mode.mode file) in (
    (Ada__text_io__file_mode__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__name

 val name #"a-textio.ads" 104 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__name.name file)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom name__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__name.name file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__name.name file) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__form__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__form

 val form #"a-textio.ads" 105 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__form.form file)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom form__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__form.form file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__form.form file) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__is_open__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__is_open

 val is_open #"a-textio.ads" 107 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { true }
  ensures { (result = (Ada__text_io__is_open.is_open file)) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_input #"a-textio.ads" 113 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_output #"a-textio.ads" 114 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_error #"a-textio.ads" 115 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__standard_input

 val standard_input #"a-textio.ads" 117 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__standard_input.standard_input ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_input__post_axiom :
  (forall __void_param : unit [(Ada__text_io__standard_input.standard_input __void_param)].
   ( true -> (let result = (Ada__text_io__standard_input.standard_input __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__standard_output

 val standard_output #"a-textio.ads" 118 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__standard_output.standard_output ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_output__post_axiom :
  (forall __void_param : unit [(Ada__text_io__standard_output.standard_output __void_param)].
   ( true -> (let result = (Ada__text_io__standard_output.standard_output __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__standard_error

 val standard_error #"a-textio.ads" 119 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__standard_error.standard_error ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_error__post_axiom :
  (forall __void_param : unit [(Ada__text_io__standard_error.standard_error __void_param)].
   ( true -> (let result = (Ada__text_io__standard_error.standard_error __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_input__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__current_input

 val current_input #"a-textio.ads" 121 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__current_input.current_input ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom current_input__post_axiom :
  (forall __void_param : unit [(Ada__text_io__current_input.current_input __void_param)].
   ( true -> (let result = (Ada__text_io__current_input.current_input __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_output__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__current_output

 val current_output #"a-textio.ads" 122 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__current_output.current_output ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom current_output__post_axiom :
  (forall __void_param : unit [(Ada__text_io__current_output.current_output __void_param)].
   ( true -> (let result = (Ada__text_io__current_output.current_output __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_error__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__current_error

 val current_error #"a-textio.ads" 123 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { true }
  ensures { ( (result = (Ada__text_io__current_error.current_error ())) /\ (Ada__text_io__file_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom current_error__post_axiom :
  (forall __void_param : unit [(Ada__text_io__current_error.current_error __void_param)].
   ( true -> (let result = (Ada__text_io__current_error.current_error __void_param) in (
    (Ada__text_io__file_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val flush #"a-textio.ads" 142 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush__2__axiom
 use import "_gnatprove_standard".Main

 val flush__2 #"a-textio.ads" 143 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line_length #"a-textio.ads" 149 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length__2__axiom
 use import "_gnatprove_standard".Main

 val set_line_length__2 #"a-textio.ads" 150 0 0# 
   (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_page_length #"a-textio.ads" 152 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length__2__axiom
 use import "_gnatprove_standard".Main

 val set_page_length__2 #"a-textio.ads" 153 0 0# 
   (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__count__axiom
 use        Ada__text_io__line_length

 val line_length #"a-textio.ads" 155 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__line_length.line_length file)) /\ (Ada__text_io__count__axiom.dynamic_invariant result True False True) ) }
 
 axiom line_length__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__line_length.line_length file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__line_length.line_length file) in (
    (Ada__text_io__count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count__axiom
 use        Ada__text_io__line_length__2

 val line_length__2 #"a-textio.ads" 156 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__line_length__2.line_length__2 ())) /\ (Ada__text_io__count__axiom.dynamic_invariant result True False True) ) }
 
 axiom line_length__2__post_axiom :
  (forall __void_param : unit [(Ada__text_io__line_length__2.line_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line_length__2.line_length__2 __void_param) in (
    (Ada__text_io__count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__count__axiom
 use        Ada__text_io__page_length

 val page_length #"a-textio.ads" 158 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__page_length.page_length file)) /\ (Ada__text_io__count__axiom.dynamic_invariant result True False True) ) }
 
 axiom page_length__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__page_length.page_length file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__page_length.page_length file) in (
    (Ada__text_io__count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count__axiom
 use        Ada__text_io__page_length__2

 val page_length__2 #"a-textio.ads" 159 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__page_length__2.page_length__2 ())) /\ (Ada__text_io__count__axiom.dynamic_invariant result True False True) ) }
 
 axiom page_length__2__post_axiom :
  (forall __void_param : unit [(Ada__text_io__page_length__2.page_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page_length__2.page_length__2 __void_param) in (
    (Ada__text_io__count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_line #"a-textio.ads" 165 0 0# 
   (file : Ada__text_io__file_type.file_type) (spacing : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line__2__axiom
 use import "_gnatprove_standard".Main

 val new_line__2 #"a-textio.ads" 166 0 0# 
   (spacing : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_line #"a-textio.ads" 168 0 0# 
   (file : Ada__text_io__file_type.file_type) (spacing : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line__2__axiom
 use import "_gnatprove_standard".Main

 val skip_line__2 #"a-textio.ads" 169 0 0# 
   (spacing : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_line

 val end_of_line #"a-textio.ads" 171 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_line.end_of_line file)) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_line__2

 val end_of_line__2 #"a-textio.ads" 172 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_line__2.end_of_line__2 ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_page #"a-textio.ads" 174 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page__2__axiom
 use import "_gnatprove_standard".Main

 val new_page__2 #"a-textio.ads" 175 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_page #"a-textio.ads" 177 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page__2__axiom
 use import "_gnatprove_standard".Main

 val skip_page__2 #"a-textio.ads" 178 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_page

 val end_of_page #"a-textio.ads" 180 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_page.end_of_page file)) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_page__2

 val end_of_page__2 #"a-textio.ads" 181 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_page__2.end_of_page__2 ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_file

 val end_of_file #"a-textio.ads" 183 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_file.end_of_file file)) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_file__2

 val end_of_file__2 #"a-textio.ads" 184 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (Ada__text_io__end_of_file__2.end_of_file__2 ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_col #"a-textio.ads" 186 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col__2__axiom
 use import "_gnatprove_standard".Main

 val set_col__2 #"a-textio.ads" 187 0 0# 
   (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line #"a-textio.ads" 189 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line__2__axiom
 use import "_gnatprove_standard".Main

 val set_line__2 #"a-textio.ads" 190 0 0# 
   (to__ : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__col

 val col #"a-textio.ads" 192 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__col.col file)) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom col__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__col.col file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__col.col file) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__col__2

 val col__2 #"a-textio.ads" 193 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__col__2.col__2 ())) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom col__2__post_axiom :
  (forall __void_param : unit [(Ada__text_io__col__2.col__2 __void_param)].
   ( true -> (let result = (Ada__text_io__col__2.col__2 __void_param) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__line

 val line #"a-textio.ads" 195 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__line.line file)) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom line__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__line.line file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__line.line file) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__line__2

 val line__2 #"a-textio.ads" 196 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__line__2.line__2 ())) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom line__2__post_axiom :
  (forall __void_param : unit [(Ada__text_io__line__2.line__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line__2.line__2 __void_param) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__page

 val page #"a-textio.ads" 198 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__page.page file)) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom page__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__page.page file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__page.page file) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page__2__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count__axiom
 use        Ada__text_io__page__2

 val page__2 #"a-textio.ads" 199 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__page__2.page__2 ())) /\ (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True) ) }
 
 axiom page__2__post_axiom :
  (forall __void_param : unit [(Ada__text_io__page__2.page__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page__2.page__2 __void_param) in (
    (Ada__text_io__positive_count__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom
 use        Ada__text_io__file_type

 val get #"a-textio.ads" 205 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom

 val get__2 #"a-textio.ads" 206 0 0# 
   (item : int__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val put #"a-textio.ads" 207 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__2__axiom
 use import "_gnatprove_standard".Main

 val put__2 #"a-textio.ads" 208 0 0# 
   (item : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom
 use        Ada__text_io__file_type

 val look_ahead #"a-textio.ads" 210 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) (end_of_line : bool__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item, end_of_line}

end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom

 val look_ahead__2 #"a-textio.ads" 215 0 0# 
   (item : int__ref) (end_of_line : bool__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item, end_of_line}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom
 use        Ada__text_io__file_type

 val get_immediate #"a-textio.ads" 219 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom

 val get_immediate__2 #"a-textio.ads" 223 0 0# 
   (item : int__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom
 use        Ada__text_io__file_type

 val get_immediate__3 #"a-textio.ads" 226 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) (available : bool__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item, available}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character__axiom

 val get_immediate__4 #"a-textio.ads" 231 0 0# 
   (item : int__ref) (available : bool__ref) : unit
  requires { true }
  ensures { (Standard__character__axiom.dynamic_invariant item.int__content True True True) }
  writes {item, available}

end

(* Module for declaring a program function (and possibly an axiom) for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Ada__text_io__file_type
 use        Array__Int__Standard__character

 val get__3 #"a-textio.ads" 239 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Array__Int__Standard__character.map__ref) (item__first : int) (item__last : int) : unit
  requires { true }
  ensures { (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last item__first item__last))) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive
 use        Array__Int__Standard__character

 val get__4 #"a-textio.ads" 240 0 0# 
   (item : Array__Int__Standard__character.map__ref) (item__first : int) (item__last : int) : unit
  requires { true }
  ensures { (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last item__first item__last))) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put__3 #"a-textio.ads" 241 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put__4 #"a-textio.ads" 242 0 0# 
   (item : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural__axiom
 use        Standard__positive
 use        Ada__text_io__file_type
 use        Array__Int__Standard__character

 val get_line #"a-textio.ads" 244 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Array__Int__Standard__character.map__ref) (item__first : int) (item__last : int) (last : int__ref) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last item__first item__last))) /\ (Standard__natural__axiom.dynamic_invariant last.int__content True True True) ) }
  writes {item, last}

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural__axiom
 use        Standard__positive
 use        Array__Int__Standard__character

 val get_line__2 #"a-textio.ads" 249 0 0# 
   (item : Array__Int__Standard__character.map__ref) (item__first : int) (item__last : int) (last : int__ref) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last item__first item__last))) /\ (Standard__natural__axiom.dynamic_invariant last.int__content True True True) ) }
  writes {item, last}

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__3__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type__axiom
 use        Ada__text_io__get_line__3

 val get_line__3 #"a-textio.ads" 253 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__get_line__3.get_line__3 file)) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_line__3__post_axiom :
  (forall file : Ada__text_io__file_type.file_type [(Ada__text_io__get_line__3.get_line__3 file)].
   ( (Ada__text_io__file_type__axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__get_line__3.get_line__3 file) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__4__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Ada__text_io__get_line__4

 val get_line__4 #"a-textio.ads" 256 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__text_io__get_line__4.get_line__4 ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_line__4__post_axiom :
  (forall __void_param : unit [(Ada__text_io__get_line__4.get_line__4 __void_param)].
   ( true -> (let result = (Ada__text_io__get_line__4.get_line__4 __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put_line #"a-textio.ads" 259 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put_line__2 #"a-textio.ads" 263 0 0# 
   (item : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__eof_char__axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer__axiom
 use        Ada__text_io__eof_char

 val eof_char #"a-textio.ads" 460 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Ada__text_io__eof_char.eof_char ())) /\ (Standard__integer__axiom.dynamic_invariant result True False True) ) }
 
 axiom eof_char__post_axiom :
  (forall __void_param : unit [(Ada__text_io__eof_char.eof_char __void_param)].
   ( true -> (let result = (Ada__text_io__eof_char.eof_char __void_param) in (
    (Standard__integer__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__initialize_standard_files__axiom
 use import "_gnatprove_standard".Main

 val initialize_standard_files #"a-textio.ads" 466 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:49 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__contains__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__contains

 val contains #"list.ads" 49 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:52 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_size

 val get_size #"list.ads" 52 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_size.get_size a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:55 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element

 val get_element #"list.ads" 55 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element.get_element a location)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall location : int [(Stations__list_tracks__get_element.get_element a location)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Stations__list_tracks__get_element.get_element a location) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:58 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element_by_id

 val get_element_by_id #"list.ads" 58 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall id : int [(Stations__list_tracks__get_element_by_id.get_element_by_id a id)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__full__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__full

 val full #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__append__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val append #"list.ads" 62 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (d : Stations__list_tracks__data_type.data_type) (id : int) : unit
  requires { ( (id > 0) /\ (id <= 100) ) }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:75 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val delete_all #"list.ads" 75 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:87 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val replace_by_id #"list.ads" 87 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (id : int) (newvalue : Stations__list_tracks__data_type.data_type) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:91 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__init__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val init #"list.ads" 91 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__contains

 val contains #"list.ads" 49 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:52 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_size

 val get_size #"list.ads" 52 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_size.get_size a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element

 val get_element #"list.ads" 55 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element.get_element a location)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_trains__get_element.get_element a location)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_trains__get_element.get_element a location) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element_by_id

 val get_element_by_id #"list.ads" 58 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_trains__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:60 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__full

 val full #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__append__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val append #"list.ads" 62 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (d : Railsystems__list_trains__data_type.data_type) (id : int) : unit
  requires { ( (id > 0) /\ (id <= 100) ) }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:75 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val delete_all #"list.ads" 75 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val replace_by_id #"list.ads" 87 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (id : int) (newvalue : Railsystems__list_trains__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:91 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val init #"list.ads" 91 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__contains

 val contains #"list.ads" 49 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:52 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_size

 val get_size #"list.ads" 52 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_size.get_size a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element

 val get_element #"list.ads" 55 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element.get_element a location)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_stations__get_element.get_element a location)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_stations__get_element.get_element a location) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element_by_id

 val get_element_by_id #"list.ads" 58 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_stations__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:60 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__full

 val full #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__append__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val append #"list.ads" 62 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (d : Railsystems__list_stations__data_type.data_type) (id : int) : unit
  requires { ( (id > 0) /\ (id <= 100) ) }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:75 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val delete_all #"list.ads" 75 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val replace_by_id #"list.ads" 87 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (id : int) (newvalue : Railsystems__list_stations__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:91 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val init #"list.ads" 91 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at railsystems.ads:37, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val init #"railsystems.ads" 37 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrain" defined at railsystems.ads:38, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__list_trains__get_element
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrain #"railsystems.ads" 38 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) : unit
  requires { ( ( (id > 0) /\ (id < 101) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element.get_element (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrack" defined at railsystems.ads:47, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_element
 use        Stations__list_tracks__get_element_by_id
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrack #"railsystems.ads" 47 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) (origin : int) (destination : int) (lineorigin : int) (linedestination : int) : unit
  requires { ( ( ( ( ( ( ( ( ( (id >= 1) /\ (id <= 100) ) /\ (origin <> 0) ) /\ (destination <> 0) ) /\ (lineorigin <> 0) ) /\ (linedestination <> 0) ) /\ (origin <> destination) ) /\ (lineorigin <> linedestination) ) /\ (if ((id <> 0)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) id)))) = 0)) else (
   true)) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addstation" defined at railsystems.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addstation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size
 use        Railsystems__list_stations__get_element
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addstation #"railsystems.ads" 68 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) (location : int) : unit
  requires { ( ( ( ( (id >= 1) /\ (id <= 100) ) /\ (if ((id <> 0)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) id)))) = 0)) else (
   true)) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> id) )) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> location) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacestation" defined at railsystems.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacestation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__station
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacestation #"railsystems.ads" 84 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (station : Stations__station.station) : unit
  requires { ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields station))) <> 0) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrain" defined at railsystems.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrain #"railsystems.ads" 88 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train : Trains__train.train) : unit
  requires { ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) > 0) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrack" defined at railsystems.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Tracks__track
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrack #"railsystems.ads" 92 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (track : Tracks__track.track) : unit
  requires { ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields track))) > 0) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addincomingoutgoingtracksforeachstation #"railsystems.ads" 96 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "gettrackbyname" defined at railsystems.ads:163, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrackbyname__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Tracks__track
 use        Tracks__track__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname

 val gettrackbyname #"railsystems.ads" 163 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track
  requires { ( (origin <> 0) /\ (destination <> 0) ) }
  ensures { ( (result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination)) /\ (Tracks__track__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrackbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall origin destination : int [(Railsystems__gettrackbyname.gettrackbyname r_system origin destination)].
   ( ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range origin) ) /\ (Types__station_locations.in_range destination) ) /\ ( (origin <> 0) /\ (destination <> 0) ) ) -> (let result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination) in (
    (Tracks__track__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "getstationbyname" defined at railsystems.ads:154, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__getstationbyname__axiom
 use import "_gnatprove_standard".Main
 use        Types__station_locations
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val getstationbyname #"railsystems.ads" 154 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station
  requires { true }
  ensures { ( (result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation)) /\ (Stations__station__axiom.dynamic_invariant result True False True) ) }
 
 axiom getstationbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall stationlocation : int [(Railsystems__getstationbyname.getstationbyname r_system stationlocation)].
   ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range stationlocation) ) -> (let result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation) in (
    (Stations__station__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "go" defined at railsystems.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__go__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__character
 use        Types__train_state
 use        Types__station_locations
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_element
 use        Stations__station
 use        Trains__train_location__T1s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname
 use        Railsystems__getstationbyname
 use        Array__Int__Standard__character
 use        Temp___1025

 val go #"railsystems.ads" 104 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (count : int) : unit
  requires { ( ( ( ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) /\ ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ (if (( ((let temp___1026 = (Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))) in (
   (Array__Int__Standard__character.bool_eq temp___1026 Trains__train_location__T1s.first Trains__train_location__T1s.last Temp___1025.temp___1025 1 7)))
   = True) /\ ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) )) then (
   (forall index : int.
    ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))))) ) -> (if (( ( ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) = (Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) ) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) )) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields (Railsystems__gettrackbyname.gettrackbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))))))))) index)))))))) = 0)) else (
     true)) ))) else (
   true)) ) /\ (if (( ( ( ( false /\ ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) <> 0) )) then (
   ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) = 0)) else (
   true)) ) }
  ensures { ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "preparetrain" defined at railsystems.ads:136, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__preparetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__get_size
 use        Types__list_od__get_element
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val preparetrain #"railsystems.ads" 136 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (origin : int) (destination : int) (starttime : int) : unit
  requires { ( ( ( ( (origin <> 0) /\ (destination <> 0) ) /\ (origin <> destination) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) /\ (if ((origin <> 0)) then (
   (exists index  : int.
    ( ( (1 <= index) /\ (index <= (Types__list_od__get_size.get_size (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin))))) ) /\ ( ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin))) index)))) = origin) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin))) index)))) = origin) ) /\ ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin))) index)))) = destination) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin))) index)))) = destination) ) ) ))) else (
   true)) ) }
  ensures { ( ( ( ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = origin) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = destination) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "gettrainbyid" defined at railsystems.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrainbyid__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrainbyid

 val gettrainbyid #"railsystems.ads" 168 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train
  requires { ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system)))) ) }
  ensures { ( (result = (Railsystems__gettrainbyid.gettrainbyid r_system id)) /\ (Trains__train__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrainbyid__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall id : int [(Railsystems__gettrainbyid.gettrainbyid r_system id)].
   ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Standard__natural.in_range id) ) /\ ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system)))) ) ) -> (let result = (Railsystems__gettrainbyid.gettrainbyid r_system id) in (
    (Trains__train__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "railsystems" defined at railsystems.ads:8, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Railsystems__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Stations__station__axiom
 use        Trains__train_location__T1s
 use        Trains__train_location__T4s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__tn
 use        Railsystems__sn
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__tn__axiom
 use        Railsystems__sn__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T4s__axiom
 use        Trains__train_location__T5s__axiom

 let def #"railsystems.ads" 168 0 0# "GP_Subp:railsystems.ads:8" "W:diverges:N" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( #"railsystems.ads" 168 0 0# abstract ensures {true}(let _ = #"railsystems.ads" 14 0 0# abstract ensures {true}(let _ = (let temp___1038 = #"trains.ads" 17 0 0# (any Trains__train.train
  requires {true} 
  ensures {true} 
  ) in (
   ( (if ((Trains__train.id__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Trains__train.location__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (let temp___1039 = #"trains.ads" 9 0 0# (any Trains__train_location.train_location
    requires {true} 
    ensures {true} 
    ) in (
     ( (if ((Trains__train_location.currentlocation__pred(temp___1039))) then (
      #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 11 0 0# assert { ( #"trains.ads" 11 0 0# "model_vc" "keep_on_simp" "GP_Sloc:trains.ads:11:40" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:0" "comment:         currentLocation:String(1..7):=\"None   \";
                                       ^ trains.ads:11:40:VC_LENGTH_CHECK" "GP_Shape:train_location_def" ((if ((1 <= 7)) then (
       ((7 - 1) + 1)) else (
       0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
       ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
       0))) ) };
      Temp___723.temp___723 ) in (
       ()))
       end ));
     (if ((Trains__train_location.none__pred(temp___1039))) then (
      #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 12 0 0# assert { ( #"trains.ads" 12 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Sloc:trains.ads:12:30" "GP_Id:1" "comment:         None: String(1..4):=\"None\";
                             ^ trains.ads:12:30:VC_LENGTH_CHECK" ((if ((1 <= 4)) then (
       ((4 - 1) + 1)) else (
       0)) = (if ((Trains__train_location__T4s.first <= Trains__train_location__T4s.last)) then (
       ((Trains__train_location__T4s.last - Trains__train_location__T4s.first) + 1)) else (
       0))) ) };
      Temp___724.temp___724 ) in (
       ()))
       end ));
     (if ((Trains__train_location.track__pred(temp___1039))) then (
      #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1040 = #"tracks.ads" 7 0 0# (any Tracks__track.track
      requires {true} 
      ensures {true} 
      ) in (
       ( (if ((Tracks__track.id__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Tracks__track.origin__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Tracks__track.destination__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Tracks__track.trainid__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Tracks__track.trackslineorigin__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Tracks__track.trackslinedestination__pred(temp___1040))) then (
        #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end )) )))
       in (
       ()))
       end ));
     (if ((Trains__train_location.station__pred(temp___1039))) then (
      #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1041 = #"stations.ads" 18 0 0# (any Stations__station.station
      requires {true} 
      ensures {true} 
      ) in (
       ( (if ((Stations__station.id__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Stations__station.location__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Stations__station.trainid__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
         ()))
         end ));
       (if ((Stations__station.incoming__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1042 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1042))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1042))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
           ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
           0)) > 0)) then (
           #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1043 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
           requires {true} 
           ensures {true} 
           ) in (
            ( (if ((Stations__list_tracks__data.data__pred(temp___1043))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1044 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
             requires {true} 
             ensures {true} 
             ) in (
              ( (if ((Stations__list_tracks__data_type.id__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.origin__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.destination__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trainid__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1044))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end )) )))
              in (
              ()))
              end ));
            (if ((Stations__list_tracks__data.id__pred(temp___1043))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
              ()))
              end )) )))
            in (
            ()))
            end )) in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.head__pred(temp___1042))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1042))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
           ()))
           end )) )))
         in (
         ()))
         end ));
       (if ((Stations__station.outgoing__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1045 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1045))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1045))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
           ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
           0)) > 0)) then (
           #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1046 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
           requires {true} 
           ensures {true} 
           ) in (
            ( (if ((Stations__list_tracks__data.data__pred(temp___1046))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1047 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
             requires {true} 
             ensures {true} 
             ) in (
              ( (if ((Stations__list_tracks__data_type.id__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.origin__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.destination__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trainid__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1047))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end )) )))
              in (
              ()))
              end ));
            (if ((Stations__list_tracks__data.id__pred(temp___1046))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
              ()))
              end )) )))
            in (
            ()))
            end )) in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.head__pred(temp___1045))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
           ()))
           end ));
         (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1045))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
           ()))
           end )) )))
         in (
         ()))
         end ));
       (if ((Stations__station.trackslineoriginanddestination__pred(temp___1041))) then (
        #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1048 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__list_ptr.size__pred(temp___1048))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end ));
         (if ((Types__list_od__list_ptr.elements__pred(temp___1048))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
           ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
           0)) > 0)) then (
           #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1049 = #"list.ads" 95 0 0# (any Types__list_od__data.data
           requires {true} 
           ensures {true} 
           ) in (
            ( (if ((Types__list_od__data.data__pred(temp___1049))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1050 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
             requires {true} 
             ensures {true} 
             ) in (
              ( (if ((Types__list_od__data_type.origin__pred(temp___1050))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end ));
              (if ((Types__list_od__data_type.destination__pred(temp___1050))) then (
               #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                ()))
                end )) )))
              in (
              ()))
              end ));
            (if ((Types__list_od__data.id__pred(temp___1049))) then (
             #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
              ()))
              end )) )))
            in (
            ()))
            end )) in (
           ()))
           end ));
         (if ((Types__list_od__list_ptr.head__pred(temp___1048))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
           ()))
           end ));
         (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1048))) then (
          #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
           ()))
           end )) )))
         in (
         ()))
         end )) )))
       in (
       ()))
       end )) )))
     in (
     ()))
     end ));
   (if ((Trains__train.origin__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Trains__train.destination__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Trains__train.state__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 3 in (
     ()))
     end ));
   (if ((Trains__train.start_run_time__pred(temp___1038))) then (
    #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end )) )))
   in (
   ()))
   end  in (
   ()))
   end ;
  #"railsystems.ads" 14 0 0# assume { (Trains__train__axiom.default_initial_assumption { Trains__train.__split_fields = Railsystems__tn.tn__split_fields.Trains__train.__split_fields__content } False) };
  #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__tn.tn__split_fields.Trains__train.__split_fields__content } False False True) };
  #"trains.ads" 17 0 0# abstract ensures {true}(let _ = #"railsystems.ads" 21 0 0# abstract ensures {true}(let _ = (let temp___1027 = #"stations.ads" 18 0 0# (any Stations__station.station
  requires {true} 
  ensures {true} 
  ) in (
   ( (if ((Stations__station.id__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Stations__station.location__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Stations__station.trainid__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
     ()))
     end ));
   (if ((Stations__station.incoming__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1028 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
    requires {true} 
    ensures {true} 
    ) in (
     ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1028))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1028))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
       ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
       0)) > 0)) then (
       #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1029 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Stations__list_tracks__data.data__pred(temp___1029))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1030 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__data_type.id__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.origin__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.destination__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trainid__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1030))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__list_tracks__data.id__pred(temp___1029))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end )) in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.head__pred(temp___1028))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1028))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
       ()))
       end )) )))
     in (
     ()))
     end ));
   (if ((Stations__station.outgoing__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1031 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
    requires {true} 
    ensures {true} 
    ) in (
     ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1031))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1031))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
       ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
       0)) > 0)) then (
       #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1032 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Stations__list_tracks__data.data__pred(temp___1032))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1033 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__data_type.id__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.origin__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.destination__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trainid__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1033))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__list_tracks__data.id__pred(temp___1032))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end )) in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.head__pred(temp___1031))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
       ()))
       end ));
     (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1031))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
       ()))
       end )) )))
     in (
     ()))
     end ));
   (if ((Stations__station.trackslineoriginanddestination__pred(temp___1027))) then (
    #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1034 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
    requires {true} 
    ensures {true} 
    ) in (
     ( (if ((Types__list_od__list_ptr.size__pred(temp___1034))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
       ()))
       end ));
     (if ((Types__list_od__list_ptr.elements__pred(temp___1034))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
       ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
       0)) > 0)) then (
       #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1035 = #"list.ads" 95 0 0# (any Types__list_od__data.data
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Types__list_od__data.data__pred(temp___1035))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1036 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Types__list_od__data_type.origin__pred(temp___1036))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Types__list_od__data_type.destination__pred(temp___1036))) then (
           #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Types__list_od__data.id__pred(temp___1035))) then (
         #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end )) in (
       ()))
       end ));
     (if ((Types__list_od__list_ptr.head__pred(temp___1034))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
       ()))
       end ));
     (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1034))) then (
      #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
       ()))
       end )) )))
     in (
     ()))
     end )) )))
   in (
   ()))
   end  in (
   ()))
   end ;
  #"railsystems.ads" 21 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__sn.sn__split_fields.Stations__station.__split_fields__content } False) };
  #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__sn.sn__split_fields.Stations__station.__split_fields__content } False False True) };
  ( "GP_Sloc:railsystems.adb:451:1" () ) )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "list_trains" defined at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Railsystems__list_trains__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Trains__train
 use        Railsystems__tn
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__e_id
 use        Railsystems__list_trains__max_size
 use        Railsystems__list_trains__no_found
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__tn__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__e_id__axiom
 use        Railsystems__list_trains__max_size__axiom
 use        Railsystems__list_trains__no_found__axiom

 let def #"stations.ads" 18 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:15" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
   ()))
   end ;
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__e_id.e_id True False True) };
  #"list.ads" 23 0 0# abstract ensures {true}(let _ = 100 in (
   ()))
   end ;
  #"system.ads" 1 0 0# assume { (Standard__positive__axiom.dynamic_invariant Railsystems__list_trains__max_size.max_size True False True) };
  (let railsystems__list_trains__no_found__assume = (Railsystems__list_trains__data_type.of_base({ Trains__train.__split_fields = Railsystems__tn.tn__split_fields.Trains__train.__split_fields__content })) in (
   #"railsystems.ads" 19 0 0# assume { (railsystems__list_trains__no_found__assume = Railsystems__list_trains__no_found.no_found) }))
  ;
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  ( "GP_Sloc:list.adb:234:1:instantiated:railsystems.ads:15:4" () ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "contains" defined at list.ads:49 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__contains__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Trains__train
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__contains__a
 use        Railsystems__list_trains__contains__d
 use        Railsystems__list_trains__contains__size
 use        Railsystems__list_trains__contains__contain
 use        Railsystems__list_trains__contains__L_1__R37s
 use        Railsystems__list_trains__contains__L_1
 use        Railsystems__list_trains__contains__L_1__T38s
 use        Railsystems__list_trains__contains__L_1__i
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__contains__a__axiom
 use        Railsystems__list_trains__contains__d__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_trains__contains__size__axiom
 use        Railsystems__list_trains__contains__contain__axiom
 use        Railsystems__list_trains__contains__L_1__axiom
 use        Railsystems__list_trains__contains__L_1__i__axiom
 use        Railsystems__list_trains__contains__L_1__R37s__axiom
 use        Railsystems__list_trains__contains__L_1__T38s__axiom

 val railsystems__list_trains__contains__result #"list.ads" 25 0 0# "model" "model_trace:24489@result"  : bool__ref 
 
 let def #"list.ads" 25 0 0# "W:diverges:N" "GP_Subp:list.ads:49" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant Railsystems__list_trains__contains__a.a True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__contains__d.d True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 49 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 49 0 0# assume { true };
  () (* checking of pragma precondition list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  try
   ( #"list.ads" 49 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"list.adb" 19 0 0# assume { (Standard__natural__axiom.default_initial_assumption Railsystems__list_trains__contains__size.size.int__content False) };
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__contains__size.size.int__content False False True) };
   ( "GP_Sloc:list.adb:22:11:instantiated:railsystems.ads:15:4" #"list.adb" 22 0 0# Railsystems__list_trains__contains__size.size.int__content <- ( (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__contains__a.a)))))) ) );
   ( "GP_Sloc:list.adb:23:14:instantiated:railsystems.ads:15:4" #"list.adb" 23 0 0# Railsystems__list_trains__contains__contain.contain.bool__content <- ( (Boolean.of_int(0)) ) );
   ( "GP_Sloc:list.adb:24:21:instantiated:railsystems.ads:15:4" ( (let railsystems__list_trains__contains__L_1__R37s__assume = Railsystems__list_trains__contains__size.size.int__content in (
    #"list.adb" 24 0 0# assume { (railsystems__list_trains__contains__L_1__R37s__assume = Railsystems__list_trains__contains__L_1__R37s.r37s) }))
   ;
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__contains__L_1__R37s.r37s True False True) } ) );
   ( "GP_Sloc:list.adb:24:26:instantiated:railsystems.ads:15:4" (let temp___1054 = 1 in (
   (let temp___1055 = Railsystems__list_trains__contains__L_1__R37s.r37s in (
    ( #"list.adb" 24 0 0# Railsystems__list_trains__contains__L_1__i.i.int__content <- ( temp___1054 );
    () (* Translation of an Ada loop from list.adb:24 instantiated at railsystems.ads:15 *)
    ;
    (if ((Boolean.andb((temp___1054 <= Railsystems__list_trains__contains__L_1__i.i.int__content)) ((Railsystems__list_trains__contains__L_1__i.i.int__content <= temp___1055)))) then (
     try
      ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:24 instantiated at railsystems.ads:15 *)
      ;
      ( "GP_Sloc:list.adb:25:10:instantiated:railsystems.ads:15:4" (if ((Railsystems__list_trains__contains__L_1__i.i.int__content < 100)) then (
       ( "GP_Sloc:list.adb:26:13:instantiated:railsystems.ads:15:4" (if (((Standard__natural.to_rep((Railsystems__list_trains__data.rec__id((Railsystems__list_trains__data.__split_fields((let temp___1053 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__contains__a.a)))) in (
        (Array__Int__Railsystems__list_trains__data.get(temp___1053) (( #"list.adb" 26 0 0# assert { ( #"list.adb" 26 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:26:27:instantiated:railsystems.ads:15:4" "GP_Id:3" "comment:            if A.ELEMENTS(i).ID /=0 then
                          ^ list.adb:26:27:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__contains__L_1__i.i.int__content) /\ (Railsystems__list_trains__contains__L_1__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
        Railsystems__list_trains__contains__L_1__i.i.int__content )))))
       )))))) <> 0)) then (
        ( "GP_Sloc:list.adb:27:16:instantiated:railsystems.ads:15:4" (if ((Trains__train.bool_eq((Railsystems__list_trains__data_type.to_base((Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields((let temp___1052 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__contains__a.a)))) in (
         (Array__Int__Railsystems__list_trains__data.get(temp___1052) (( #"list.adb" 27 0 0# assert { ( #"list.adb" 27 0 0# "model_vc" "keep_on_simp" "GP_Sloc:list.adb:27:30:instantiated:railsystems.ads:15:4" "GP_Reason:VC_INDEX_CHECK" "GP_Id:2" "comment:               if A.ELEMENTS(i).DATA = D then
                             ^ list.adb:27:30:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__contains__L_1__i.i.int__content) /\ (Railsystems__list_trains__contains__L_1__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
         Railsystems__list_trains__contains__L_1__i.i.int__content )))))
        ))))))) ((Railsystems__list_trains__data_type.to_base(Railsystems__list_trains__contains__d.d))))) then (
         ( ( "GP_Sloc:list.adb:28:26:instantiated:railsystems.ads:15:4" #"list.adb" 28 0 0# Railsystems__list_trains__contains__contain.contain.bool__content <- ( (Boolean.of_int(1)) ) );
         ( "GP_Sloc:list.adb:29:19:instantiated:railsystems.ads:15:4" ( #"list.adb" 29 0 0# railsystems__list_trains__contains__result.bool__content <- ( Railsystems__list_trains__contains__contain.contain.bool__content );
         #"list.adb" 29 0 0# raise Return__exc ) ) )) else (
         ())) )) else (
        ())) )) else (
       ())) );
      () (* While loop translating the Ada loop from list.adb:24 instantiated at railsystems.ads:15 *)
      ;
      #"list.adb" 24 0 0# while True do
       invariant { 
        ( #"list.adb" 34 0 0# "model_vc" "keep_on_simp" "GP_Sloc:list.adb:34:10:instantiated:railsystems.ads:15:4" "GP_Reason:VC_LOOP_INVARIANT" "GP_Id:4" "comment:         pragma Loop_Invariant(contain = False);
         ^ list.adb:34:10:instantiated:railsystems.ads:15:4:VC_LOOP_INVARIANT" "GP_Shape:L_1_while" ( "GP_Pretty_Ada:28722" "GP_Sloc:list.adb:34:32:instantiated:railsystems.ads:15:4" ( (Railsystems__list_trains__contains__contain.contain.bool__content = True) <-> false ) ) )
        }
       ( () (* Assume implicit invariants from the loop list.adb:24 instantiated at railsystems.ads:15 *)
       ;
       #"system.ads" 1 0 0# assume { (Boolean.andb((if ((1 <= Railsystems__list_trains__contains__L_1__R37s.r37s)) then (
        (Railsystems__list_trains__contains__L_1__T38s.dynamic_property 1 Railsystems__list_trains__contains__L_1__R37s.r37s Railsystems__list_trains__contains__L_1__i.i.int__content)) else true)) (( (1 <= Railsystems__list_trains__contains__L_1__i.i.int__content) /\ (Railsystems__list_trains__contains__L_1__i.i.int__content <= Railsystems__list_trains__contains__L_1__R37s.r37s) ))) };
       () (* Check for absence of RTE in the invariant of loop list.adb:24 instantiated at railsystems.ads:15 *)
       ;
       #"list.adb" 24 0 0# abstract ensures {true}(let _ = ((Boolean.to_int(Railsystems__list_trains__contains__contain.contain.bool__content)) = (Boolean.to_int((Boolean.of_int(0))))) in (
        ()))
        end ;
       () (* Loop statements appearing after the loop invariant of loop list.adb:24 instantiated at railsystems.ads:15 *)
       ;
       #"list.adb" 24 0 0# Railsystems__list_trains__contains__L_1__i.i.int__content <- ( (Railsystems__list_trains__contains__L_1__i.i.int__content + 1) );
       () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:24 instantiated at railsystems.ads:15 *)
       ;
       (if ((Railsystems__list_trains__contains__L_1__i.i.int__content <= temp___1055)) then (
        ( "GP_Sloc:list.adb:25:10:instantiated:railsystems.ads:15:4" (if ((Railsystems__list_trains__contains__L_1__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:26:13:instantiated:railsystems.ads:15:4" (if (((Standard__natural.to_rep((Railsystems__list_trains__data.rec__id((Railsystems__list_trains__data.__split_fields((let temp___1053 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__contains__a.a)))) in (
          (Array__Int__Railsystems__list_trains__data.get(temp___1053) (( #"list.adb" 26 0 0# assert { ( #"list.adb" 26 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:26:27:instantiated:railsystems.ads:15:4" "GP_Id:3" "comment:            if A.ELEMENTS(i).ID /=0 then
                          ^ list.adb:26:27:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__contains__L_1__i.i.int__content) /\ (Railsystems__list_trains__contains__L_1__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
          Railsystems__list_trains__contains__L_1__i.i.int__content )))))
         )))))) <> 0)) then (
          ( "GP_Sloc:list.adb:27:16:instantiated:railsystems.ads:15:4" (if ((Trains__train.bool_eq((Railsystems__list_trains__data_type.to_base((Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields((let temp___1052 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__contains__a.a)))) in (
           (Array__Int__Railsystems__list_trains__data.get(temp___1052) (( #"list.adb" 27 0 0# assert { ( #"list.adb" 27 0 0# "model_vc" "keep_on_simp" "GP_Sloc:list.adb:27:30:instantiated:railsystems.ads:15:4" "GP_Reason:VC_INDEX_CHECK" "GP_Id:2" "comment:               if A.ELEMENTS(i).DATA = D then
                             ^ list.adb:27:30:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__contains__L_1__i.i.int__content) /\ (Railsystems__list_trains__contains__L_1__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
           Railsystems__list_trains__contains__L_1__i.i.int__content )))))
          ))))))) ((Railsystems__list_trains__data_type.to_base(Railsystems__list_trains__contains__d.d))))) then (
           ( ( "GP_Sloc:list.adb:28:26:instantiated:railsystems.ads:15:4" #"list.adb" 28 0 0# Railsystems__list_trains__contains__contain.contain.bool__content <- ( (Boolean.of_int(1)) ) );
           ( "GP_Sloc:list.adb:29:19:instantiated:railsystems.ads:15:4" ( #"list.adb" 29 0 0# railsystems__list_trains__contains__result.bool__content <- ( Railsystems__list_trains__contains__contain.contain.bool__content );
           #"list.adb" 29 0 0# raise Return__exc ) ) )) else (
           ())) )) else (
          ())) )) else (
         ())) )) else (
        #"list.adb" 29 0 0# raise Railsystems__list_trains__contains__L_1.L_1)) )
      done )
     with
      Railsystems__list_trains__contains__L_1.L_1 -> ()
     end)) )))
   ))
    );
   ( "GP_Sloc:list.adb:36:7:instantiated:railsystems.ads:15:4" ( #"list.adb" 36 0 0# railsystems__list_trains__contains__result.bool__content <- ( Railsystems__list_trains__contains__contain.contain.bool__content );
   #"list.adb" 36 0 0# raise Return__exc ) );
   #"list.adb" 17 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:49 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 17 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_trains__contains__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_size" defined at list.ads:52 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__get_size__subprogram_def
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_size__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_size__a__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 val railsystems__list_trains__get_size__result #"list.adb" 17 0 0# "model" "model_trace:24517@result"  : int__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:list.ads:52" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant Railsystems__list_trains__get_size__a.a True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 52 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 52 0 0# assume { true };
  () (* checking of pragma precondition list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:48:7:instantiated:railsystems.ads:15:4" ( #"list.adb" 48 0 0# railsystems__list_trains__get_size__result.int__content <- ( (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_size__a.a)))))) );
   #"list.adb" 48 0 0# raise Return__exc ) );
   #"list.adb" 44 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:52 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 44 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_trains__get_size__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_element" defined at list.ads:55 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__get_element__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element__a
 use        Railsystems__list_trains__get_element__location
 use        Array__Int__Railsystems__list_trains__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_element__a__axiom
 use        Railsystems__list_trains__get_element__location__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 val railsystems__list_trains__get_element__result #"system.ads" 1 0 0# "model_projected" "model_trace:24536@result"  : Railsystems__list_trains__data_type.data_type__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:55" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant Railsystems__list_trains__get_element__a.a True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__get_element__location.location True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:120:7:instantiated:railsystems.ads:15:4" (if ((Boolean.orb((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element__a.a)))))) = 0)) ((Railsystems__list_trains__get_element__location.location <= 0)))) ((Railsystems__list_trains__get_element__location.location > (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element__a.a)))))))))) ((Railsystems__list_trains__get_element__location.location > 100)))) then (
    ( "GP_Sloc:list.adb:123:10:instantiated:railsystems.ads:15:4" ( #"list.adb" 123 0 0# railsystems__list_trains__get_element__result.Railsystems__list_trains__data_type.data_type__content <- ( Railsystems__list_trains__no_found.no_found );
    #"list.adb" 123 0 0# raise Return__exc ) )) else (
    ( "GP_Sloc:list.adb:125:10:instantiated:railsystems.ads:15:4" ( #"list.adb" 125 0 0# railsystems__list_trains__get_element__result.Railsystems__list_trains__data_type.data_type__content <- ( (Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields((let temp___1056 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element__a.a)))) in (
     (Array__Int__Railsystems__list_trains__data.get(temp___1056) (( #"list.adb" 125 0 0# assert { ( #"list.adb" 125 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:125:28:instantiated:railsystems.ads:15:4" "GP_Id:5" "comment:         return A.ELEMENTS(LOCATION).DATA;
                           ^ list.adb:125:28:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__return__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__get_element__location.location) /\ (Railsystems__list_trains__get_element__location.location <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
     Railsystems__list_trains__get_element__location.location )))))
    )))) );
    #"list.adb" 125 0 0# raise Return__exc ) ))) );
   #"list.adb" 116 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:55 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 116 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_trains__get_element__result.Railsystems__list_trains__data_type.data_type__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__get_element_by_id__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location__T1s
 use        Trains__train_location__T4s
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element_by_id__a
 use        Railsystems__list_trains__get_element_by_id__id
 use        Railsystems__list_trains__get_element_by_id__data
 use        Railsystems__list_trains__get_element_by_id__L_2__R46s
 use        Railsystems__list_trains__get_element_by_id__L_2
 use        Railsystems__list_trains__get_element_by_id__L_2__T47s
 use        Railsystems__list_trains__get_element_by_id__L_2__i
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T4s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_element_by_id__a__axiom
 use        Railsystems__list_trains__get_element_by_id__id__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_trains__get_element_by_id__data__axiom
 use        Railsystems__list_trains__get_element_by_id__L_2__axiom
 use        Railsystems__list_trains__get_element_by_id__L_2__i__axiom
 use        Railsystems__list_trains__get_element_by_id__L_2__R46s__axiom
 use        Railsystems__list_trains__get_element_by_id__L_2__T47s__axiom

 val railsystems__list_trains__get_element_by_id__result #"list.ads" 22 0 0# "model_projected" "model_trace:24564@result"  : Railsystems__list_trains__data_type.data_type__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:58" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant Railsystems__list_trains__get_element_by_id__a.a True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__get_element_by_id__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  try
   ( #"list.ads" 25 0 0# abstract ensures {true}(let _ = #"list.adb" 137 0 0# abstract ensures {true}(let _ = (let temp___1058 = #"list.ads" 22 0 0# (any Railsystems__list_trains__data_type.data_type
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Railsystems__list_trains__data_type.id__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_trains__data_type.location__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = (let temp___1059 = #"trains.ads" 9 0 0# (any Trains__train_location.train_location
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Trains__train_location.currentlocation__pred(temp___1059))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 11 0 0# assert { ( #"trains.ads" 11 0 0# "model_vc" "keep_on_simp" "GP_Sloc:trains.ads:11:40" "GP_Reason:VC_LENGTH_CHECK" "comment:         currentLocation:String(1..7):=\"None   \";
                                       ^ trains.ads:11:40:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Id:6" ((if ((1 <= 7)) then (
        ((7 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
        ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
        0))) ) };
       Temp___723.temp___723 ) in (
        ()))
        end ));
      (if ((Trains__train_location.none__pred(temp___1059))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 12 0 0# assert { ( #"trains.ads" 12 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Sloc:trains.ads:12:30" "comment:         None: String(1..4):=\"None\";
                             ^ trains.ads:12:30:VC_LENGTH_CHECK" "GP_Id:7" ((if ((1 <= 4)) then (
        ((4 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T4s.first <= Trains__train_location__T4s.last)) then (
        ((Trains__train_location__T4s.last - Trains__train_location__T4s.first) + 1)) else (
        0))) ) };
       Temp___724.temp___724 ) in (
        ()))
        end ));
      (if ((Trains__train_location.track__pred(temp___1059))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1060 = #"tracks.ads" 7 0 0# (any Tracks__track.track
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Tracks__track.id__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.origin__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.destination__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trainid__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslineorigin__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslinedestination__pred(temp___1060))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end ));
      (if ((Trains__train_location.station__pred(temp___1059))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1061 = #"stations.ads" 18 0 0# (any Stations__station.station
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Stations__station.id__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.location__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.trainid__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.incoming__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1062 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1062))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1062))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1063 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1063))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1064 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1064))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1063))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1062))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1062))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.outgoing__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1065 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1065))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1065))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1066 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1066))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1067 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1067))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1066))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1065))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1065))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.trackslineoriginanddestination__pred(temp___1061))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1068 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Types__list_od__list_ptr.size__pred(temp___1068))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.elements__pred(temp___1068))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
            ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1069 = #"list.ads" 95 0 0# (any Types__list_od__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Types__list_od__data.data__pred(temp___1069))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1070 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Types__list_od__data_type.origin__pred(temp___1070))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Types__list_od__data_type.destination__pred(temp___1070))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Types__list_od__data.id__pred(temp___1069))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.head__pred(temp___1068))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1068))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end )) )))
        in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Railsystems__list_trains__data_type.origin__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_trains__data_type.destination__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_trains__data_type.state__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 3 in (
      ()))
      end ));
    (if ((Railsystems__list_trains__data_type.start_run_time__pred(temp___1058))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"list.adb" 137 0 0# assume { (Railsystems__list_trains__data_type__axiom.default_initial_assumption { Railsystems__list_trains__data_type.__split_fields = Railsystems__list_trains__get_element_by_id__data.data__split_fields.Railsystems__list_trains__data_type.__split_fields__content } False) };
   #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant { Railsystems__list_trains__data_type.__split_fields = Railsystems__list_trains__get_element_by_id__data.data__split_fields.Railsystems__list_trains__data_type.__split_fields__content } False False True) };
   ( "GP_Sloc:list.adb:141:7:instantiated:railsystems.ads:15:4" (if ((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element_by_id__a.a)))))) = 0)) ((Railsystems__list_trains__get_element_by_id__id.id <= 0)))) ((Railsystems__list_trains__get_element_by_id__id.id > (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element_by_id__a.a)))))))))) then (
    ( "GP_Sloc:list.adb:144:10:instantiated:railsystems.ads:15:4" ( #"list.adb" 144 0 0# railsystems__list_trains__get_element_by_id__result.Railsystems__list_trains__data_type.data_type__content <- ( Railsystems__list_trains__no_found.no_found );
    #"list.adb" 144 0 0# raise Return__exc ) )) else (
    ( ( "GP_Sloc:list.adb:148:25:instantiated:railsystems.ads:15:4" ( (let railsystems__list_trains__get_element_by_id__L_2__R46s__assume = (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element_by_id__a.a)))))) in (
     #"list.adb" 148 0 0# assume { (railsystems__list_trains__get_element_by_id__L_2__R46s__assume = Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s True False True) } ) );
    ( "GP_Sloc:list.adb:148:31:instantiated:railsystems.ads:15:4" (let temp___1075 = 1 in (
    (let temp___1076 = Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s in (
     ( #"list.adb" 148 0 0# Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <- ( temp___1075 );
     () (* Translation of an Ada loop from list.adb:148 instantiated at railsystems.ads:15 *)
     ;
     (if ((Boolean.andb((temp___1075 <= Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content)) ((Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <= temp___1076)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:148 instantiated at railsystems.ads:15 *)
       ;
       () (* While loop translating the Ada loop from list.adb:148 instantiated at railsystems.ads:15 *)
       ;
       #"list.adb" 148 0 0# while True do
        ( () (* Assume implicit invariants from the loop list.adb:148 instantiated at railsystems.ads:15 *)
        ;
        #"list.adb" 148 0 0# assume { (Boolean.andb((Boolean.andb((if ((1 <= Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s)) then (
         (Railsystems__list_trains__get_element_by_id__L_2__T47s.dynamic_property 1 Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content)) else true)) ((Railsystems__list_trains__data_type__axiom.dynamic_invariant { Railsystems__list_trains__data_type.__split_fields = Railsystems__list_trains__get_element_by_id__data.data__split_fields.Railsystems__list_trains__data_type.__split_fields__content } False True True)))) (( (1 <= Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_trains__get_element_by_id__L_2__R46s.r46s) ))) };
        () (* Check for absence of RTE in the invariant of loop list.adb:148 instantiated at railsystems.ads:15 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop list.adb:148 instantiated at railsystems.ads:15 *)
        ;
        ( "GP_Sloc:list.adb:149:13:instantiated:railsystems.ads:15:4" (if ((Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:150:16:instantiated:railsystems.ads:15:4" (if (((Standard__natural.to_rep((Railsystems__list_trains__data.rec__id((Railsystems__list_trains__data.__split_fields((let temp___1074 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element_by_id__a.a)))) in (
          (Array__Int__Railsystems__list_trains__data.get(temp___1074) (( #"list.adb" 150 0 0# assert { ( #"list.adb" 150 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:150:30:instantiated:railsystems.ads:15:4" "GP_Id:9" "comment:               if A.ELEMENTS(i).ID = ID then
                             ^ list.adb:150:30:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__L_2_while__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
          Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content )))))
         )))))) = Railsystems__list_trains__get_element_by_id__id.id)) then (
          ( "GP_Sloc:list.adb:151:23:instantiated:railsystems.ads:15:4" (let temp___1073 = (Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields((let temp___1072 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__get_element_by_id__a.a)))) in (
           (Array__Int__Railsystems__list_trains__data.get(temp___1072) (( #"list.adb" 151 0 0# assert { ( #"list.adb" 151 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:151:36:instantiated:railsystems.ads:15:4" "GP_Id:8" "comment:                  data:=A.ELEMENTS(i).DATA;
                                   ^ list.adb:151:36:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__L_2_while__if__if__data_assign__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
           Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content )))))
          )))) in (
           #"list.adb" 151 0 0# Railsystems__list_trains__get_element_by_id__data.data__split_fields.Railsystems__list_trains__data_type.__split_fields__content <- ( (Railsystems__list_trains__data_type.__split_fields(temp___1073)) )))
           )) else (
          ())) )) else (
         ())) );
        #"list.adb" 148 0 0# Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <- ( (Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:148 instantiated at railsystems.ads:15 *)
        ;
        (if ((Railsystems__list_trains__get_element_by_id__L_2__i.i.int__content <= temp___1076)) then (
         ()) else (
         #"list.adb" 148 0 0# raise Railsystems__list_trains__get_element_by_id__L_2.L_2)) )
       done )
      with
       Railsystems__list_trains__get_element_by_id__L_2.L_2 -> ()
      end)) )))
    ))
     );
    ( "GP_Sloc:list.adb:155:10:instantiated:railsystems.ads:15:4" ( #"list.adb" 155 0 0# railsystems__list_trains__get_element_by_id__result.Railsystems__list_trains__data_type.data_type__content <- ( { Railsystems__list_trains__data_type.__split_fields = Railsystems__list_trains__get_element_by_id__data.data__split_fields.Railsystems__list_trains__data_type.__split_fields__content } );
    #"list.adb" 155 0 0# raise Return__exc ) ) ))) );
   #"list.adb" 134 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:58 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 134 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_trains__get_element_by_id__result.Railsystems__list_trains__data_type.data_type__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "full" defined at list.ads:60 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__full__subprogram_def
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__full__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__full__a__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 val railsystems__list_trains__full__result #"list.ads" 22 0 0# "model" "model_trace:24592@result"  : bool__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:60" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant Railsystems__list_trains__full__a.a True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 60 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 60 0 0# assume { true };
  () (* checking of pragma precondition list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:56:7:instantiated:railsystems.ads:15:4" ( #"list.adb" 56 0 0# railsystems__list_trains__full__result.bool__content <- ( ((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__full__a.a)))))) = (Standard__positive.to_rep((Railsystems__list_trains__list_ptr.rec__list_max_size((Railsystems__list_trains__list_ptr.__split_fields(Railsystems__list_trains__full__a.a))))))) );
   #"list.adb" 56 0 0# raise Return__exc ) );
   #"list.adb" 54 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:60 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 54 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_trains__full__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "append" defined at list.ads:62 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__append__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__full__axiom
 use        Railsystems__list_trains__append__a
 use        Railsystems__list_trains__append__d
 use        Railsystems__list_trains__append__id
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__full__axiom
 use        Railsystems__list_trains__append__a__axiom
 use        Railsystems__list_trains__append__d__axiom
 use        Railsystems__list_trains__append__id__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 let def #"list.adb" 54 0 0# "W:diverges:N" "GP_Subp:list.ads:62" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__append__d.d True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__append__id.id True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 62 0 0# abstract ensures {true}(let _ = (Boolean.andb((Railsystems__list_trains__append__id.id > 0)) ((Railsystems__list_trains__append__id.id <= 100))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 62 0 0# assume { ( (Railsystems__list_trains__append__id.id > 0) /\ (Railsystems__list_trains__append__id.id <= 100) ) };
  () (* checking of pragma precondition list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:67:7:instantiated:railsystems.ads:15:4" (if (not ( (Railsystems__list_trains__full__axiom.full({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) )) then (
    ( "GP_Sloc:list.adb:68:10:instantiated:railsystems.ads:15:4" (if (((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) < 100)) then (
     ( ( "GP_Sloc:list.adb:69:19:instantiated:railsystems.ads:15:4" (let temp___1079 = (let temp___1078 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(temp___1078)))) in (
       ()))
       end ;
      { ( temp___1078 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1078)) ) with Railsystems__list_trains__list_ptr.rec__size = (Standard__natural.of_rep ( #"list.adb" 69 0 0# "model_vc" "keep_on_simp" "GP_Sloc:list.adb:69:29:instantiated:railsystems.ads:15:4" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:10" "comment:            A.SIZE:= A.SIZE +1;
                            ^ list.adb:69:29:instantiated:railsystems.ads:15:4:VC_OVERFLOW_CHECK" "GP_Shape:if__if__a_assign__add" (Standard__integer.range_check_(((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) + 1))) )) } } )))
      in (
      #"list.adb" 69 0 0# Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1079)) )))
      );
     ( "GP_Sloc:list.adb:70:37:instantiated:railsystems.ads:15:4" (let temp___1086 = (let temp___1085 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(temp___1085)))) in (
       ()))
       end ;
      { ( temp___1085 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1085)) ) with Railsystems__list_trains__list_ptr.rec__elements = (let temp___1083 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
       (Array__Int__Railsystems__list_trains__data.set((Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content }))) ((let temp___1084 = (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) in (
        ( #"list.adb" 70 0 0# assert { ( #"list.adb" 70 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:70:25:instantiated:railsystems.ads:15:4" "GP_Id:11" "comment:            A.ELEMENTS(A.SIZE).DATA := D;
                        ^ list.adb:70:25:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__if__a_assign__selectcomp__ixdcomp__selectcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= temp___1084) /\ (temp___1084 <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
        temp___1084 )))
       ) ((let temp___1082 = (let temp___1081 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
        (Array__Int__Railsystems__list_trains__data.get temp___1081 (Standard__natural.to_rep (Railsystems__list_trains__list_ptr.rec__size (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content }))))))
        in (
        ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields(temp___1082)))) in (
         ()))
         end ;
        { ( temp___1082 ) with Railsystems__list_trains__data.__split_fields = { ( (Railsystems__list_trains__data.__split_fields(temp___1082)) ) with Railsystems__list_trains__data.rec__data = Railsystems__list_trains__append__d.d } } )))
       ))))
       } } )))
      in (
      #"list.adb" 70 0 0# Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1086)) )))
      );
     ( "GP_Sloc:list.adb:71:34:instantiated:railsystems.ads:15:4" (let temp___1092 = (let temp___1091 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(temp___1091)))) in (
       ()))
       end ;
      { ( temp___1091 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1091)) ) with Railsystems__list_trains__list_ptr.rec__elements = (let temp___1089 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
       (Array__Int__Railsystems__list_trains__data.set((Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content }))) ((let temp___1090 = (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) in (
        ( #"list.adb" 71 0 0# assert { ( #"list.adb" 71 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__if__a_assign__selectcomp__ixdcomp__selectcomp" "GP_Sloc:list.adb:71:25:instantiated:railsystems.ads:15:4" "GP_Id:12" "comment:            A.ELEMENTS(A.SIZE).ID:= ID;
                        ^ list.adb:71:25:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" ( (Railsystems__list_trains__list_ptr__T4s.first <= temp___1090) /\ (temp___1090 <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
        temp___1090 )))
       ) ((let temp___1088 = (let temp___1087 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
        (Array__Int__Railsystems__list_trains__data.get temp___1087 (Standard__natural.to_rep (Railsystems__list_trains__list_ptr.rec__size (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content }))))))
        in (
        ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__data.rec__id((Railsystems__list_trains__data.__split_fields(temp___1088)))) in (
         ()))
         end ;
        { ( temp___1088 ) with Railsystems__list_trains__data.__split_fields = { ( (Railsystems__list_trains__data.__split_fields(temp___1088)) ) with Railsystems__list_trains__data.rec__id = (Standard__natural.of_rep Railsystems__list_trains__append__id.id) } } )))
       ))))
       } } )))
      in (
      #"list.adb" 71 0 0# Railsystems__list_trains__append__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1092)) )))
      ) )) else (
     ())) )) else (
    ())) );
   #"list.adb" 62 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:62 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 62 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "delete_all" defined at list.ads:75 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__delete_all__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__delete_all__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__delete_all__a__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 let def #"list.adb" 62 0 0# "W:diverges:N" "GP_Subp:list.ads:75" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__delete_all__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 105 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 105 0 0# assume { true };
  () (* checking of pragma precondition list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:106:14:instantiated:railsystems.ads:15:4" (let temp___1094 = (let temp___1093 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__delete_all__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(temp___1093)))) in (
     ()))
     end ;
    { ( temp___1093 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1093)) ) with Railsystems__list_trains__list_ptr.rec__size = (Standard__natural.of_rep 0) } } )))
    in (
    #"list.adb" 106 0 0# Railsystems__list_trains__delete_all__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1094)) )))
    );
   ( "GP_Sloc:list.adb:107:14:instantiated:railsystems.ads:15:4" (let temp___1096 = (let temp___1095 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__delete_all__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__head((Railsystems__list_trains__list_ptr.__split_fields(temp___1095)))) in (
     ()))
     end ;
    { ( temp___1095 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1095)) ) with Railsystems__list_trains__list_ptr.rec__head = (Standard__positive.of_rep 1) } } )))
    in (
    #"list.adb" 107 0 0# Railsystems__list_trains__delete_all__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1096)) )))
    );
   #"list.adb" 102 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:75 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 102 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__replace_by_id__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__replace_by_id__a
 use        Railsystems__list_trains__replace_by_id__id
 use        Railsystems__list_trains__replace_by_id__newvalue
 use        Railsystems__list_trains__replace_by_id__L_3__R49s
 use        Railsystems__list_trains__replace_by_id__L_3
 use        Railsystems__list_trains__replace_by_id__L_3__T50s
 use        Railsystems__list_trains__replace_by_id__L_3__i
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__replace_by_id__a__axiom
 use        Railsystems__list_trains__replace_by_id__id__axiom
 use        Railsystems__list_trains__replace_by_id__newvalue__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_trains__replace_by_id__L_3__axiom
 use        Railsystems__list_trains__replace_by_id__L_3__i__axiom
 use        Railsystems__list_trains__replace_by_id__L_3__R49s__axiom
 use        Railsystems__list_trains__replace_by_id__L_3__T50s__axiom

 let def #"list.adb" 102 0 0# "W:diverges:N" "GP_Subp:list.ads:87" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__replace_by_id__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__replace_by_id__newvalue.newvalue True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 87 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 87 0 0# assume { true };
  () (* checking of pragma precondition list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:215:7:instantiated:railsystems.ads:15:4" (if ((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) > 0)) ((Railsystems__list_trains__replace_by_id__id.id > 0)))) ((Railsystems__list_trains__replace_by_id__id.id <= (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))))))) then (
    ( ( "GP_Sloc:list.adb:216:25:instantiated:railsystems.ads:15:4" ( (let railsystems__list_trains__replace_by_id__L_3__R49s__assume = (Standard__natural.to_rep((Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))))) in (
     #"list.adb" 216 0 0# assume { (railsystems__list_trains__replace_by_id__L_3__R49s__assume = Railsystems__list_trains__replace_by_id__L_3__R49s.r49s) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_trains__replace_by_id__L_3__R49s.r49s True False True) } ) );
    ( "GP_Sloc:list.adb:216:31:instantiated:railsystems.ads:15:4" (let temp___1104 = 1 in (
    (let temp___1105 = Railsystems__list_trains__replace_by_id__L_3__R49s.r49s in (
     ( #"list.adb" 216 0 0# Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <- ( temp___1104 );
     () (* Translation of an Ada loop from list.adb:216 instantiated at railsystems.ads:15 *)
     ;
     (if ((Boolean.andb((temp___1104 <= Railsystems__list_trains__replace_by_id__L_3__i.i.int__content)) ((Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <= temp___1105)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:216 instantiated at railsystems.ads:15 *)
       ;
       () (* While loop translating the Ada loop from list.adb:216 instantiated at railsystems.ads:15 *)
       ;
       #"list.adb" 216 0 0# while True do
        ( () (* Assume implicit invariants from the loop list.adb:216 instantiated at railsystems.ads:15 *)
        ;
        #"list.adb" 216 0 0# assume { (Boolean.andb((Boolean.andb((if ((1 <= Railsystems__list_trains__replace_by_id__L_3__R49s.r49s)) then (
         (Railsystems__list_trains__replace_by_id__L_3__T50s.dynamic_property 1 Railsystems__list_trains__replace_by_id__L_3__R49s.r49s Railsystems__list_trains__replace_by_id__L_3__i.i.int__content)) else true)) ((Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } False True True)))) (( (1 <= Railsystems__list_trains__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <= Railsystems__list_trains__replace_by_id__L_3__R49s.r49s) ))) };
        () (* Check for absence of RTE in the invariant of loop list.adb:216 instantiated at railsystems.ads:15 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop list.adb:216 instantiated at railsystems.ads:15 *)
        ;
        ( "GP_Sloc:list.adb:217:13:instantiated:railsystems.ads:15:4" (if ((Railsystems__list_trains__replace_by_id__L_3__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:218:16:instantiated:railsystems.ads:15:4" (if (((Standard__natural.to_rep((Railsystems__list_trains__data.rec__id((Railsystems__list_trains__data.__split_fields((let temp___1103 = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields({ Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })))) in (
          (Array__Int__Railsystems__list_trains__data.get(temp___1103) (( #"list.adb" 218 0 0# assert { ( #"list.adb" 218 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:218:30:instantiated:railsystems.ads:15:4" "GP_Id:14" "comment:               if A.ELEMENTS(i).ID = ID then
                             ^ list.adb:218:30:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__L_3_while__if__if__cmp__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
          Railsystems__list_trains__replace_by_id__L_3__i.i.int__content )))))
         )))))) = Railsystems__list_trains__replace_by_id__id.id)) then (
          ( ( "GP_Sloc:list.adb:219:38:instantiated:railsystems.ads:15:4" (let temp___1102 = (let temp___1101 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
           ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__elements((Railsystems__list_trains__list_ptr.__split_fields(temp___1101)))) in (
            ()))
            end ;
           { ( temp___1101 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1101)) ) with Railsystems__list_trains__list_ptr.rec__elements = (let temp___1100 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
            (Array__Int__Railsystems__list_trains__data.set((Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content }))) (( #"list.adb" 219 0 0# assert { ( #"list.adb" 219 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Sloc:list.adb:219:30:instantiated:railsystems.ads:15:4" "GP_Id:13" "comment:                  A.ELEMENTS(i).DATA := NEWVALUE;
                             ^ list.adb:219:30:instantiated:railsystems.ads:15:4:VC_INDEX_CHECK" "GP_Shape:if__L_3_while__if__if__a_assign__selectcomp__ixdcomp" ( (Railsystems__list_trains__list_ptr__T4s.first <= Railsystems__list_trains__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <= Railsystems__list_trains__list_ptr__T4s.last) ) ) };
            Railsystems__list_trains__replace_by_id__L_3__i.i.int__content )) ((let temp___1099 = (let temp___1098 = (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content })) in (
             (Array__Int__Railsystems__list_trains__data.get temp___1098 Railsystems__list_trains__replace_by_id__L_3__i.i.int__content)))
             in (
             ( #"list.adb" 216 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__data.rec__data((Railsystems__list_trains__data.__split_fields(temp___1099)))) in (
              ()))
              end ;
             { ( temp___1099 ) with Railsystems__list_trains__data.__split_fields = { ( (Railsystems__list_trains__data.__split_fields(temp___1099)) ) with Railsystems__list_trains__data.rec__data = Railsystems__list_trains__replace_by_id__newvalue.newvalue } } )))
            ))))
            } } )))
           in (
           #"list.adb" 219 0 0# Railsystems__list_trains__replace_by_id__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1102)) )))
           );
          ( "GP_Sloc:list.adb:220:19:instantiated:railsystems.ads:15:4" #"list.adb" 220 0 0# raise Return__exc ) )) else (
          ())) )) else (
         ())) );
        #"list.adb" 216 0 0# Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <- ( (Railsystems__list_trains__replace_by_id__L_3__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:216 instantiated at railsystems.ads:15 *)
        ;
        (if ((Railsystems__list_trains__replace_by_id__L_3__i.i.int__content <= temp___1105)) then (
         ()) else (
         #"list.adb" 216 0 0# raise Railsystems__list_trains__replace_by_id__L_3.L_3)) )
       done )
      with
       Railsystems__list_trains__replace_by_id__L_3.L_3 -> ()
      end)) )))
    ))
     ) )) else (
    ())) );
   #"list.adb" 212 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:87 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 212 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "init" defined at list.ads:91 instantiated at railsystems.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_trains__init__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__init__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__init__a__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom

 let def #"list.adb" 212 0 0# "W:diverges:N" "GP_Subp:list.ads:91" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__init__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 105 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  #"list.ads" 105 0 0# assume { true };
  () (* checking of pragma precondition list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:231:14:instantiated:railsystems.ads:15:4" (let temp___1107 = (let temp___1106 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__init__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__head((Railsystems__list_trains__list_ptr.__split_fields(temp___1106)))) in (
     ()))
     end ;
    { ( temp___1106 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1106)) ) with Railsystems__list_trains__list_ptr.rec__head = (Standard__positive.of_rep 1) } } )))
    in (
    #"list.adb" 231 0 0# Railsystems__list_trains__init__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1107)) )))
    );
   ( "GP_Sloc:list.adb:232:14:instantiated:railsystems.ads:15:4" (let temp___1109 = (let temp___1108 = { Railsystems__list_trains__list_ptr.__split_fields = Railsystems__list_trains__init__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_trains__list_ptr.rec__size((Railsystems__list_trains__list_ptr.__split_fields(temp___1108)))) in (
     ()))
     end ;
    { ( temp___1108 ) with Railsystems__list_trains__list_ptr.__split_fields = { ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1108)) ) with Railsystems__list_trains__list_ptr.rec__size = (Standard__natural.of_rep 0) } } )))
    in (
    #"list.adb" 232 0 0# Railsystems__list_trains__init__a.a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content <- ( (Railsystems__list_trains__list_ptr.__split_fields(temp___1109)) )))
    );
   #"list.adb" 229 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:91 instantiated at railsystems.ads:15 *)
  ;
  #"list.adb" 229 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "list_stations" defined at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Railsystems__list_stations__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Stations__station
 use        Railsystems__sn
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__e_id
 use        Railsystems__list_stations__max_size
 use        Railsystems__list_stations__no_found
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Railsystems__sn__axiom
 use        Types__station_locations__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__e_id__axiom
 use        Railsystems__list_stations__max_size__axiom
 use        Railsystems__list_stations__no_found__axiom

 let def #"list.adb" 229 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:22" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( #"list.adb" 229 0 0# abstract ensures {true}(let _ = 0 in (
   ()))
   end ;
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__e_id.e_id True False True) };
  #"list.ads" 23 0 0# abstract ensures {true}(let _ = 100 in (
   ()))
   end ;
  #"system.ads" 1 0 0# assume { (Standard__positive__axiom.dynamic_invariant Railsystems__list_stations__max_size.max_size True False True) };
  (let railsystems__list_stations__no_found__assume = (Railsystems__list_stations__data_type.of_base({ Stations__station.__split_fields = Railsystems__sn.sn__split_fields.Stations__station.__split_fields__content })) in (
   #"railsystems.ads" 26 0 0# assume { (railsystems__list_stations__no_found__assume = Railsystems__list_stations__no_found.no_found) }))
  ;
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  ( "GP_Sloc:list.adb:234:1:instantiated:railsystems.ads:22:4" () ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "contains" defined at list.ads:49 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__contains__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Stations__station
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__contains__a
 use        Railsystems__list_stations__contains__d
 use        Railsystems__list_stations__contains__size
 use        Railsystems__list_stations__contains__contain
 use        Railsystems__list_stations__contains__L_1__R52s
 use        Railsystems__list_stations__contains__L_1
 use        Railsystems__list_stations__contains__L_1__T53s
 use        Railsystems__list_stations__contains__L_1__i
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__integer__axiom
 use        Types__station_locations__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__contains__a__axiom
 use        Railsystems__list_stations__contains__d__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__list_stations__contains__size__axiom
 use        Railsystems__list_stations__contains__contain__axiom
 use        Railsystems__list_stations__contains__L_1__axiom
 use        Railsystems__list_stations__contains__L_1__i__axiom
 use        Railsystems__list_stations__contains__L_1__R52s__axiom
 use        Railsystems__list_stations__contains__L_1__T53s__axiom

 val railsystems__list_stations__contains__result #"list.ads" 25 0 0# "model" "model_trace:25032@result"  : bool__ref 
 
 let def #"list.ads" 25 0 0# "W:diverges:N" "GP_Subp:list.ads:49" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant Railsystems__list_stations__contains__a.a True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__contains__d.d True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 49 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 49 0 0# assume { true };
  () (* checking of pragma precondition list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  try
   ( #"list.ads" 49 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"list.adb" 19 0 0# assume { (Standard__natural__axiom.default_initial_assumption Railsystems__list_stations__contains__size.size.int__content False) };
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__contains__size.size.int__content False False True) };
   ( "GP_Sloc:list.adb:22:11:instantiated:railsystems.ads:22:4" #"list.adb" 22 0 0# Railsystems__list_stations__contains__size.size.int__content <- ( (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__contains__a.a)))))) ) );
   ( "GP_Sloc:list.adb:23:14:instantiated:railsystems.ads:22:4" #"list.adb" 23 0 0# Railsystems__list_stations__contains__contain.contain.bool__content <- ( (Boolean.of_int(0)) ) );
   ( "GP_Sloc:list.adb:24:21:instantiated:railsystems.ads:22:4" ( (let railsystems__list_stations__contains__L_1__R52s__assume = Railsystems__list_stations__contains__size.size.int__content in (
    #"list.adb" 24 0 0# assume { (railsystems__list_stations__contains__L_1__R52s__assume = Railsystems__list_stations__contains__L_1__R52s.r52s) }))
   ;
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__contains__L_1__R52s.r52s True False True) } ) );
   ( "GP_Sloc:list.adb:24:26:instantiated:railsystems.ads:22:4" (let temp___1112 = 1 in (
   (let temp___1113 = Railsystems__list_stations__contains__L_1__R52s.r52s in (
    ( #"list.adb" 24 0 0# Railsystems__list_stations__contains__L_1__i.i.int__content <- ( temp___1112 );
    () (* Translation of an Ada loop from list.adb:24 instantiated at railsystems.ads:22 *)
    ;
    (if ((Boolean.andb((temp___1112 <= Railsystems__list_stations__contains__L_1__i.i.int__content)) ((Railsystems__list_stations__contains__L_1__i.i.int__content <= temp___1113)))) then (
     try
      ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:24 instantiated at railsystems.ads:22 *)
      ;
      ( "GP_Sloc:list.adb:25:10:instantiated:railsystems.ads:22:4" (if ((Railsystems__list_stations__contains__L_1__i.i.int__content < 100)) then (
       ( "GP_Sloc:list.adb:26:13:instantiated:railsystems.ads:22:4" (if (((Standard__natural.to_rep((Railsystems__list_stations__data.rec__id((Railsystems__list_stations__data.__split_fields((let temp___1111 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__contains__a.a)))) in (
        (Array__Int__Railsystems__list_stations__data.get(temp___1111) (( #"list.adb" 26 0 0# assert { ( #"list.adb" 26 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:26:27:instantiated:railsystems.ads:22:4" "GP_Id:16" "comment:            if A.ELEMENTS(i).ID /=0 then
                          ^ list.adb:26:27:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__contains__L_1__i.i.int__content) /\ (Railsystems__list_stations__contains__L_1__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
        Railsystems__list_stations__contains__L_1__i.i.int__content )))))
       )))))) <> 0)) then (
        ( "GP_Sloc:list.adb:27:16:instantiated:railsystems.ads:22:4" (if ((Stations__station.bool_eq((Railsystems__list_stations__data_type.to_base((Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields((let temp___1110 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__contains__a.a)))) in (
         (Array__Int__Railsystems__list_stations__data.get(temp___1110) (( #"list.adb" 27 0 0# assert { ( #"list.adb" 27 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:27:30:instantiated:railsystems.ads:22:4" "GP_Id:15" "comment:               if A.ELEMENTS(i).DATA = D then
                             ^ list.adb:27:30:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__contains__L_1__i.i.int__content) /\ (Railsystems__list_stations__contains__L_1__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
         Railsystems__list_stations__contains__L_1__i.i.int__content )))))
        ))))))) ((Railsystems__list_stations__data_type.to_base(Railsystems__list_stations__contains__d.d))))) then (
         ( ( "GP_Sloc:list.adb:28:26:instantiated:railsystems.ads:22:4" #"list.adb" 28 0 0# Railsystems__list_stations__contains__contain.contain.bool__content <- ( (Boolean.of_int(1)) ) );
         ( "GP_Sloc:list.adb:29:19:instantiated:railsystems.ads:22:4" ( #"list.adb" 29 0 0# railsystems__list_stations__contains__result.bool__content <- ( Railsystems__list_stations__contains__contain.contain.bool__content );
         #"list.adb" 29 0 0# raise Return__exc ) ) )) else (
         ())) )) else (
        ())) )) else (
       ())) );
      () (* While loop translating the Ada loop from list.adb:24 instantiated at railsystems.ads:22 *)
      ;
      #"list.adb" 24 0 0# while True do
       invariant { 
        ( #"list.adb" 34 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LOOP_INVARIANT" "GP_Shape:L_1_while" "GP_Sloc:list.adb:34:10:instantiated:railsystems.ads:22:4" "GP_Id:17" "comment:         pragma Loop_Invariant(contain = False);
         ^ list.adb:34:10:instantiated:railsystems.ads:22:4:VC_LOOP_INVARIANT" ( "GP_Pretty_Ada:29605" "GP_Sloc:list.adb:34:32:instantiated:railsystems.ads:22:4" ( (Railsystems__list_stations__contains__contain.contain.bool__content = True) <-> false ) ) )
        }
       ( () (* Assume implicit invariants from the loop list.adb:24 instantiated at railsystems.ads:22 *)
       ;
       #"system.ads" 1 0 0# assume { (Boolean.andb((if ((1 <= Railsystems__list_stations__contains__L_1__R52s.r52s)) then (
        (Railsystems__list_stations__contains__L_1__T53s.dynamic_property 1 Railsystems__list_stations__contains__L_1__R52s.r52s Railsystems__list_stations__contains__L_1__i.i.int__content)) else true)) (( (1 <= Railsystems__list_stations__contains__L_1__i.i.int__content) /\ (Railsystems__list_stations__contains__L_1__i.i.int__content <= Railsystems__list_stations__contains__L_1__R52s.r52s) ))) };
       () (* Check for absence of RTE in the invariant of loop list.adb:24 instantiated at railsystems.ads:22 *)
       ;
       #"list.adb" 24 0 0# abstract ensures {true}(let _ = ((Boolean.to_int(Railsystems__list_stations__contains__contain.contain.bool__content)) = (Boolean.to_int((Boolean.of_int(0))))) in (
        ()))
        end ;
       () (* Loop statements appearing after the loop invariant of loop list.adb:24 instantiated at railsystems.ads:22 *)
       ;
       #"list.adb" 24 0 0# Railsystems__list_stations__contains__L_1__i.i.int__content <- ( (Railsystems__list_stations__contains__L_1__i.i.int__content + 1) );
       () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:24 instantiated at railsystems.ads:22 *)
       ;
       (if ((Railsystems__list_stations__contains__L_1__i.i.int__content <= temp___1113)) then (
        ( "GP_Sloc:list.adb:25:10:instantiated:railsystems.ads:22:4" (if ((Railsystems__list_stations__contains__L_1__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:26:13:instantiated:railsystems.ads:22:4" (if (((Standard__natural.to_rep((Railsystems__list_stations__data.rec__id((Railsystems__list_stations__data.__split_fields((let temp___1111 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__contains__a.a)))) in (
          (Array__Int__Railsystems__list_stations__data.get(temp___1111) (( #"list.adb" 26 0 0# assert { ( #"list.adb" 26 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:26:27:instantiated:railsystems.ads:22:4" "GP_Id:16" "comment:            if A.ELEMENTS(i).ID /=0 then
                          ^ list.adb:26:27:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__contains__L_1__i.i.int__content) /\ (Railsystems__list_stations__contains__L_1__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
          Railsystems__list_stations__contains__L_1__i.i.int__content )))))
         )))))) <> 0)) then (
          ( "GP_Sloc:list.adb:27:16:instantiated:railsystems.ads:22:4" (if ((Stations__station.bool_eq((Railsystems__list_stations__data_type.to_base((Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields((let temp___1110 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__contains__a.a)))) in (
           (Array__Int__Railsystems__list_stations__data.get(temp___1110) (( #"list.adb" 27 0 0# assert { ( #"list.adb" 27 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:27:30:instantiated:railsystems.ads:22:4" "GP_Id:15" "comment:               if A.ELEMENTS(i).DATA = D then
                             ^ list.adb:27:30:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__contains__L_1__i.i.int__content) /\ (Railsystems__list_stations__contains__L_1__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
           Railsystems__list_stations__contains__L_1__i.i.int__content )))))
          ))))))) ((Railsystems__list_stations__data_type.to_base(Railsystems__list_stations__contains__d.d))))) then (
           ( ( "GP_Sloc:list.adb:28:26:instantiated:railsystems.ads:22:4" #"list.adb" 28 0 0# Railsystems__list_stations__contains__contain.contain.bool__content <- ( (Boolean.of_int(1)) ) );
           ( "GP_Sloc:list.adb:29:19:instantiated:railsystems.ads:22:4" ( #"list.adb" 29 0 0# railsystems__list_stations__contains__result.bool__content <- ( Railsystems__list_stations__contains__contain.contain.bool__content );
           #"list.adb" 29 0 0# raise Return__exc ) ) )) else (
           ())) )) else (
          ())) )) else (
         ())) )) else (
        #"list.adb" 29 0 0# raise Railsystems__list_stations__contains__L_1.L_1)) )
      done )
     with
      Railsystems__list_stations__contains__L_1.L_1 -> ()
     end)) )))
   ))
    );
   ( "GP_Sloc:list.adb:36:7:instantiated:railsystems.ads:22:4" ( #"list.adb" 36 0 0# railsystems__list_stations__contains__result.bool__content <- ( Railsystems__list_stations__contains__contain.contain.bool__content );
   #"list.adb" 36 0 0# raise Return__exc ) );
   #"list.adb" 17 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:49 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 17 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_stations__contains__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_size" defined at list.ads:52 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__get_size__subprogram_def
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_size__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_size__a__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 val railsystems__list_stations__get_size__result #"list.adb" 17 0 0# "model" "model_trace:25060@result"  : int__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:list.ads:52" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant Railsystems__list_stations__get_size__a.a True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 52 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 52 0 0# assume { true };
  () (* checking of pragma precondition list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:48:7:instantiated:railsystems.ads:22:4" ( #"list.adb" 48 0 0# railsystems__list_stations__get_size__result.int__content <- ( (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_size__a.a)))))) );
   #"list.adb" 48 0 0# raise Return__exc ) );
   #"list.adb" 44 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:52 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 44 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_stations__get_size__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_element" defined at list.ads:55 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__get_element__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element__a
 use        Railsystems__list_stations__get_element__location
 use        Array__Int__Railsystems__list_stations__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_element__a__axiom
 use        Railsystems__list_stations__get_element__location__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 val railsystems__list_stations__get_element__result #"system.ads" 1 0 0# "model_projected" "model_trace:25079@result"  : Railsystems__list_stations__data_type.data_type__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:55" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant Railsystems__list_stations__get_element__a.a True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__get_element__location.location True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:120:7:instantiated:railsystems.ads:22:4" (if ((Boolean.orb((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element__a.a)))))) = 0)) ((Railsystems__list_stations__get_element__location.location <= 0)))) ((Railsystems__list_stations__get_element__location.location > (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element__a.a)))))))))) ((Railsystems__list_stations__get_element__location.location > 100)))) then (
    ( "GP_Sloc:list.adb:123:10:instantiated:railsystems.ads:22:4" ( #"list.adb" 123 0 0# railsystems__list_stations__get_element__result.Railsystems__list_stations__data_type.data_type__content <- ( Railsystems__list_stations__no_found.no_found );
    #"list.adb" 123 0 0# raise Return__exc ) )) else (
    ( "GP_Sloc:list.adb:125:10:instantiated:railsystems.ads:22:4" ( #"list.adb" 125 0 0# railsystems__list_stations__get_element__result.Railsystems__list_stations__data_type.data_type__content <- ( (Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields((let temp___1114 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element__a.a)))) in (
     (Array__Int__Railsystems__list_stations__data.get(temp___1114) (( #"list.adb" 125 0 0# assert { ( #"list.adb" 125 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__return__selectcomp__ixdcomp" "GP_Sloc:list.adb:125:28:instantiated:railsystems.ads:22:4" "GP_Id:18" "comment:         return A.ELEMENTS(LOCATION).DATA;
                           ^ list.adb:125:28:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__get_element__location.location) /\ (Railsystems__list_stations__get_element__location.location <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
     Railsystems__list_stations__get_element__location.location )))))
    )))) );
    #"list.adb" 125 0 0# raise Return__exc ) ))) );
   #"list.adb" 116 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:55 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 116 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_stations__get_element__result.Railsystems__list_stations__data_type.data_type__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "get_element_by_id" defined at list.ads:58 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__get_element_by_id__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element_by_id__a
 use        Railsystems__list_stations__get_element_by_id__id
 use        Railsystems__list_stations__get_element_by_id__data
 use        Railsystems__list_stations__get_element_by_id__L_2__R61s
 use        Railsystems__list_stations__get_element_by_id__L_2
 use        Railsystems__list_stations__get_element_by_id__L_2__T62s
 use        Railsystems__list_stations__get_element_by_id__L_2__i
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__integer__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_element_by_id__a__axiom
 use        Railsystems__list_stations__get_element_by_id__id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__list_stations__get_element_by_id__data__axiom
 use        Railsystems__list_stations__get_element_by_id__L_2__axiom
 use        Railsystems__list_stations__get_element_by_id__L_2__i__axiom
 use        Railsystems__list_stations__get_element_by_id__L_2__R61s__axiom
 use        Railsystems__list_stations__get_element_by_id__L_2__T62s__axiom

 val railsystems__list_stations__get_element_by_id__result #"list.ads" 22 0 0# "model_projected" "model_trace:25107@result"  : Railsystems__list_stations__data_type.data_type__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:58" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant Railsystems__list_stations__get_element_by_id__a.a True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__get_element_by_id__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  try
   ( #"list.ads" 25 0 0# abstract ensures {true}(let _ = #"list.adb" 137 0 0# abstract ensures {true}(let _ = (let temp___1116 = #"list.ads" 22 0 0# (any Railsystems__list_stations__data_type.data_type
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Railsystems__list_stations__data_type.id__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_stations__data_type.location__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_stations__data_type.trainid__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Railsystems__list_stations__data_type.incoming__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = (let temp___1117 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1117))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1117))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1118 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1118))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1119 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1119))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1118))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1117))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1117))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Railsystems__list_stations__data_type.outgoing__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = (let temp___1120 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1120))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1120))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1121 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1121))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1122 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1122))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1121))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1120))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1120))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred(temp___1116))) then (
     #"list.ads" 22 0 0# abstract ensures {true}(let _ = (let temp___1123 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1123))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1123))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1124 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1124))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1125 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1125))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1125))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1124))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1123))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1123))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"list.adb" 137 0 0# assume { (Railsystems__list_stations__data_type__axiom.default_initial_assumption { Railsystems__list_stations__data_type.__split_fields = Railsystems__list_stations__get_element_by_id__data.data__split_fields.Railsystems__list_stations__data_type.__split_fields__content } False) };
   #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant { Railsystems__list_stations__data_type.__split_fields = Railsystems__list_stations__get_element_by_id__data.data__split_fields.Railsystems__list_stations__data_type.__split_fields__content } False False True) };
   ( "GP_Sloc:list.adb:141:7:instantiated:railsystems.ads:22:4" (if ((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element_by_id__a.a)))))) = 0)) ((Railsystems__list_stations__get_element_by_id__id.id <= 0)))) ((Railsystems__list_stations__get_element_by_id__id.id > (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element_by_id__a.a)))))))))) then (
    ( "GP_Sloc:list.adb:144:10:instantiated:railsystems.ads:22:4" ( #"list.adb" 144 0 0# railsystems__list_stations__get_element_by_id__result.Railsystems__list_stations__data_type.data_type__content <- ( Railsystems__list_stations__no_found.no_found );
    #"list.adb" 144 0 0# raise Return__exc ) )) else (
    ( ( "GP_Sloc:list.adb:148:25:instantiated:railsystems.ads:22:4" ( (let railsystems__list_stations__get_element_by_id__L_2__R61s__assume = (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element_by_id__a.a)))))) in (
     #"list.adb" 148 0 0# assume { (railsystems__list_stations__get_element_by_id__L_2__R61s__assume = Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s True False True) } ) );
    ( "GP_Sloc:list.adb:148:31:instantiated:railsystems.ads:22:4" (let temp___1130 = 1 in (
    (let temp___1131 = Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s in (
     ( #"list.adb" 148 0 0# Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <- ( temp___1130 );
     () (* Translation of an Ada loop from list.adb:148 instantiated at railsystems.ads:22 *)
     ;
     (if ((Boolean.andb((temp___1130 <= Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content)) ((Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <= temp___1131)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:148 instantiated at railsystems.ads:22 *)
       ;
       () (* While loop translating the Ada loop from list.adb:148 instantiated at railsystems.ads:22 *)
       ;
       #"list.adb" 148 0 0# while True do
        ( () (* Assume implicit invariants from the loop list.adb:148 instantiated at railsystems.ads:22 *)
        ;
        #"list.adb" 148 0 0# assume { (Boolean.andb((Boolean.andb((if ((1 <= Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s)) then (
         (Railsystems__list_stations__get_element_by_id__L_2__T62s.dynamic_property 1 Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content)) else true)) ((Railsystems__list_stations__data_type__axiom.dynamic_invariant { Railsystems__list_stations__data_type.__split_fields = Railsystems__list_stations__get_element_by_id__data.data__split_fields.Railsystems__list_stations__data_type.__split_fields__content } False True True)))) (( (1 <= Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_stations__get_element_by_id__L_2__R61s.r61s) ))) };
        () (* Check for absence of RTE in the invariant of loop list.adb:148 instantiated at railsystems.ads:22 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop list.adb:148 instantiated at railsystems.ads:22 *)
        ;
        ( "GP_Sloc:list.adb:149:13:instantiated:railsystems.ads:22:4" (if ((Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:150:16:instantiated:railsystems.ads:22:4" (if (((Standard__natural.to_rep((Railsystems__list_stations__data.rec__id((Railsystems__list_stations__data.__split_fields((let temp___1129 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element_by_id__a.a)))) in (
          (Array__Int__Railsystems__list_stations__data.get(temp___1129) (( #"list.adb" 150 0 0# assert { ( #"list.adb" 150 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__L_2_while__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:150:30:instantiated:railsystems.ads:22:4" "GP_Id:20" "comment:               if A.ELEMENTS(i).ID = ID then
                             ^ list.adb:150:30:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
          Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content )))))
         )))))) = Railsystems__list_stations__get_element_by_id__id.id)) then (
          ( "GP_Sloc:list.adb:151:23:instantiated:railsystems.ads:22:4" (let temp___1128 = (Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields((let temp___1127 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__get_element_by_id__a.a)))) in (
           (Array__Int__Railsystems__list_stations__data.get(temp___1127) (( #"list.adb" 151 0 0# assert { ( #"list.adb" 151 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__L_2_while__if__if__data_assign__selectcomp__ixdcomp" "GP_Sloc:list.adb:151:36:instantiated:railsystems.ads:22:4" "GP_Id:19" "comment:                  data:=A.ELEMENTS(i).DATA;
                                   ^ list.adb:151:36:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content) /\ (Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
           Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content )))))
          )))) in (
           #"list.adb" 151 0 0# Railsystems__list_stations__get_element_by_id__data.data__split_fields.Railsystems__list_stations__data_type.__split_fields__content <- ( (Railsystems__list_stations__data_type.__split_fields(temp___1128)) )))
           )) else (
          ())) )) else (
         ())) );
        #"list.adb" 148 0 0# Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <- ( (Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:148 instantiated at railsystems.ads:22 *)
        ;
        (if ((Railsystems__list_stations__get_element_by_id__L_2__i.i.int__content <= temp___1131)) then (
         ()) else (
         #"list.adb" 148 0 0# raise Railsystems__list_stations__get_element_by_id__L_2.L_2)) )
       done )
      with
       Railsystems__list_stations__get_element_by_id__L_2.L_2 -> ()
      end)) )))
    ))
     );
    ( "GP_Sloc:list.adb:155:10:instantiated:railsystems.ads:22:4" ( #"list.adb" 155 0 0# railsystems__list_stations__get_element_by_id__result.Railsystems__list_stations__data_type.data_type__content <- ( { Railsystems__list_stations__data_type.__split_fields = Railsystems__list_stations__get_element_by_id__data.data__split_fields.Railsystems__list_stations__data_type.__split_fields__content } );
    #"list.adb" 155 0 0# raise Return__exc ) ) ))) );
   #"list.adb" 134 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:58 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 134 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_stations__get_element_by_id__result.Railsystems__list_stations__data_type.data_type__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "full" defined at list.ads:60 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__full__subprogram_def
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__full__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__full__a__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 val railsystems__list_stations__full__result #"list.ads" 22 0 0# "model" "model_trace:25135@result"  : bool__ref 
 
 let def #"list.ads" 22 0 0# "W:diverges:N" "GP_Subp:list.ads:60" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant Railsystems__list_stations__full__a.a True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 60 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 60 0 0# assume { true };
  () (* checking of pragma precondition list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:56:7:instantiated:railsystems.ads:22:4" ( #"list.adb" 56 0 0# railsystems__list_stations__full__result.bool__content <- ( ((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__full__a.a)))))) = (Standard__positive.to_rep((Railsystems__list_stations__list_ptr.rec__list_max_size((Railsystems__list_stations__list_ptr.__split_fields(Railsystems__list_stations__full__a.a))))))) );
   #"list.adb" 56 0 0# raise Return__exc ) );
   #"list.adb" 54 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:60 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 54 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__list_stations__full__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "append" defined at list.ads:62 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__append__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__full__axiom
 use        Railsystems__list_stations__append__a
 use        Railsystems__list_stations__append__d
 use        Railsystems__list_stations__append__id
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__integer__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__full__axiom
 use        Railsystems__list_stations__append__a__axiom
 use        Railsystems__list_stations__append__d__axiom
 use        Railsystems__list_stations__append__id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"list.adb" 54 0 0# "W:diverges:N" "GP_Subp:list.ads:62" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__append__d.d True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__append__id.id True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 62 0 0# abstract ensures {true}(let _ = (Boolean.andb((Railsystems__list_stations__append__id.id > 0)) ((Railsystems__list_stations__append__id.id <= 100))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 62 0 0# assume { ( (Railsystems__list_stations__append__id.id > 0) /\ (Railsystems__list_stations__append__id.id <= 100) ) };
  () (* checking of pragma precondition list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:67:7:instantiated:railsystems.ads:22:4" (if (not ( (Railsystems__list_stations__full__axiom.full({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) )) then (
    ( "GP_Sloc:list.adb:68:10:instantiated:railsystems.ads:22:4" (if (((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) < 100)) then (
     ( ( "GP_Sloc:list.adb:69:19:instantiated:railsystems.ads:22:4" (let temp___1134 = (let temp___1133 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(temp___1133)))) in (
       ()))
       end ;
      { ( temp___1133 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1133)) ) with Railsystems__list_stations__list_ptr.rec__size = (Standard__natural.of_rep ( #"list.adb" 69 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:if__if__a_assign__add" "GP_Sloc:list.adb:69:29:instantiated:railsystems.ads:22:4" "GP_Id:21" "comment:            A.SIZE:= A.SIZE +1;
                            ^ list.adb:69:29:instantiated:railsystems.ads:22:4:VC_OVERFLOW_CHECK" (Standard__integer.range_check_(((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) + 1))) )) } } )))
      in (
      #"list.adb" 69 0 0# Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1134)) )))
      );
     ( "GP_Sloc:list.adb:70:37:instantiated:railsystems.ads:22:4" (let temp___1141 = (let temp___1140 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(temp___1140)))) in (
       ()))
       end ;
      { ( temp___1140 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1140)) ) with Railsystems__list_stations__list_ptr.rec__elements = (let temp___1138 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
       (Array__Int__Railsystems__list_stations__data.set((Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content }))) ((let temp___1139 = (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) in (
        ( #"list.adb" 70 0 0# assert { ( #"list.adb" 70 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__if__a_assign__selectcomp__ixdcomp__selectcomp" "GP_Sloc:list.adb:70:25:instantiated:railsystems.ads:22:4" "GP_Id:22" "comment:            A.ELEMENTS(A.SIZE).DATA := D;
                        ^ list.adb:70:25:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= temp___1139) /\ (temp___1139 <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
        temp___1139 )))
       ) ((let temp___1137 = (let temp___1136 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
        (Array__Int__Railsystems__list_stations__data.get temp___1136 (Standard__natural.to_rep (Railsystems__list_stations__list_ptr.rec__size (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content }))))))
        in (
        ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields(temp___1137)))) in (
         ()))
         end ;
        { ( temp___1137 ) with Railsystems__list_stations__data.__split_fields = { ( (Railsystems__list_stations__data.__split_fields(temp___1137)) ) with Railsystems__list_stations__data.rec__data = Railsystems__list_stations__append__d.d } } )))
       ))))
       } } )))
      in (
      #"list.adb" 70 0 0# Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1141)) )))
      );
     ( "GP_Sloc:list.adb:71:34:instantiated:railsystems.ads:22:4" (let temp___1147 = (let temp___1146 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
      ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(temp___1146)))) in (
       ()))
       end ;
      { ( temp___1146 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1146)) ) with Railsystems__list_stations__list_ptr.rec__elements = (let temp___1144 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
       (Array__Int__Railsystems__list_stations__data.set((Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content }))) ((let temp___1145 = (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) in (
        ( #"list.adb" 71 0 0# assert { ( #"list.adb" 71 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__if__a_assign__selectcomp__ixdcomp__selectcomp" "GP_Sloc:list.adb:71:25:instantiated:railsystems.ads:22:4" "GP_Id:23" "comment:            A.ELEMENTS(A.SIZE).ID:= ID;
                        ^ list.adb:71:25:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= temp___1145) /\ (temp___1145 <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
        temp___1145 )))
       ) ((let temp___1143 = (let temp___1142 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
        (Array__Int__Railsystems__list_stations__data.get temp___1142 (Standard__natural.to_rep (Railsystems__list_stations__list_ptr.rec__size (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content }))))))
        in (
        ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__data.rec__id((Railsystems__list_stations__data.__split_fields(temp___1143)))) in (
         ()))
         end ;
        { ( temp___1143 ) with Railsystems__list_stations__data.__split_fields = { ( (Railsystems__list_stations__data.__split_fields(temp___1143)) ) with Railsystems__list_stations__data.rec__id = (Standard__natural.of_rep Railsystems__list_stations__append__id.id) } } )))
       ))))
       } } )))
      in (
      #"list.adb" 71 0 0# Railsystems__list_stations__append__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1147)) )))
      ) )) else (
     ())) )) else (
    ())) );
   #"list.adb" 62 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:62 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 62 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "delete_all" defined at list.ads:75 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__delete_all__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__delete_all__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__delete_all__a__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"list.adb" 62 0 0# "W:diverges:N" "GP_Subp:list.ads:75" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__delete_all__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 105 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 105 0 0# assume { true };
  () (* checking of pragma precondition list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:106:14:instantiated:railsystems.ads:22:4" (let temp___1149 = (let temp___1148 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__delete_all__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(temp___1148)))) in (
     ()))
     end ;
    { ( temp___1148 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1148)) ) with Railsystems__list_stations__list_ptr.rec__size = (Standard__natural.of_rep 0) } } )))
    in (
    #"list.adb" 106 0 0# Railsystems__list_stations__delete_all__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1149)) )))
    );
   ( "GP_Sloc:list.adb:107:14:instantiated:railsystems.ads:22:4" (let temp___1151 = (let temp___1150 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__delete_all__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__head((Railsystems__list_stations__list_ptr.__split_fields(temp___1150)))) in (
     ()))
     end ;
    { ( temp___1150 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1150)) ) with Railsystems__list_stations__list_ptr.rec__head = (Standard__positive.of_rep 1) } } )))
    in (
    #"list.adb" 107 0 0# Railsystems__list_stations__delete_all__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1151)) )))
    );
   #"list.adb" 102 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:75 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 102 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "replace_by_id" defined at list.ads:87 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__replace_by_id__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T9s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__replace_by_id__a
 use        Railsystems__list_stations__replace_by_id__id
 use        Railsystems__list_stations__replace_by_id__newvalue
 use        Railsystems__list_stations__replace_by_id__L_3__R64s
 use        Railsystems__list_stations__replace_by_id__L_3
 use        Railsystems__list_stations__replace_by_id__L_3__T65s
 use        Railsystems__list_stations__replace_by_id__L_3__i
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__integer__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__replace_by_id__a__axiom
 use        Railsystems__list_stations__replace_by_id__id__axiom
 use        Railsystems__list_stations__replace_by_id__newvalue__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__list_stations__replace_by_id__L_3__axiom
 use        Railsystems__list_stations__replace_by_id__L_3__i__axiom
 use        Railsystems__list_stations__replace_by_id__L_3__R64s__axiom
 use        Railsystems__list_stations__replace_by_id__L_3__T65s__axiom

 let def #"list.adb" 102 0 0# "W:diverges:N" "GP_Subp:list.ads:87" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__replace_by_id__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__replace_by_id__newvalue.newvalue True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 87 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 87 0 0# assume { true };
  () (* checking of pragma precondition list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:215:7:instantiated:railsystems.ads:22:4" (if ((Boolean.orb((Boolean.orb(((Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) > 0)) ((Railsystems__list_stations__replace_by_id__id.id > 0)))) ((Railsystems__list_stations__replace_by_id__id.id <= (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))))))) then (
    ( ( "GP_Sloc:list.adb:216:25:instantiated:railsystems.ads:22:4" ( (let railsystems__list_stations__replace_by_id__L_3__R64s__assume = (Standard__natural.to_rep((Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))))) in (
     #"list.adb" 216 0 0# assume { (railsystems__list_stations__replace_by_id__L_3__R64s__assume = Railsystems__list_stations__replace_by_id__L_3__R64s.r64s) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__list_stations__replace_by_id__L_3__R64s.r64s True False True) } ) );
    ( "GP_Sloc:list.adb:216:31:instantiated:railsystems.ads:22:4" (let temp___1159 = 1 in (
    (let temp___1160 = Railsystems__list_stations__replace_by_id__L_3__R64s.r64s in (
     ( #"list.adb" 216 0 0# Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <- ( temp___1159 );
     () (* Translation of an Ada loop from list.adb:216 instantiated at railsystems.ads:22 *)
     ;
     (if ((Boolean.andb((temp___1159 <= Railsystems__list_stations__replace_by_id__L_3__i.i.int__content)) ((Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <= temp___1160)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop list.adb:216 instantiated at railsystems.ads:22 *)
       ;
       () (* While loop translating the Ada loop from list.adb:216 instantiated at railsystems.ads:22 *)
       ;
       #"list.adb" 216 0 0# while True do
        ( () (* Assume implicit invariants from the loop list.adb:216 instantiated at railsystems.ads:22 *)
        ;
        #"list.adb" 216 0 0# assume { (Boolean.andb((Boolean.andb((if ((1 <= Railsystems__list_stations__replace_by_id__L_3__R64s.r64s)) then (
         (Railsystems__list_stations__replace_by_id__L_3__T65s.dynamic_property 1 Railsystems__list_stations__replace_by_id__L_3__R64s.r64s Railsystems__list_stations__replace_by_id__L_3__i.i.int__content)) else true)) ((Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } False True True)))) (( (1 <= Railsystems__list_stations__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <= Railsystems__list_stations__replace_by_id__L_3__R64s.r64s) ))) };
        () (* Check for absence of RTE in the invariant of loop list.adb:216 instantiated at railsystems.ads:22 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop list.adb:216 instantiated at railsystems.ads:22 *)
        ;
        ( "GP_Sloc:list.adb:217:13:instantiated:railsystems.ads:22:4" (if ((Railsystems__list_stations__replace_by_id__L_3__i.i.int__content < 100)) then (
         ( "GP_Sloc:list.adb:218:16:instantiated:railsystems.ads:22:4" (if (((Standard__natural.to_rep((Railsystems__list_stations__data.rec__id((Railsystems__list_stations__data.__split_fields((let temp___1158 = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields({ Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })))) in (
          (Array__Int__Railsystems__list_stations__data.get(temp___1158) (( #"list.adb" 218 0 0# assert { ( #"list.adb" 218 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__L_3_while__if__if__cmp__selectcomp__ixdcomp" "GP_Sloc:list.adb:218:30:instantiated:railsystems.ads:22:4" "GP_Id:25" "comment:               if A.ELEMENTS(i).ID = ID then
                             ^ list.adb:218:30:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
          Railsystems__list_stations__replace_by_id__L_3__i.i.int__content )))))
         )))))) = Railsystems__list_stations__replace_by_id__id.id)) then (
          ( ( "GP_Sloc:list.adb:219:38:instantiated:railsystems.ads:22:4" (let temp___1157 = (let temp___1156 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
           ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__elements((Railsystems__list_stations__list_ptr.__split_fields(temp___1156)))) in (
            ()))
            end ;
           { ( temp___1156 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1156)) ) with Railsystems__list_stations__list_ptr.rec__elements = (let temp___1155 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
            (Array__Int__Railsystems__list_stations__data.set((Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content }))) (( #"list.adb" 219 0 0# assert { ( #"list.adb" 219 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_INDEX_CHECK" "GP_Shape:if__L_3_while__if__if__a_assign__selectcomp__ixdcomp" "GP_Sloc:list.adb:219:30:instantiated:railsystems.ads:22:4" "GP_Id:24" "comment:                  A.ELEMENTS(i).DATA := NEWVALUE;
                             ^ list.adb:219:30:instantiated:railsystems.ads:22:4:VC_INDEX_CHECK" ( (Railsystems__list_stations__list_ptr__T9s.first <= Railsystems__list_stations__replace_by_id__L_3__i.i.int__content) /\ (Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <= Railsystems__list_stations__list_ptr__T9s.last) ) ) };
            Railsystems__list_stations__replace_by_id__L_3__i.i.int__content )) ((let temp___1154 = (let temp___1153 = (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content })) in (
             (Array__Int__Railsystems__list_stations__data.get temp___1153 Railsystems__list_stations__replace_by_id__L_3__i.i.int__content)))
             in (
             ( #"list.adb" 216 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__data.rec__data((Railsystems__list_stations__data.__split_fields(temp___1154)))) in (
              ()))
              end ;
             { ( temp___1154 ) with Railsystems__list_stations__data.__split_fields = { ( (Railsystems__list_stations__data.__split_fields(temp___1154)) ) with Railsystems__list_stations__data.rec__data = Railsystems__list_stations__replace_by_id__newvalue.newvalue } } )))
            ))))
            } } )))
           in (
           #"list.adb" 219 0 0# Railsystems__list_stations__replace_by_id__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1157)) )))
           );
          ( "GP_Sloc:list.adb:220:19:instantiated:railsystems.ads:22:4" #"list.adb" 220 0 0# raise Return__exc ) )) else (
          ())) )) else (
         ())) );
        #"list.adb" 216 0 0# Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <- ( (Railsystems__list_stations__replace_by_id__L_3__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop list.adb:216 instantiated at railsystems.ads:22 *)
        ;
        (if ((Railsystems__list_stations__replace_by_id__L_3__i.i.int__content <= temp___1160)) then (
         ()) else (
         #"list.adb" 216 0 0# raise Railsystems__list_stations__replace_by_id__L_3.L_3)) )
       done )
      with
       Railsystems__list_stations__replace_by_id__L_3.L_3 -> ()
      end)) )))
    ))
     ) )) else (
    ())) );
   #"list.adb" 212 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:87 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 212 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "init" defined at list.ads:91 instantiated at railsystems.ads:22, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__list_stations__init__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__init__a
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Types__station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Railsystems__list_stations__init__a__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"list.adb" 212 0 0# "W:diverges:N" "GP_Subp:list.ads:91" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 42 0 0# assume { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__init__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  () (* Check for RTE in the Pre of the subprogram list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 105 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  #"list.ads" 105 0 0# assume { true };
  () (* checking of pragma precondition list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  try
   ( ( "GP_Sloc:list.adb:231:14:instantiated:railsystems.ads:22:4" (let temp___1162 = (let temp___1161 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__init__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__head((Railsystems__list_stations__list_ptr.__split_fields(temp___1161)))) in (
     ()))
     end ;
    { ( temp___1161 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1161)) ) with Railsystems__list_stations__list_ptr.rec__head = (Standard__positive.of_rep 1) } } )))
    in (
    #"list.adb" 231 0 0# Railsystems__list_stations__init__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1162)) )))
    );
   ( "GP_Sloc:list.adb:232:14:instantiated:railsystems.ads:22:4" (let temp___1164 = (let temp___1163 = { Railsystems__list_stations__list_ptr.__split_fields = Railsystems__list_stations__init__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content } in (
    ( #"list.ads" 105 0 0# abstract ensures {true}(let _ = (Railsystems__list_stations__list_ptr.rec__size((Railsystems__list_stations__list_ptr.__split_fields(temp___1163)))) in (
     ()))
     end ;
    { ( temp___1163 ) with Railsystems__list_stations__list_ptr.__split_fields = { ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1163)) ) with Railsystems__list_stations__list_ptr.rec__size = (Standard__natural.of_rep 0) } } )))
    in (
    #"list.adb" 232 0 0# Railsystems__list_stations__init__a.a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content <- ( (Railsystems__list_stations__list_ptr.__split_fields(temp___1164)) )))
    );
   #"list.adb" 229 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition list.ads:91 instantiated at railsystems.ads:22 *)
  ;
  #"list.adb" 229 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "init" defined at railsystems.ads:37, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__init__subprogram_def
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__init__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__init__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__init__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__init__r_system
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__init__r_system__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__init__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__init__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__init__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"list.adb" 229 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:37" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:37 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:37 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:37 *)
  ;
  #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:37 *)
  ;
  #"railsystems.ads" 29 0 0# assume { true };
  () (* checking of pragma precondition railsystems.ads:37 *)
  ;
  try
   ( ( "GP_Sloc:railsystems.adb:15:30" (let railsystems__list_trains__init__a__compl = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
    #"railsystems.ads" 29 0 0# let railsystems__list_trains__init__a__fields = { Railsystems__list_trains__list_ptr.__split_fields__content = (Railsystems__list_trains__list_ptr.__split_fields(railsystems__list_trains__init__a__compl)) } in 
     ( (Railsystems__list_trains__init__axiom.init(railsystems__list_trains__init__a__fields));
     (let temp___1166 = (let temp___1165 = { Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
      ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields(temp___1165)))) in (
       ()))
       end ;
      { ( temp___1165 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1165)) ) with Railsystems__railsystem.rec__all_trains = { Railsystems__list_trains__list_ptr.__split_fields = railsystems__list_trains__init__a__fields.Railsystems__list_trains__list_ptr.__split_fields__content } } } )))
      in (
      #"railsystems.adb" 15 0 0# Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1166)) )))
      )))
    );
   ( "GP_Sloc:railsystems.adb:16:32" (let railsystems__list_stations__init__a__compl = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
    #"railsystems.ads" 29 0 0# let railsystems__list_stations__init__a__fields = { Railsystems__list_stations__list_ptr.__split_fields__content = (Railsystems__list_stations__list_ptr.__split_fields(railsystems__list_stations__init__a__compl)) } in 
     ( (Railsystems__list_stations__init__axiom.init(railsystems__list_stations__init__a__fields));
     (let temp___1168 = (let temp___1167 = { Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
      ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(temp___1167)))) in (
       ()))
       end ;
      { ( temp___1167 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1167)) ) with Railsystems__railsystem.rec__all_stations = { Railsystems__list_stations__list_ptr.__split_fields = railsystems__list_stations__init__a__fields.Railsystems__list_stations__list_ptr.__split_fields__content } } } )))
      in (
      #"railsystems.adb" 16 0 0# Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1168)) )))
      )))
    );
   ( "GP_Sloc:railsystems.adb:17:27" (let stations__list_tracks__init__a__compl = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
    #"railsystems.ads" 29 0 0# let stations__list_tracks__init__a__fields = { Stations__list_tracks__list_ptr.__split_fields__content = (Stations__list_tracks__list_ptr.__split_fields(stations__list_tracks__init__a__compl)) } in 
     ( (Stations__list_tracks__init__axiom.init(stations__list_tracks__init__a__fields));
     (let temp___1170 = (let temp___1169 = { Railsystems__railsystem.__split_fields = Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
      ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(temp___1169)))) in (
       ()))
       end ;
      { ( temp___1169 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1169)) ) with Railsystems__railsystem.rec__all_tracks = { Stations__list_tracks__list_ptr.__split_fields = stations__list_tracks__init__a__fields.Stations__list_tracks__list_ptr.__split_fields__content } } } )))
      in (
      #"railsystems.adb" 17 0 0# Railsystems__init__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1170)) )))
      )))
    );
   #"railsystems.adb" 12 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:37 *)
  ;
  #"railsystems.adb" 12 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addtrain" defined at railsystems.ads:38, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__addtrain__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location__T1s
 use        Trains__train_location__T4s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element
 use        Railsystems__list_trains__get_element__axiom
 use        Railsystems__list_trains__get_element_by_id__axiom
 use        Railsystems__list_trains__append__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__addtrain__r_system
 use        Railsystems__addtrain__id
 use        Railsystems__addtrain__train
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__addtrain__train__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__addtrain__r_system__axiom
 use        Railsystems__addtrain__id__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T4s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element__axiom
 use        Railsystems__list_trains__get_element_by_id__axiom
 use        Railsystems__list_trains__append__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"railsystems.adb" 12 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:38" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:38 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addtrain__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:38 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:38 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb((Railsystems__addtrain__id.id > 0)) ((Railsystems__addtrain__id.id < 101)))) (( (let index = #"railsystems.ads" 38 0 0# (any int
  ) in (
   (if ((Boolean.andb((1 <= index)) ((index <= (Railsystems__list_trains__get_size__axiom.get_size((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))))))) then (
    #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Railsystems__list_trains__data_type.rec__id((Railsystems__list_trains__data_type.__split_fields((Railsystems__list_trains__get_element__axiom.get_element((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (index)))))))) <> Railsystems__addtrain__id.id) in (
     ()))
     end ))))
  ;
  #"railsystems.ads" 43 0 0# (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element.get_element (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addtrain__id.id) )) )} 
  ) ))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:38 *)
  ;
  #"railsystems.ads" 38 0 0# assume { ( ( (Railsystems__addtrain__id.id > 0) /\ (Railsystems__addtrain__id.id < 101) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element.get_element (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addtrain__id.id) )) ) };
  () (* checking of pragma precondition railsystems.ads:38 *)
  ;
  try
   ( #"railsystems.ads" 38 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 260 0 0# abstract ensures {true}(let _ = (let temp___1171 = #"trains.ads" 17 0 0# (any Trains__train.train
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Trains__train.id__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.location__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (let temp___1172 = #"trains.ads" 9 0 0# (any Trains__train_location.train_location
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Trains__train_location.currentlocation__pred(temp___1172))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 11 0 0# assert { ( #"trains.ads" 11 0 0# "model_vc" "keep_on_simp" "GP_Sloc:trains.ads:11:40" "GP_Reason:VC_LENGTH_CHECK" "comment:         currentLocation:String(1..7):=\"None   \";
                                       ^ trains.ads:11:40:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Id:26" ((if ((1 <= 7)) then (
        ((7 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
        ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
        0))) ) };
       Temp___723.temp___723 ) in (
        ()))
        end ));
      (if ((Trains__train_location.none__pred(temp___1172))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 12 0 0# assert { ( #"trains.ads" 12 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Sloc:trains.ads:12:30" "comment:         None: String(1..4):=\"None\";
                             ^ trains.ads:12:30:VC_LENGTH_CHECK" "GP_Id:27" ((if ((1 <= 4)) then (
        ((4 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T4s.first <= Trains__train_location__T4s.last)) then (
        ((Trains__train_location__T4s.last - Trains__train_location__T4s.first) + 1)) else (
        0))) ) };
       Temp___724.temp___724 ) in (
        ()))
        end ));
      (if ((Trains__train_location.track__pred(temp___1172))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1173 = #"tracks.ads" 7 0 0# (any Tracks__track.track
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Tracks__track.id__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.origin__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.destination__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trainid__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslineorigin__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslinedestination__pred(temp___1173))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end ));
      (if ((Trains__train_location.station__pred(temp___1172))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1174 = #"stations.ads" 18 0 0# (any Stations__station.station
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Stations__station.id__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.location__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.trainid__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.incoming__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1175 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1175))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1175))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1176 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1176))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1177 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1177))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1176))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1175))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1175))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.outgoing__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1178 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1178))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1178))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1179 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1179))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1180 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1180))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1179))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1178))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1178))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.trackslineoriginanddestination__pred(temp___1174))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1181 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Types__list_od__list_ptr.size__pred(temp___1181))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.elements__pred(temp___1181))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
            ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1182 = #"list.ads" 95 0 0# (any Types__list_od__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Types__list_od__data.data__pred(temp___1182))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1183 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Types__list_od__data_type.origin__pred(temp___1183))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Types__list_od__data_type.destination__pred(temp___1183))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Types__list_od__data.id__pred(temp___1182))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.head__pred(temp___1181))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1181))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end )) )))
        in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Trains__train.origin__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.destination__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.state__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 3 in (
      ()))
      end ));
    (if ((Trains__train.start_run_time__pred(temp___1171))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 260 0 0# assume { (Trains__train__axiom.default_initial_assumption { Trains__train.__split_fields = Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content } False) };
   #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:268:16" (let temp___1186 = (let temp___1185 = { Trains__train.__split_fields = Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__id((Trains__train.__split_fields(temp___1185)))) in (
     ()))
     end ;
    { ( temp___1185 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1185)) ) with Trains__train.rec__id = (Standard__natural.of_rep Railsystems__addtrain__id.id) } } )))
    in (
    #"railsystems.adb" 268 0 0# Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1186)) )))
    );
   ( "GP_Sloc:railsystems.adb:269:7" (if (((Standard__natural.to_rep((Railsystems__list_trains__data_type.rec__id((Railsystems__list_trains__data_type.__split_fields((Railsystems__list_trains__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addtrain__id.id)))))))) = 0)) then (
    ( "GP_Sloc:railsystems.adb:270:10" (if (((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content })))))) <> 0)) then (
     ( "GP_Sloc:railsystems.adb:271:24" (let railsystems__list_trains__append__a__compl = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
      #"railsystems.ads" 29 0 0# let railsystems__list_trains__append__a__fields = { Railsystems__list_trains__list_ptr.__split_fields__content = (Railsystems__list_trains__list_ptr.__split_fields(railsystems__list_trains__append__a__compl)) } in 
       ( ( #"railsystems.adb" 271 0 0# "model_vc" "keep_on_simp" "GP_Sloc:railsystems.adb:271:24" "GP_Reason:VC_PRECONDITION" "GP_Id:28" "comment:            LIST_TRAINS.APPEND(r_system.All_Trains, train,ID);
                       ^ railsystems.adb:271:24:VC_PRECONDITION" "GP_Shape:if__if__call_append" (Railsystems__list_trains__append__axiom.append(railsystems__list_trains__append__a__fields) ((Railsystems__list_trains__data_type.of_base({ Trains__train.__split_fields = Railsystems__addtrain__train.train__split_fields.Trains__train.__split_fields__content }))) (Railsystems__addtrain__id.id)) );
       (let temp___1188 = (let temp___1187 = { Railsystems__railsystem.__split_fields = Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
        ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields(temp___1187)))) in (
         ()))
         end ;
        { ( temp___1187 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1187)) ) with Railsystems__railsystem.rec__all_trains = { Railsystems__list_trains__list_ptr.__split_fields = railsystems__list_trains__append__a__fields.Railsystems__list_trains__list_ptr.__split_fields__content } } } )))
        in (
        #"railsystems.adb" 271 0 0# Railsystems__addtrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1188)) )))
        )))
      )) else (
     ())) )) else (
    ())) );
   #"railsystems.adb" 257 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:38 *)
  ;
  #"railsystems.adb" 257 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addtrack" defined at railsystems.ads:47, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__addtrack__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Tracks__track
 use        Tracks__track__axiom
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element
 use        Stations__list_tracks__get_element__axiom
 use        Stations__list_tracks__get_element_by_id
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Stations__list_tracks__append__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__addtrack__r_system
 use        Railsystems__addtrack__id
 use        Railsystems__addtrack__origin
 use        Railsystems__addtrack__destination
 use        Railsystems__addtrack__lineorigin
 use        Railsystems__addtrack__linedestination
 use        Railsystems__addtrack__track
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__addtrack__track__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__addtrack__r_system__axiom
 use        Railsystems__addtrack__id__axiom
 use        Railsystems__addtrack__origin__axiom
 use        Railsystems__addtrack__destination__axiom
 use        Railsystems__addtrack__lineorigin__axiom
 use        Railsystems__addtrack__linedestination__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element__axiom
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Stations__list_tracks__append__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"railsystems.adb" 257 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:47" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:47 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addtrack__id.id True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__addtrack__origin.origin True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__addtrack__destination.destination True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__addtrack__lineorigin.lineorigin True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__addtrack__linedestination.linedestination True False True) };
  #"list.ads" 22 0 0# assume { (Stations__list_tracks__data_type__axiom.dynamic_invariant Stations__list_tracks__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:47 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:47 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Railsystems__addtrack__id.id >= 1)) ((Railsystems__addtrack__id.id <= 100)))) ((Railsystems__addtrack__origin.origin <> 0)))) ((Railsystems__addtrack__destination.destination <> 0)))) ((Railsystems__addtrack__lineorigin.lineorigin <> 0)))) ((Railsystems__addtrack__linedestination.linedestination <> 0)))) ((Railsystems__addtrack__origin.origin <> Railsystems__addtrack__destination.destination)))) ((Railsystems__addtrack__lineorigin.lineorigin <> Railsystems__addtrack__linedestination.linedestination)))) ((if ((Railsystems__addtrack__id.id <> 0)) then (
   ((Standard__natural.to_rep((Stations__list_tracks__data_type.rec__id((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addtrack__id.id)))))))) = 0)) else (
   (Boolean.of_int(1))))))) (( (let index = #"railsystems.ads" 57 0 0# (any int
  ) in (
   (if ((Boolean.andb((1 <= index)) ((index <= (Stations__list_tracks__get_size__axiom.get_size((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))))))) then (
    #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Stations__list_tracks__data_type.rec__id((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (index)))))))) <> Railsystems__addtrack__id.id) in (
     ()))
     end ))))
  ;
  #"railsystems.ads" 59 0 0# (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall index : int.
   ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addtrack__id.id) )) )} 
  ) ))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:47 *)
  ;
  #"railsystems.ads" 47 0 0# assume { ( ( ( ( ( ( ( ( ( (Railsystems__addtrack__id.id >= 1) /\ (Railsystems__addtrack__id.id <= 100) ) /\ (Railsystems__addtrack__origin.origin <> 0) ) /\ (Railsystems__addtrack__destination.destination <> 0) ) /\ (Railsystems__addtrack__lineorigin.lineorigin <> 0) ) /\ (Railsystems__addtrack__linedestination.linedestination <> 0) ) /\ (Railsystems__addtrack__origin.origin <> Railsystems__addtrack__destination.destination) ) /\ (Railsystems__addtrack__lineorigin.lineorigin <> Railsystems__addtrack__linedestination.linedestination) ) /\ (if ((Railsystems__addtrack__id.id <> 0)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) Railsystems__addtrack__id.id)))) = 0)) else (
   true)) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addtrack__id.id) )) ) };
  () (* checking of pragma precondition railsystems.ads:47 *)
  ;
  try
   ( #"railsystems.ads" 47 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 238 0 0# abstract ensures {true}(let _ = (let temp___1190 = #"tracks.ads" 7 0 0# (any Tracks__track.track
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Tracks__track.id__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.origin__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.destination__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trainid__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslineorigin__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslinedestination__pred(temp___1190))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 238 0 0# assume { (Tracks__track__axiom.default_initial_assumption { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } False) };
   #"tracks.ads" 7 0 0# assume { (Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:240:15" (let temp___1193 = (let temp___1192 = { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__id((Tracks__track.__split_fields(temp___1192)))) in (
     ()))
     end ;
    { ( temp___1192 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1192)) ) with Tracks__track.rec__id = (Standard__natural.of_rep Railsystems__addtrack__id.id) } } )))
    in (
    #"railsystems.adb" 240 0 0# Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1193)) )))
    );
   ( "GP_Sloc:railsystems.adb:241:19" (let temp___1195 = (let temp___1194 = { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__origin((Tracks__track.__split_fields(temp___1194)))) in (
     ()))
     end ;
    { ( temp___1194 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1194)) ) with Tracks__track.rec__origin = (Types__station_locations.of_rep Railsystems__addtrack__origin.origin) } } )))
    in (
    #"railsystems.adb" 241 0 0# Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1195)) )))
    );
   ( "GP_Sloc:railsystems.adb:242:24" (let temp___1197 = (let temp___1196 = { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__destination((Tracks__track.__split_fields(temp___1196)))) in (
     ()))
     end ;
    { ( temp___1196 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1196)) ) with Tracks__track.rec__destination = (Types__station_locations.of_rep Railsystems__addtrack__destination.destination) } } )))
    in (
    #"railsystems.adb" 242 0 0# Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1197)) )))
    );
   ( "GP_Sloc:railsystems.adb:243:29" (let temp___1199 = (let temp___1198 = { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields(temp___1198)))) in (
     ()))
     end ;
    { ( temp___1198 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1198)) ) with Tracks__track.rec__trackslineorigin = (Types__station_locations.of_rep Railsystems__addtrack__lineorigin.lineorigin) } } )))
    in (
    #"railsystems.adb" 243 0 0# Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1199)) )))
    );
   ( "GP_Sloc:railsystems.adb:244:34" (let temp___1201 = (let temp___1200 = { Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields(temp___1200)))) in (
     ()))
     end ;
    { ( temp___1200 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1200)) ) with Tracks__track.rec__trackslinedestination = (Types__station_locations.of_rep Railsystems__addtrack__linedestination.linedestination) } } )))
    in (
    #"railsystems.adb" 244 0 0# Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1201)) )))
    );
   ( "GP_Sloc:railsystems.adb:245:7" (if (((Standard__natural.to_rep((Stations__list_tracks__data_type.rec__id((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addtrack__id.id)))))))) = 0)) then (
    ( "GP_Sloc:railsystems.adb:246:10" (if ((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)) (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Standard__natural.to_rep((Tracks__track.rec__trainid((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) = 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) then (
     ( "GP_Sloc:railsystems.adb:247:33" (let stations__list_tracks__append__a__compl = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
      #"railsystems.ads" 29 0 0# let stations__list_tracks__append__a__fields = { Stations__list_tracks__list_ptr.__split_fields__content = (Stations__list_tracks__list_ptr.__split_fields(stations__list_tracks__append__a__compl)) } in 
       ( ( #"railsystems.adb" 247 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Shape:if__if__call_append" "GP_Sloc:railsystems.adb:247:33" "GP_Id:29" "comment:            Stations.LIST_TRACKS.APPEND(r_system.All_Tracks,track, ID);
                                ^ railsystems.adb:247:33:VC_PRECONDITION" (Stations__list_tracks__append__axiom.append(stations__list_tracks__append__a__fields) ((Stations__list_tracks__data_type.of_base({ Tracks__track.__split_fields = Railsystems__addtrack__track.track__split_fields.Tracks__track.__split_fields__content }))) (Railsystems__addtrack__id.id)) );
       (let temp___1203 = (let temp___1202 = { Railsystems__railsystem.__split_fields = Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
        ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(temp___1202)))) in (
         ()))
         end ;
        { ( temp___1202 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1202)) ) with Railsystems__railsystem.rec__all_tracks = { Stations__list_tracks__list_ptr.__split_fields = stations__list_tracks__append__a__fields.Stations__list_tracks__list_ptr.__split_fields__content } } } )))
        in (
        #"railsystems.adb" 247 0 0# Railsystems__addtrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1203)) )))
        )))
      )) else (
     ())) )) else (
    ())) );
   #"railsystems.adb" 231 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:47 *)
  ;
  #"railsystems.adb" 231 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addstation" defined at railsystems.ads:68, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__addstation__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element
 use        Railsystems__list_stations__get_element__axiom
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__list_stations__append__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__addstation__r_system
 use        Railsystems__addstation__id
 use        Railsystems__addstation__location
 use        Railsystems__addstation__station
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__addstation__station__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__addstation__r_system__axiom
 use        Railsystems__addstation__id__axiom
 use        Railsystems__addstation__location__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__list_stations__append__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"railsystems.adb" 231 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:68" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:68 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addstation__id.id True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__addstation__location.location True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:68 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:68 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Railsystems__addstation__id.id >= 1)) ((Railsystems__addstation__id.id <= 100)))) ((if ((Railsystems__addstation__id.id <> 0)) then (
   ((Standard__natural.to_rep((Railsystems__list_stations__data_type.rec__id((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addstation__id.id)))))))) = 0)) else (
   (Boolean.of_int(1))))))) (( (let index = #"railsystems.ads" 72 0 0# (any int
  ) in (
   (if ((Boolean.andb((1 <= index)) ((index <= (Railsystems__list_stations__get_size__axiom.get_size((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))))))) then (
    #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Railsystems__list_stations__data_type.rec__id((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element__axiom.get_element((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (index)))))))) <> Railsystems__addstation__id.id) in (
     ()))
     end ))))
  ;
  #"railsystems.ads" 74 0 0# (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addstation__id.id) )) )} 
  ) )))) (( (let index = #"railsystems.ads" 68 0 0# (any int
  ) in (
   (if ((Boolean.andb((1 <= index)) ((index <= (Railsystems__list_stations__get_size__axiom.get_size((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))))))) then (
    #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = ((Types__station_locations.to_rep((Railsystems__list_stations__data_type.rec__location((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element__axiom.get_element((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (index)))))))) <> Railsystems__addstation__location.location) in (
     ()))
     end ))))
  ;
  #"railsystems.ads" 78 0 0# (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addstation__location.location) )) )} 
  ) ))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:68 *)
  ;
  #"railsystems.ads" 68 0 0# assume { ( ( ( ( (Railsystems__addstation__id.id >= 1) /\ (Railsystems__addstation__id.id <= 100) ) /\ (if ((Railsystems__addstation__id.id <> 0)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) Railsystems__addstation__id.id)))) = 0)) else (
   true)) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addstation__id.id) )) ) /\ (forall index : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) ) -> ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) index)))) <> Railsystems__addstation__location.location) )) ) };
  () (* checking of pragma precondition railsystems.ads:68 *)
  ;
  try
   ( #"railsystems.ads" 68 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 299 0 0# abstract ensures {true}(let _ = (let temp___1205 = #"stations.ads" 18 0 0# (any Stations__station.station
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Stations__station.id__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.location__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.trainid__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.incoming__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1206 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1206))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1206))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1207 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1207))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1208 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1208))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1207))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1206))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1206))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.outgoing__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1209 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1209))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1209))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1210 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1210))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1211 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1211))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1210))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1209))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1209))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.trackslineoriginanddestination__pred(temp___1205))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1212 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1212))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1212))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1213 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1213))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1214 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1214))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1214))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1213))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1212))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1212))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 299 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content } False) };
   #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:302:18" (let temp___1217 = (let temp___1216 = { Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content } in (
    ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__id((Stations__station.__split_fields(temp___1216)))) in (
     ()))
     end ;
    { ( temp___1216 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1216)) ) with Stations__station.rec__id = (Standard__natural.of_rep Railsystems__addstation__id.id) } } )))
    in (
    #"railsystems.adb" 302 0 0# Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1217)) )))
    );
   ( "GP_Sloc:railsystems.adb:303:24" (let temp___1219 = (let temp___1218 = { Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content } in (
    ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__location((Stations__station.__split_fields(temp___1218)))) in (
     ()))
     end ;
    { ( temp___1218 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1218)) ) with Stations__station.rec__location = (Types__station_locations.of_rep Railsystems__addstation__location.location) } } )))
    in (
    #"railsystems.adb" 303 0 0# Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1219)) )))
    );
   ( "GP_Sloc:railsystems.adb:304:7" (if (((Standard__natural.to_rep((Railsystems__list_stations__data_type.rec__id((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addstation__id.id)))))))) = 0)) then (
    ( "GP_Sloc:railsystems.adb:305:10" (if (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content })))))) <> 0)) then (
     ( "GP_Sloc:railsystems.adb:306:26" (let railsystems__list_stations__append__a__compl = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
      #"railsystems.ads" 29 0 0# let railsystems__list_stations__append__a__fields = { Railsystems__list_stations__list_ptr.__split_fields__content = (Railsystems__list_stations__list_ptr.__split_fields(railsystems__list_stations__append__a__compl)) } in 
       ( ( #"railsystems.adb" 306 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Shape:if__if__call_append" "GP_Sloc:railsystems.adb:306:26" "GP_Id:30" "comment:            LIST_STATIONS.APPEND(r_system.All_Stations, station,ID);
                         ^ railsystems.adb:306:26:VC_PRECONDITION" (Railsystems__list_stations__append__axiom.append(railsystems__list_stations__append__a__fields) ((Railsystems__list_stations__data_type.of_base({ Stations__station.__split_fields = Railsystems__addstation__station.station__split_fields.Stations__station.__split_fields__content }))) (Railsystems__addstation__id.id)) );
       (let temp___1221 = (let temp___1220 = { Railsystems__railsystem.__split_fields = Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
        ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(temp___1220)))) in (
         ()))
         end ;
        { ( temp___1220 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1220)) ) with Railsystems__railsystem.rec__all_stations = { Railsystems__list_stations__list_ptr.__split_fields = railsystems__list_stations__append__a__fields.Railsystems__list_stations__list_ptr.__split_fields__content } } } )))
        in (
        #"railsystems.adb" 306 0 0# Railsystems__addstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1221)) )))
        )))
      )) else (
     ())) )) else (
    ())) );
   #"railsystems.adb" 294 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:68 *)
  ;
  #"railsystems.adb" 294 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "replacestation" defined at railsystems.ads:84, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__replacestation__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element__axiom
 use        Railsystems__list_stations__replace_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__r_system
 use        Railsystems__replacestation__station
 use        Railsystems__replacestation__L_7__R33b
 use        Railsystems__replacestation__L_7
 use        Railsystems__replacestation__L_7__T34b
 use        Railsystems__replacestation__L_7__i
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__replacestation__L_7__i__axiom
 use        Railsystems__replacestation__L_7__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__r_system__axiom
 use        Railsystems__replacestation__station__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element__axiom
 use        Railsystems__list_stations__replace_by_id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__replacestation__L_7__R33b__axiom
 use        Railsystems__replacestation__L_7__T34b__axiom

 let def #"railsystems.adb" 294 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:84" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:84 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant Railsystems__replacestation__station.station True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:84 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:84 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields(Railsystems__replacestation__station.station)))))) <> 0) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:84 *)
  ;
  #"railsystems.ads" 84 0 0# assume { ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields Railsystems__replacestation__station.station))) <> 0) };
  () (* checking of pragma precondition railsystems.ads:84 *)
  ;
  try
   ( ( "GP_Sloc:railsystems.adb:361:7" (if (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields(Railsystems__replacestation__station.station)))))) <> 0)) then (
    ( ( "GP_Sloc:railsystems.adb:362:35" ( (let railsystems__replacestation__L_7__R33b__assume = (Railsystems__list_stations__get_size__axiom.get_size((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))) in (
     #"railsystems.adb" 362 0 0# assume { (railsystems__replacestation__L_7__R33b__assume = Railsystems__replacestation__L_7__R33b.r33b) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__replacestation__L_7__R33b.r33b True False True) } ) );
    ( "GP_Sloc:railsystems.adb:362:73" (let temp___1225 = 1 in (
    (let temp___1226 = Railsystems__replacestation__L_7__R33b.r33b in (
     ( #"railsystems.adb" 362 0 0# Railsystems__replacestation__L_7__i.i.int__content <- ( temp___1225 );
     () (* Translation of an Ada loop from railsystems.adb:362 *)
     ;
     (if ((Boolean.andb((temp___1225 <= Railsystems__replacestation__L_7__i.i.int__content)) ((Railsystems__replacestation__L_7__i.i.int__content <= temp___1226)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:362 *)
       ;
       () (* While loop translating the Ada loop from railsystems.adb:362 *)
       ;
       #"railsystems.adb" 362 0 0# while True do
        ( () (* Assume implicit invariants from the loop railsystems.adb:362 *)
        ;
        #"railsystems.adb" 362 0 0# assume { (Boolean.andb((Boolean.andb((if ((1 <= Railsystems__replacestation__L_7__R33b.r33b)) then (
         (Railsystems__replacestation__L_7__T34b.dynamic_property 1 Railsystems__replacestation__L_7__R33b.r33b Railsystems__replacestation__L_7__i.i.int__content)) else true)) ((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)))) (( (1 <= Railsystems__replacestation__L_7__i.i.int__content) /\ (Railsystems__replacestation__L_7__i.i.int__content <= Railsystems__replacestation__L_7__R33b.r33b) ))) };
        () (* Check for absence of RTE in the invariant of loop railsystems.adb:362 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop railsystems.adb:362 *)
        ;
        ( "GP_Sloc:railsystems.adb:363:13" (if ((Boolean.andb(((Types__station_locations.to_rep((Railsystems__list_stations__data_type.rec__location((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element__axiom.get_element((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacestation__L_7__i.i.int__content)))))))) = (Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields(Railsystems__replacestation__station.station)))))))) (((Standard__natural.to_rep((Railsystems__list_stations__data_type.rec__id((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element__axiom.get_element((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacestation__L_7__i.i.int__content)))))))) = (Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields(Railsystems__replacestation__station.station)))))))))) then (
         ( "GP_Sloc:railsystems.adb:367:29" (let railsystems__list_stations__replace_by_id__a__compl = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
          #"railsystems.ads" 29 0 0# let railsystems__list_stations__replace_by_id__a__fields = { Railsystems__list_stations__list_ptr.__split_fields__content = (Railsystems__list_stations__list_ptr.__split_fields(railsystems__list_stations__replace_by_id__a__compl)) } in 
           ( (Railsystems__list_stations__replace_by_id__axiom.replace_by_id(railsystems__list_stations__replace_by_id__a__fields) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields(Railsystems__replacestation__station.station))))))) ((Railsystems__list_stations__data_type.of_base(Railsystems__replacestation__station.station))));
           (let temp___1224 = (let temp___1223 = { Railsystems__railsystem.__split_fields = Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
            ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(temp___1223)))) in (
             ()))
             end ;
            { ( temp___1223 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1223)) ) with Railsystems__railsystem.rec__all_stations = { Railsystems__list_stations__list_ptr.__split_fields = railsystems__list_stations__replace_by_id__a__fields.Railsystems__list_stations__list_ptr.__split_fields__content } } } )))
            in (
            #"railsystems.adb" 367 0 0# Railsystems__replacestation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1224)) )))
            )))
          )) else (
         ())) );
        #"railsystems.adb" 362 0 0# Railsystems__replacestation__L_7__i.i.int__content <- ( (Railsystems__replacestation__L_7__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:362 *)
        ;
        (if ((Railsystems__replacestation__L_7__i.i.int__content <= temp___1226)) then (
         ()) else (
         #"railsystems.adb" 362 0 0# raise Railsystems__replacestation__L_7.L_7)) )
       done )
      with
       Railsystems__replacestation__L_7.L_7 -> ()
      end)) )))
    ))
     ) )) else (
    ())) );
   #"railsystems.adb" 357 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:84 *)
  ;
  #"railsystems.adb" 357 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "replacetrain" defined at railsystems.ads:88, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__replacetrain__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element__axiom
 use        Railsystems__list_trains__replace_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacetrain__r_system
 use        Railsystems__replacetrain__train
 use        Railsystems__replacetrain__L_6__R31b
 use        Railsystems__replacetrain__L_6
 use        Railsystems__replacetrain__L_6__T32b
 use        Railsystems__replacetrain__L_6__i
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__replacetrain__L_6__i__axiom
 use        Railsystems__replacetrain__L_6__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacetrain__r_system__axiom
 use        Railsystems__replacetrain__train__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element__axiom
 use        Railsystems__list_trains__replace_by_id__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__replacetrain__L_6__R31b__axiom
 use        Railsystems__replacetrain__L_6__T32b__axiom

 let def #"railsystems.adb" 357 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:88" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:88 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant Railsystems__replacetrain__train.train True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:88 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:88 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields(Railsystems__replacetrain__train.train)))))) > 0) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:88 *)
  ;
  #"railsystems.ads" 88 0 0# assume { ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields Railsystems__replacetrain__train.train))) > 0) };
  () (* checking of pragma precondition railsystems.ads:88 *)
  ;
  try
   ( ( "GP_Sloc:railsystems.adb:344:7" (if ((Boolean.andb(((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields(Railsystems__replacetrain__train.train)))))))))))))) > 0)) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields(Railsystems__replacetrain__train.train)))))))))))))) < 101)))) then (
    ( ( "GP_Sloc:railsystems.adb:345:34" ( (let railsystems__replacetrain__L_6__R31b__assume = (Railsystems__list_trains__get_size__axiom.get_size((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))) in (
     #"railsystems.adb" 345 0 0# assume { (railsystems__replacetrain__L_6__R31b__assume = Railsystems__replacetrain__L_6__R31b.r31b) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__replacetrain__L_6__R31b.r31b True False True) } ) );
    ( "GP_Sloc:railsystems.adb:345:70" (let temp___1230 = 1 in (
    (let temp___1231 = Railsystems__replacetrain__L_6__R31b.r31b in (
     ( #"railsystems.adb" 345 0 0# Railsystems__replacetrain__L_6__i.i.int__content <- ( temp___1230 );
     () (* Translation of an Ada loop from railsystems.adb:345 *)
     ;
     (if ((Boolean.andb((temp___1230 <= Railsystems__replacetrain__L_6__i.i.int__content)) ((Railsystems__replacetrain__L_6__i.i.int__content <= temp___1231)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:345 *)
       ;
       () (* While loop translating the Ada loop from railsystems.adb:345 *)
       ;
       #"railsystems.adb" 345 0 0# while True do
        ( () (* Assume implicit invariants from the loop railsystems.adb:345 *)
        ;
        #"railsystems.adb" 345 0 0# assume { (Boolean.andb((Boolean.andb((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)) ((if ((1 <= Railsystems__replacetrain__L_6__R31b.r31b)) then (
         (Railsystems__replacetrain__L_6__T32b.dynamic_property 1 Railsystems__replacetrain__L_6__R31b.r31b Railsystems__replacetrain__L_6__i.i.int__content)) else true)))) (( (1 <= Railsystems__replacetrain__L_6__i.i.int__content) /\ (Railsystems__replacetrain__L_6__i.i.int__content <= Railsystems__replacetrain__L_6__R31b.r31b) ))) };
        () (* Check for absence of RTE in the invariant of loop railsystems.adb:345 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop railsystems.adb:345 *)
        ;
        ( "GP_Sloc:railsystems.adb:346:13" (if (((Standard__natural.to_rep((Railsystems__list_trains__data_type.rec__id((Railsystems__list_trains__data_type.__split_fields((Railsystems__list_trains__get_element__axiom.get_element((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacetrain__L_6__i.i.int__content)))))))) = (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields(Railsystems__replacetrain__train.train)))))))) then (
         ( "GP_Sloc:railsystems.adb:348:27" (let railsystems__list_trains__replace_by_id__a__compl = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
          #"railsystems.ads" 29 0 0# let railsystems__list_trains__replace_by_id__a__fields = { Railsystems__list_trains__list_ptr.__split_fields__content = (Railsystems__list_trains__list_ptr.__split_fields(railsystems__list_trains__replace_by_id__a__compl)) } in 
           ( (Railsystems__list_trains__replace_by_id__axiom.replace_by_id(railsystems__list_trains__replace_by_id__a__fields) ((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields(Railsystems__replacetrain__train.train))))))) ((Railsystems__list_trains__data_type.of_base(Railsystems__replacetrain__train.train))));
           (let temp___1229 = (let temp___1228 = { Railsystems__railsystem.__split_fields = Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
            ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields(temp___1228)))) in (
             ()))
             end ;
            { ( temp___1228 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1228)) ) with Railsystems__railsystem.rec__all_trains = { Railsystems__list_trains__list_ptr.__split_fields = railsystems__list_trains__replace_by_id__a__fields.Railsystems__list_trains__list_ptr.__split_fields__content } } } )))
            in (
            #"railsystems.adb" 348 0 0# Railsystems__replacetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1229)) )))
            )))
          )) else (
         ())) );
        #"railsystems.adb" 345 0 0# Railsystems__replacetrain__L_6__i.i.int__content <- ( (Railsystems__replacetrain__L_6__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:345 *)
        ;
        (if ((Railsystems__replacetrain__L_6__i.i.int__content <= temp___1231)) then (
         ()) else (
         #"railsystems.adb" 345 0 0# raise Railsystems__replacetrain__L_6.L_6)) )
       done )
      with
       Railsystems__replacetrain__L_6.L_6 -> ()
      end)) )))
    ))
     ) )) else (
    ())) );
   #"railsystems.adb" 340 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:88 *)
  ;
  #"railsystems.adb" 340 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "replacetrack" defined at railsystems.ads:92, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__replacetrack__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Tracks__track
 use        Tracks__track__axiom
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element__axiom
 use        Stations__list_tracks__replace_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacetrack__r_system
 use        Railsystems__replacetrack__track
 use        Railsystems__replacetrack__L_5__R29b
 use        Railsystems__replacetrack__L_5
 use        Railsystems__replacetrack__L_5__T30b
 use        Railsystems__replacetrack__L_5__i
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__replacetrack__L_5__i__axiom
 use        Railsystems__replacetrack__L_5__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacetrack__r_system__axiom
 use        Railsystems__replacetrack__track__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element__axiom
 use        Stations__list_tracks__replace_by_id__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__replacetrack__L_5__R29b__axiom
 use        Railsystems__replacetrack__L_5__T30b__axiom

 let def #"railsystems.adb" 340 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:92" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:92 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"tracks.ads" 7 0 0# assume { (Tracks__track__axiom.dynamic_invariant Railsystems__replacetrack__track.track True False True) };
  #"list.ads" 22 0 0# assume { (Stations__list_tracks__data_type__axiom.dynamic_invariant Stations__list_tracks__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:92 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:92 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = ((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields(Railsystems__replacetrack__track.track)))))) > 0) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:92 *)
  ;
  #"railsystems.ads" 92 0 0# assume { ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields Railsystems__replacetrack__track.track))) > 0) };
  () (* checking of pragma precondition railsystems.ads:92 *)
  ;
  try
   ( ( "GP_Sloc:railsystems.adb:323:42" ( (let railsystems__replacetrack__L_5__R29b__assume = (Stations__list_tracks__get_size__axiom.get_size((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))) in (
    #"railsystems.adb" 323 0 0# assume { (railsystems__replacetrack__L_5__R29b__assume = Railsystems__replacetrack__L_5__R29b.r29b) }))
   ;
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__replacetrack__L_5__R29b.r29b True False True) } ) );
   ( "GP_Sloc:railsystems.adb:323:78" (let temp___1235 = 1 in (
   (let temp___1236 = Railsystems__replacetrack__L_5__R29b.r29b in (
    ( #"railsystems.adb" 323 0 0# Railsystems__replacetrack__L_5__i.i.int__content <- ( temp___1235 );
    () (* Translation of an Ada loop from railsystems.adb:323 *)
    ;
    (if ((Boolean.andb((temp___1235 <= Railsystems__replacetrack__L_5__i.i.int__content)) ((Railsystems__replacetrack__L_5__i.i.int__content <= temp___1236)))) then (
     try
      ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:323 *)
      ;
      () (* While loop translating the Ada loop from railsystems.adb:323 *)
      ;
      #"railsystems.adb" 323 0 0# while True do
       ( () (* Assume implicit invariants from the loop railsystems.adb:323 *)
       ;
       #"railsystems.adb" 323 0 0# assume { (Boolean.andb((Boolean.andb((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)) ((if ((1 <= Railsystems__replacetrack__L_5__R29b.r29b)) then (
        (Railsystems__replacetrack__L_5__T30b.dynamic_property 1 Railsystems__replacetrack__L_5__R29b.r29b Railsystems__replacetrack__L_5__i.i.int__content)) else true)))) (( (1 <= Railsystems__replacetrack__L_5__i.i.int__content) /\ (Railsystems__replacetrack__L_5__i.i.int__content <= Railsystems__replacetrack__L_5__R29b.r29b) ))) };
       () (* Check for absence of RTE in the invariant of loop railsystems.adb:323 *)
       ;
       () (* Loop statements appearing after the loop invariant of loop railsystems.adb:323 *)
       ;
       ( "GP_Sloc:railsystems.adb:324:13" (if ((Boolean.andb((Boolean.andb(((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__origin((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacetrack__L_5__i.i.int__content)))))))) = (Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields(Railsystems__replacetrack__track.track)))))))) (((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__destination((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacetrack__L_5__i.i.int__content)))))))) = (Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields(Railsystems__replacetrack__track.track)))))))))) (((Standard__natural.to_rep((Stations__list_tracks__data_type.rec__id((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__replacetrack__L_5__i.i.int__content)))))))) = (Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields(Railsystems__replacetrack__track.track)))))))))) then (
        ( "GP_Sloc:railsystems.adb:330:36" (let stations__list_tracks__replace_by_id__a__compl = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))) in (
         #"railsystems.ads" 29 0 0# let stations__list_tracks__replace_by_id__a__fields = { Stations__list_tracks__list_ptr.__split_fields__content = (Stations__list_tracks__list_ptr.__split_fields(stations__list_tracks__replace_by_id__a__compl)) } in 
          ( (Stations__list_tracks__replace_by_id__axiom.replace_by_id(stations__list_tracks__replace_by_id__a__fields) ((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields(Railsystems__replacetrack__track.track))))))) ((Stations__list_tracks__data_type.of_base(Railsystems__replacetrack__track.track))));
          (let temp___1234 = (let temp___1233 = { Railsystems__railsystem.__split_fields = Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } in (
           ( #"railsystems.ads" 29 0 0# abstract ensures {true}(let _ = (Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(temp___1233)))) in (
            ()))
            end ;
           { ( temp___1233 ) with Railsystems__railsystem.__split_fields = { ( (Railsystems__railsystem.__split_fields(temp___1233)) ) with Railsystems__railsystem.rec__all_tracks = { Stations__list_tracks__list_ptr.__split_fields = stations__list_tracks__replace_by_id__a__fields.Stations__list_tracks__list_ptr.__split_fields__content } } } )))
           in (
           #"railsystems.adb" 330 0 0# Railsystems__replacetrack__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content <- ( (Railsystems__railsystem.__split_fields(temp___1234)) )))
           )))
         )) else (
        ())) );
       #"railsystems.adb" 323 0 0# Railsystems__replacetrack__L_5__i.i.int__content <- ( (Railsystems__replacetrack__L_5__i.i.int__content + 1) );
       () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:323 *)
       ;
       (if ((Railsystems__replacetrack__L_5__i.i.int__content <= temp___1236)) then (
        ()) else (
        #"railsystems.adb" 323 0 0# raise Railsystems__replacetrack__L_5.L_5)) )
      done )
     with
      Railsystems__replacetrack__L_5.L_5 -> ()
     end)) )))
   ))
    );
   #"railsystems.adb" 319 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:92 *)
  ;
  #"railsystems.adb" 319 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:96, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__addincomingoutgoingtracksforeachstation__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Types__odrecord
 use        Types__odrecord__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__no_found
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Types__list_od__get_size__axiom
 use        Types__list_od__get_element__axiom
 use        Types__list_od__append__axiom
 use        Tracks__track
 use        Tracks__track__axiom
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__contains__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Stations__list_tracks__append__axiom
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__r_system
 use        Railsystems__addincomingoutgoingtracksforeachstation__tempstation
 use        Railsystems__addincomingoutgoingtracksforeachstation__temptrack
 use        Railsystems__addincomingoutgoingtracksforeachstation__od_record
 use        Railsystems__addincomingoutgoingtracksforeachstation__size
 use        Railsystems__addincomingoutgoingtracksforeachstation__found
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__T36b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__i
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__j
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__w
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__tempstation__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__temptrack__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__od_record__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__size__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__found__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__i__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__j__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__w__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__r_system__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Types__odrecord__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__get_size__axiom
 use        Types__list_od__get_element__axiom
 use        Types__list_od__append__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__no_found__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__contains__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Stations__list_tracks__append__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_8__T36b__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b__axiom
 use        Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b__axiom

 let def #"railsystems.adb" 319 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:96" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:96 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"list.ads" 22 0 0# assume { (Types__list_od__data_type__axiom.dynamic_invariant Types__list_od__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Stations__list_tracks__data_type__axiom.dynamic_invariant Stations__list_tracks__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:96 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:96 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:96 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition railsystems.ads:96 *)
  ;
  try
   ( #"list.ads" 25 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 381 0 0# abstract ensures {true}(let _ = (let temp___1238 = #"stations.ads" 18 0 0# (any Stations__station.station
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Stations__station.id__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.location__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.trainid__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.incoming__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1239 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1239))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1239))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1240 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1240))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1241 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1241))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1240))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1239))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1239))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.outgoing__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1242 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1242))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1242))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1243 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1243))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1244 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1244))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1243))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1242))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1242))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.trackslineoriginanddestination__pred(temp___1238))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1245 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1245))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1245))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1246 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1246))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1247 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1247))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1247))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1246))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1245))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1245))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 381 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } False) };
   #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } False False True) };
   #"stations.ads" 18 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 382 0 0# abstract ensures {true}(let _ = (let temp___1249 = #"tracks.ads" 7 0 0# (any Tracks__track.track
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Tracks__track.id__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.origin__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.destination__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trainid__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslineorigin__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslinedestination__pred(temp___1249))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 382 0 0# assume { (Tracks__track__axiom.default_initial_assumption { Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content } False) };
   #"tracks.ads" 7 0 0# assume { (Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content } False False True) };
   #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 383 0 0# abstract ensures {true}(let _ = (let temp___1251 = #"types.ads" 16 0 0# (any Types__odrecord.odrecord
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Types__odrecord.origin__pred(temp___1251))) then (
     #"types.ads" 16 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Types__odrecord.destination__pred(temp___1251))) then (
     #"types.ads" 16 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 383 0 0# assume { (Types__odrecord__axiom.default_initial_assumption { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } False) };
   #"types.ads" 16 0 0# assume { (Types__odrecord__axiom.dynamic_invariant { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } False False True) };
   #"types.ads" 16 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"railsystems.adb" 384 0 0# assume { (Standard__natural__axiom.default_initial_assumption Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content False) };
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content False False True) };
   ( "GP_Sloc:railsystems.adb:392:34" ( (let railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b__assume = (Railsystems__list_stations__get_size__axiom.get_size((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))) in (
    #"railsystems.adb" 392 0 0# assume { (railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b__assume = Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b) }))
   ;
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b True False True) } ) );
   ( "GP_Sloc:railsystems.adb:392:67" (let temp___1271 = 1 in (
   (let temp___1272 = Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b in (
    ( #"railsystems.adb" 392 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content <- ( temp___1271 );
    () (* Translation of an Ada loop from railsystems.adb:392 *)
    ;
    (if ((Boolean.andb((temp___1271 <= Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content)) ((Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content <= temp___1272)))) then (
     try
      ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:392 *)
      ;
      () (* While loop translating the Ada loop from railsystems.adb:392 *)
      ;
      #"railsystems.adb" 392 0 0# while True do
       ( () (* Assume implicit invariants from the loop railsystems.adb:392 *)
       ;
       #"railsystems.adb" 392 0 0# assume { (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b)) then (
        (Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)) else true)) ((Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content } False True True)))) ((Types__odrecord__axiom.dynamic_invariant { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } False True True)))) ((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b)) then (
        (Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content)) else true)))) ((Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content False True True)))) ((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)))) ((Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } False True True)))) ((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b)) then (
        (Railsystems__addincomingoutgoingtracksforeachstation__L_8__T36b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content)) else true)))) (( (1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content) /\ (Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content <= Railsystems__addincomingoutgoingtracksforeachstation__L_8__R35b.r35b) ))) };
       () (* Check for absence of RTE in the invariant of loop railsystems.adb:392 *)
       ;
       () (* Loop statements appearing after the loop invariant of loop railsystems.adb:392 *)
       ;
       ( "GP_Sloc:railsystems.adb:393:21" (let temp___1253 = (Railsystems__list_stations__data_type.to_base((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content)))) in (
        #"railsystems.adb" 393 0 0# Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1253)) )))
        );
       ( "GP_Sloc:railsystems.adb:395:43" ( (let railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b__assume = (Stations__list_tracks__get_size__axiom.get_size((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })))))) in (
        #"railsystems.adb" 395 0 0# assume { (railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b__assume = Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b) }))
       ;
       #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b True False True) } ) );
       ( "GP_Sloc:railsystems.adb:395:74" (let temp___1269 = 1 in (
       (let temp___1270 = Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b in (
        ( #"railsystems.adb" 395 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content <- ( temp___1269 );
        () (* Translation of an Ada loop from railsystems.adb:395 *)
        ;
        (if ((Boolean.andb((temp___1269 <= Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content)) ((Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content <= temp___1270)))) then (
         try
          ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:395 *)
          ;
          () (* While loop translating the Ada loop from railsystems.adb:395 *)
          ;
          #"railsystems.adb" 395 0 0# while True do
           ( () (* Assume implicit invariants from the loop railsystems.adb:395 *)
           ;
           #"railsystems.adb" 395 0 0# assume { (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b)) then (
            (Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)) else true)) ((Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content } False True True)))) ((Types__odrecord__axiom.dynamic_invariant { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } False True True)))) ((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b)) then (
            (Railsystems__addincomingoutgoingtracksforeachstation__L_9__T38b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content)) else true)))) ((Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content False True True)))) ((Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } False True True)))) (( (1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content) /\ (Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content <= Railsystems__addincomingoutgoingtracksforeachstation__L_9__R37b.r37b) ))) };
           () (* Check for absence of RTE in the invariant of loop railsystems.adb:395 *)
           ;
           () (* Loop statements appearing after the loop invariant of loop railsystems.adb:395 *)
           ;
           ( "GP_Sloc:railsystems.adb:396:22" (let temp___1254 = (Stations__list_tracks__data_type.to_base((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content)))) in (
            #"railsystems.adb" 396 0 0# Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1254)) )))
            );
           ( "GP_Sloc:railsystems.adb:397:13" (if (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = (Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))))) then (
            ( "GP_Sloc:railsystems.adb:398:16" (if (((Boolean.to_int((Stations__list_tracks__contains__axiom.contains((Stations__station.rec__outgoing((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) ((Stations__list_tracks__data_type.of_base({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = (Boolean.to_int((Boolean.of_int(0)))))) then (
             ( ( "GP_Sloc:railsystems.adb:399:19" (if ((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)) (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Standard__natural.to_rep((Tracks__track.rec__trainid((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> (Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))))))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> (Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))))))) then (
              ( "GP_Sloc:railsystems.adb:402:22" (if ((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) < 101)))) then (
               ( "GP_Sloc:railsystems.adb:403:45" (let stations__list_tracks__append__a__compl = (Stations__station.rec__outgoing((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))) in (
                #"stations.ads" 18 0 0# let stations__list_tracks__append__a__fields = { Stations__list_tracks__list_ptr.__split_fields__content = (Stations__list_tracks__list_ptr.__split_fields(stations__list_tracks__append__a__compl)) } in 
                 ( ( #"railsystems.adb" 403 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Shape:L_8_while__L_9_while__if__if__if__if__call_append" "GP_Sloc:railsystems.adb:403:45" "GP_Id:32" "comment:                        Stations.LIST_TRACKS.APPEND(tempStation.Outgoing, tempTrack, tempTrack.ID);
                                            ^ railsystems.adb:403:45:VC_PRECONDITION" (Stations__list_tracks__append__axiom.append(stations__list_tracks__append__a__fields) ((Stations__list_tracks__data_type.of_base({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content }))) ((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))))) );
                 (let temp___1258 = (let temp___1257 = { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } in (
                  ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__outgoing((Stations__station.__split_fields(temp___1257)))) in (
                   ()))
                   end ;
                  { ( temp___1257 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1257)) ) with Stations__station.rec__outgoing = { Stations__list_tracks__list_ptr.__split_fields = stations__list_tracks__append__a__fields.Stations__list_tracks__list_ptr.__split_fields__content } } } )))
                  in (
                  #"railsystems.adb" 403 0 0# Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1258)) )))
                  )))
                )) else (
               ())) )) else (
              ())) );
             ( "GP_Sloc:railsystems.adb:408:35" (let temp___1260 = (let temp___1259 = { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } in (
              ( #"types.ads" 16 0 0# abstract ensures {true}(let _ = (Types__odrecord.rec__origin((Types__odrecord.__split_fields(temp___1259)))) in (
               ()))
               end ;
              { ( temp___1259 ) with Types__odrecord.__split_fields = { ( (Types__odrecord.__split_fields(temp___1259)) ) with Types__odrecord.rec__origin = (Types__station_locations.of_rep (Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content }))))))) } } )))
              in (
              #"railsystems.adb" 408 0 0# Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content <- ( (Types__odrecord.__split_fields(temp___1260)) )))
              );
             ( "GP_Sloc:railsystems.adb:409:40" (let temp___1262 = (let temp___1261 = { Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content } in (
              ( #"types.ads" 16 0 0# abstract ensures {true}(let _ = (Types__odrecord.rec__destination((Types__odrecord.__split_fields(temp___1261)))) in (
               ()))
               end ;
              { ( temp___1261 ) with Types__odrecord.__split_fields = { ( (Types__odrecord.__split_fields(temp___1261)) ) with Types__odrecord.rec__destination = (Types__station_locations.of_rep (Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content }))))))) } } )))
              in (
              #"railsystems.adb" 409 0 0# Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content <- ( (Types__odrecord.__split_fields(temp___1262)) )))
              );
             ( "GP_Sloc:railsystems.adb:410:23" #"railsystems.adb" 410 0 0# Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content <- ( (Types__list_od__get_size__axiom.get_size((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))) ) );
             ( "GP_Sloc:railsystems.adb:411:19" (if ((Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content < 1)) then (
              ( "GP_Sloc:railsystems.adb:412:35" (let types__list_od__append__a__compl = (Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))) in (
               #"stations.ads" 18 0 0# let types__list_od__append__a__fields = { Types__list_od__list_ptr.__split_fields__content = (Types__list_od__list_ptr.__split_fields(types__list_od__append__a__compl)) } in 
                ( ( #"railsystems.adb" 412 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:412:35" "GP_Id:34" "comment:                     TYPES.LIST_OD.APPEND(tempStation.TracksLineOriginAndDestination, od_record,1);
                                  ^ railsystems.adb:412:35:VC_PRECONDITION" "GP_Shape:L_8_while__L_9_while__if__if__if__call_append" (Types__list_od__append__axiom.append(types__list_od__append__a__fields) ((Types__list_od__data_type.of_base({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content }))) (1)) );
                (let temp___1268 = (let temp___1267 = { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } in (
                 ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields(temp___1267)))) in (
                  ()))
                  end ;
                 { ( temp___1267 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1267)) ) with Stations__station.rec__trackslineoriginanddestination = { Types__list_od__list_ptr.__split_fields = types__list_od__append__a__fields.Types__list_od__list_ptr.__split_fields__content } } } )))
                 in (
                 #"railsystems.adb" 412 0 0# Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1268)) )))
                 )))
               )) else (
              ( "GP_Sloc:railsystems.adb:413:19" (if ((Boolean.of_int(1))) then (
               ( ( "GP_Sloc:railsystems.adb:414:27" #"railsystems.adb" 414 0 0# Railsystems__addincomingoutgoingtracksforeachstation__found.found.bool__content <- ( (Boolean.of_int(0)) ) );
               ( "GP_Sloc:railsystems.adb:415:36" ( (let railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b__assume = Railsystems__addincomingoutgoingtracksforeachstation__size.size.int__content in (
                #"railsystems.adb" 415 0 0# assume { (railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b__assume = Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b) }))
               ;
               #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b True False True) } ) );
               ( "GP_Sloc:railsystems.adb:415:41" (let temp___1263 = 1 in (
               (let temp___1264 = Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b in (
                ( #"railsystems.adb" 415 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content <- ( temp___1263 );
                () (* Translation of an Ada loop from railsystems.adb:415 *)
                ;
                (if ((Boolean.andb((temp___1263 <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)) ((Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content <= temp___1264)))) then (
                 try
                  ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:415 *)
                  ;
                  () (* While loop translating the Ada loop from railsystems.adb:415 *)
                  ;
                  #"railsystems.adb" 415 0 0# while True do
                   ( () (* Assume implicit invariants from the loop railsystems.adb:415 *)
                   ;
                   #"railsystems.adb" 415 0 0# assume { (Boolean.andb((if ((1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b)) then (
                    (Railsystems__addincomingoutgoingtracksforeachstation__L_10__T40b.dynamic_property 1 Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)) else true)) (( (1 <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content) /\ (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content <= Railsystems__addincomingoutgoingtracksforeachstation__L_10__R39b.r39b) ))) };
                   () (* Check for absence of RTE in the invariant of loop railsystems.adb:415 *)
                   ;
                   () (* Loop statements appearing after the loop invariant of loop railsystems.adb:415 *)
                   ;
                   ( "GP_Sloc:railsystems.adb:416:25" (if ((Boolean.orb((Boolean.andb(((Types__station_locations.to_rep((Types__list_od__data_type.rec__origin((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)))))))) = (Types__station_locations.to_rep((Types__odrecord.rec__origin((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))))) (((Types__station_locations.to_rep((Types__list_od__data_type.rec__destination((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)))))))) = (Types__station_locations.to_rep((Types__odrecord.rec__destination((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))))))) ((Boolean.andb(((Types__station_locations.to_rep((Types__list_od__data_type.rec__origin((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)))))))) = (Types__station_locations.to_rep((Types__odrecord.rec__destination((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))))) (((Types__station_locations.to_rep((Types__list_od__data_type.rec__destination((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content)))))))) = (Types__station_locations.to_rep((Types__odrecord.rec__origin((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))))))))) then (
                    ( "GP_Sloc:railsystems.adb:420:33" #"railsystems.adb" 420 0 0# Railsystems__addincomingoutgoingtracksforeachstation__found.found.bool__content <- ( (Boolean.of_int(1)) ) )) else (
                    ())) );
                   #"railsystems.adb" 415 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content <- ( (Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content + 1) );
                   () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:415 *)
                   ;
                   (if ((Railsystems__addincomingoutgoingtracksforeachstation__L_10__w.w.int__content <= temp___1264)) then (
                    ()) else (
                    #"railsystems.adb" 415 0 0# raise Railsystems__addincomingoutgoingtracksforeachstation__L_10.L_10)) )
                  done )
                 with
                  Railsystems__addincomingoutgoingtracksforeachstation__L_10.L_10 -> ()
                 end)) )))
               ))
                );
               ( "GP_Sloc:railsystems.adb:423:22" (if (((Boolean.to_int(Railsystems__addincomingoutgoingtracksforeachstation__found.found.bool__content)) = (Boolean.to_int((Boolean.of_int(0)))))) then (
                ( "GP_Sloc:railsystems.adb:424:25" (if (((Types__station_locations.to_rep((Types__odrecord.rec__origin((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))) <> (Types__station_locations.to_rep((Types__odrecord.rec__destination((Types__odrecord.__split_fields({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content })))))))) then (
                 ( "GP_Sloc:railsystems.adb:425:41" (let types__list_od__append__a__compl = (Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))) in (
                  #"stations.ads" 18 0 0# let types__list_od__append__a__fields = { Types__list_od__list_ptr.__split_fields__content = (Types__list_od__list_ptr.__split_fields(types__list_od__append__a__compl)) } in 
                   ( ( #"railsystems.adb" 425 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:425:41" "GP_Id:33" "comment:                           TYPES.LIST_OD.APPEND(tempStation.TracksLineOriginAndDestination, od_record,1);
                                        ^ railsystems.adb:425:41:VC_PRECONDITION" "GP_Shape:L_8_while__L_9_while__if__if__if__if__if__call_append" (Types__list_od__append__axiom.append(types__list_od__append__a__fields) ((Types__list_od__data_type.of_base({ Types__odrecord.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__od_record.od_record__split_fields.Types__odrecord.__split_fields__content }))) (1)) );
                   (let temp___1266 = (let temp___1265 = { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } in (
                    ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields(temp___1265)))) in (
                     ()))
                     end ;
                    { ( temp___1265 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1265)) ) with Stations__station.rec__trackslineoriginanddestination = { Types__list_od__list_ptr.__split_fields = types__list_od__append__a__fields.Types__list_od__list_ptr.__split_fields__content } } } )))
                    in (
                    #"railsystems.adb" 425 0 0# Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1266)) )))
                    )))
                  )) else (
                 ())) )) else (
                ())) ) )) else (
               ())) ))) ) )) else (
             ())) )) else (
            ( "GP_Sloc:railsystems.adb:431:13" (if (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = (Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))))) then (
             ( "GP_Sloc:railsystems.adb:432:16" (if (((Boolean.to_int((Stations__list_tracks__contains__axiom.contains((Stations__station.rec__incoming((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content }))))) ((Stations__list_tracks__data_type.of_base({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = (Boolean.to_int((Boolean.of_int(0)))))) then (
              ( "GP_Sloc:railsystems.adb:433:19" (if ((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)) (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Standard__natural.to_rep((Tracks__track.rec__trainid((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) = 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__trackslineorigin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) <> (Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))))))) then (
               ( "GP_Sloc:railsystems.adb:435:22" (if ((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))) < 101)))) then (
                ( "GP_Sloc:railsystems.adb:436:45" (let stations__list_tracks__append__a__compl = (Stations__station.rec__incoming((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))) in (
                 #"stations.ads" 18 0 0# let stations__list_tracks__append__a__fields = { Stations__list_tracks__list_ptr.__split_fields__content = (Stations__list_tracks__list_ptr.__split_fields(stations__list_tracks__append__a__compl)) } in 
                  ( ( #"railsystems.adb" 436 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:436:45" "GP_Id:31" "comment:                        Stations.LIST_TRACKS.APPEND(tempStation.Incoming, tempTrack, tempTrack.ID);
                                            ^ railsystems.adb:436:45:VC_PRECONDITION" "GP_Shape:L_8_while__L_9_while__if__if__if__if__call_append" (Stations__list_tracks__append__axiom.append(stations__list_tracks__append__a__fields) ((Stations__list_tracks__data_type.of_base({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content }))) ((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__temptrack.temptrack__split_fields.Tracks__track.__split_fields__content })))))))) );
                  (let temp___1256 = (let temp___1255 = { Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content } in (
                   ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__incoming((Stations__station.__split_fields(temp___1255)))) in (
                    ()))
                    end ;
                   { ( temp___1255 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1255)) ) with Stations__station.rec__incoming = { Stations__list_tracks__list_ptr.__split_fields = stations__list_tracks__append__a__fields.Stations__list_tracks__list_ptr.__split_fields__content } } } )))
                   in (
                   #"railsystems.adb" 436 0 0# Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1256)) )))
                   )))
                 )) else (
                ())) )) else (
               ())) )) else (
              ())) )) else (
             ())) ))) );
           #"railsystems.adb" 395 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content <- ( (Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content + 1) );
           () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:395 *)
           ;
           (if ((Railsystems__addincomingoutgoingtracksforeachstation__L_9__j.j.int__content <= temp___1270)) then (
            ()) else (
            #"railsystems.adb" 395 0 0# raise Railsystems__addincomingoutgoingtracksforeachstation__L_9.L_9)) )
          done )
         with
          Railsystems__addincomingoutgoingtracksforeachstation__L_9.L_9 -> ()
         end)) )))
       ))
        );
       ( "GP_Sloc:railsystems.adb:444:10" (if ((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))) < 101)))) (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })))))) <> 0)))) then (
        ( "GP_Sloc:railsystems.adb:445:13" ( #"railsystems.adb" 445 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:445:13" "GP_Id:35" "comment:            replaceStation(r_system,tempStation);
            ^ railsystems.adb:445:13:VC_PRECONDITION" "GP_Shape:L_8_while__if__call_replacestation" (Railsystems__replacestation__axiom.replacestation(Railsystems__addincomingoutgoingtracksforeachstation__r_system.r_system__split_fields) ({ Stations__station.__split_fields = Railsystems__addincomingoutgoingtracksforeachstation__tempstation.tempstation__split_fields.Stations__station.__split_fields__content })) ) )) else (
        ())) );
       #"railsystems.adb" 392 0 0# Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content <- ( (Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content + 1) );
       () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:392 *)
       ;
       (if ((Railsystems__addincomingoutgoingtracksforeachstation__L_8__i.i.int__content <= temp___1272)) then (
        ()) else (
        #"railsystems.adb" 392 0 0# raise Railsystems__addincomingoutgoingtracksforeachstation__L_8.L_8)) )
      done )
     with
      Railsystems__addincomingoutgoingtracksforeachstation__L_8.L_8 -> ()
     end)) )))
   ))
    );
   #"railsystems.adb" 379 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:96 *)
  ;
  #"railsystems.adb" 379 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "gettrackbyname" defined at railsystems.ads:163, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__gettrackbyname__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Tracks__track
 use        Tracks__track__axiom
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname__r_system
 use        Railsystems__gettrackbyname__origin
 use        Railsystems__gettrackbyname__destination
 use        Railsystems__gettrackbyname__temp
 use        Railsystems__gettrackbyname__L_4__R24b
 use        Railsystems__gettrackbyname__L_4
 use        Railsystems__gettrackbyname__L_4__T25b
 use        Railsystems__gettrackbyname__L_4__i
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__gettrackbyname__temp__axiom
 use        Railsystems__gettrackbyname__L_4__i__axiom
 use        Railsystems__gettrackbyname__L_4__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname__r_system__axiom
 use        Railsystems__gettrackbyname__origin__axiom
 use        Railsystems__gettrackbyname__destination__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element_by_id__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__gettrackbyname__L_4__R24b__axiom
 use        Railsystems__gettrackbyname__L_4__T25b__axiom

 val railsystems__gettrackbyname__result #"railsystems.adb" 379 0 0# "model_projected" "model_trace:6228@result"  : Tracks__track.track__ref 
 
 let def #"tracks.ads" 7 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:163" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:163 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant Railsystems__gettrackbyname__r_system.r_system True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__gettrackbyname__origin.origin True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__gettrackbyname__destination.destination True False True) };
  #"list.ads" 22 0 0# assume { (Stations__list_tracks__data_type__axiom.dynamic_invariant Stations__list_tracks__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:163 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:163 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Railsystems__gettrackbyname__origin.origin <> 0)) ((Railsystems__gettrackbyname__destination.destination <> 0))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:163 *)
  ;
  #"railsystems.ads" 163 0 0# assume { ( (Railsystems__gettrackbyname__origin.origin <> 0) /\ (Railsystems__gettrackbyname__destination.destination <> 0) ) };
  () (* checking of pragma precondition railsystems.ads:163 *)
  ;
  try
   ( #"railsystems.ads" 163 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 210 0 0# abstract ensures {true}(let _ = (let temp___1276 = #"tracks.ads" 7 0 0# (any Tracks__track.track
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Tracks__track.id__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.origin__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.destination__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trainid__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslineorigin__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslinedestination__pred(temp___1276))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 210 0 0# assume { (Tracks__track__axiom.default_initial_assumption { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } False) };
   #"tracks.ads" 7 0 0# assume { (Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:213:14" (let temp___1279 = (let temp___1278 = { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__id((Tracks__track.__split_fields(temp___1278)))) in (
     ()))
     end ;
    { ( temp___1278 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1278)) ) with Tracks__track.rec__id = (Standard__natural.of_rep 0) } } )))
    in (
    #"railsystems.adb" 213 0 0# Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1279)) )))
    );
   ( "GP_Sloc:railsystems.adb:214:18" (let temp___1281 = (let temp___1280 = { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__origin((Tracks__track.__split_fields(temp___1280)))) in (
     ()))
     end ;
    { ( temp___1280 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1280)) ) with Tracks__track.rec__origin = (Types__station_locations.of_rep 0) } } )))
    in (
    #"railsystems.adb" 214 0 0# Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1281)) )))
    );
   ( "GP_Sloc:railsystems.adb:215:23" (let temp___1283 = (let temp___1282 = { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__destination((Tracks__track.__split_fields(temp___1282)))) in (
     ()))
     end ;
    { ( temp___1282 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1282)) ) with Tracks__track.rec__destination = (Types__station_locations.of_rep 0) } } )))
    in (
    #"railsystems.adb" 215 0 0# Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1283)) )))
    );
   ( "GP_Sloc:railsystems.adb:216:19" (let temp___1285 = (let temp___1284 = { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } in (
    ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1284)))) in (
     ()))
     end ;
    { ( temp___1284 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1284)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep 0) } } )))
    in (
    #"railsystems.adb" 216 0 0# Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1285)) )))
    );
   ( "GP_Sloc:railsystems.adb:217:41" ( (let railsystems__gettrackbyname__L_4__R24b__assume = (Stations__list_tracks__get_size__axiom.get_size((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(Railsystems__gettrackbyname__r_system.r_system)))))) in (
    #"railsystems.adb" 217 0 0# assume { (railsystems__gettrackbyname__L_4__R24b__assume = Railsystems__gettrackbyname__L_4__R24b.r24b) }))
   ;
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__gettrackbyname__L_4__R24b.r24b True False True) } ) );
   ( "GP_Sloc:railsystems.adb:217:72" (let temp___1286 = 1 in (
   (let temp___1287 = Railsystems__gettrackbyname__L_4__R24b.r24b in (
    ( #"railsystems.adb" 217 0 0# Railsystems__gettrackbyname__L_4__i.i.int__content <- ( temp___1286 );
    () (* Translation of an Ada loop from railsystems.adb:217 *)
    ;
    (if ((Boolean.andb((temp___1286 <= Railsystems__gettrackbyname__L_4__i.i.int__content)) ((Railsystems__gettrackbyname__L_4__i.i.int__content <= temp___1287)))) then (
     try
      ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:217 *)
      ;
      () (* While loop translating the Ada loop from railsystems.adb:217 *)
      ;
      #"railsystems.adb" 217 0 0# while True do
       ( () (* Assume implicit invariants from the loop railsystems.adb:217 *)
       ;
       #"railsystems.adb" 217 0 0# assume { (Boolean.andb((if ((1 <= Railsystems__gettrackbyname__L_4__R24b.r24b)) then (
        (Railsystems__gettrackbyname__L_4__T25b.dynamic_property 1 Railsystems__gettrackbyname__L_4__R24b.r24b Railsystems__gettrackbyname__L_4__i.i.int__content)) else true)) (( (1 <= Railsystems__gettrackbyname__L_4__i.i.int__content) /\ (Railsystems__gettrackbyname__L_4__i.i.int__content <= Railsystems__gettrackbyname__L_4__R24b.r24b) ))) };
       () (* Check for absence of RTE in the invariant of loop railsystems.adb:217 *)
       ;
       () (* Loop statements appearing after the loop invariant of loop railsystems.adb:217 *)
       ;
       ( "GP_Sloc:railsystems.adb:218:10" (if ((Boolean.andb(((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__origin((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(Railsystems__gettrackbyname__r_system.r_system))))) (Railsystems__gettrackbyname__L_4__i.i.int__content)))))))) = Railsystems__gettrackbyname__origin.origin)) (((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__destination((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(Railsystems__gettrackbyname__r_system.r_system))))) (Railsystems__gettrackbyname__L_4__i.i.int__content)))))))) = Railsystems__gettrackbyname__destination.destination)))) then (
        ( "GP_Sloc:railsystems.adb:220:13" ( #"railsystems.adb" 220 0 0# railsystems__gettrackbyname__result.Tracks__track.track__content <- ( (Stations__list_tracks__data_type.to_base((Stations__list_tracks__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_tracks((Railsystems__railsystem.__split_fields(Railsystems__gettrackbyname__r_system.r_system))))) (Railsystems__gettrackbyname__L_4__i.i.int__content)))) );
        #"railsystems.adb" 220 0 0# raise Return__exc ) )) else (
        ())) );
       #"railsystems.adb" 217 0 0# Railsystems__gettrackbyname__L_4__i.i.int__content <- ( (Railsystems__gettrackbyname__L_4__i.i.int__content + 1) );
       () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:217 *)
       ;
       (if ((Railsystems__gettrackbyname__L_4__i.i.int__content <= temp___1287)) then (
        ()) else (
        #"railsystems.adb" 217 0 0# raise Railsystems__gettrackbyname__L_4.L_4)) )
      done )
     with
      Railsystems__gettrackbyname__L_4.L_4 -> ()
     end)) )))
   ))
    );
   ( "GP_Sloc:railsystems.adb:223:7" ( #"railsystems.adb" 223 0 0# railsystems__gettrackbyname__result.Tracks__track.track__content <- ( { Tracks__track.__split_fields = Railsystems__gettrackbyname__temp.temp__split_fields.Tracks__track.__split_fields__content } );
   #"railsystems.adb" 223 0 0# raise Return__exc ) );
   #"railsystems.adb" 205 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:163 *)
  ;
  #"railsystems.adb" 205 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__gettrackbyname__result.Tracks__track.track__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "getstationbyname" defined at railsystems.ads:154, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__getstationbyname__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural__axiom
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname__r_system
 use        Railsystems__getstationbyname__stationlocation
 use        Railsystems__getstationbyname__temp
 use        Railsystems__getstationbyname__L_3__R20b
 use        Railsystems__getstationbyname__L_3
 use        Railsystems__getstationbyname__L_3__T21b
 use        Railsystems__getstationbyname__L_3__i
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__integer__axiom
 use        Railsystems__getstationbyname__temp__axiom
 use        Railsystems__getstationbyname__L_3__i__axiom
 use        Railsystems__getstationbyname__L_3__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname__r_system__axiom
 use        Railsystems__getstationbyname__stationlocation__axiom
 use        Trains__train_location__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_size__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__getstationbyname__L_3__R20b__axiom
 use        Railsystems__getstationbyname__L_3__T21b__axiom

 val railsystems__getstationbyname__result #"tracks.ads" 7 0 0# "model_projected" "model_trace:6196@result"  : Stations__station.station__ref 
 
 let def #"stations.ads" 18 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:154" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:154 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant Railsystems__getstationbyname__r_system.r_system True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__getstationbyname__stationlocation.stationlocation True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:154 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:154 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:154 *)
  ;
  #"list.ads" 25 0 0# assume { true };
  () (* checking of pragma precondition railsystems.ads:154 *)
  ;
  try
   ( #"list.ads" 25 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 187 0 0# abstract ensures {true}(let _ = (let temp___1289 = #"stations.ads" 18 0 0# (any Stations__station.station
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Stations__station.id__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.location__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.trainid__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.incoming__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1290 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1290))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1290))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1291 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1291))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1292 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1292))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1291))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1290))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1290))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.outgoing__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1293 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1293))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1293))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1294 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1294))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1295 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1295))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1294))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1293))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1293))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.trackslineoriginanddestination__pred(temp___1289))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1296 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1296))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1296))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1297 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1297))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1298 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1298))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1298))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1297))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1296))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1296))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 187 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__getstationbyname__temp.temp__split_fields.Stations__station.__split_fields__content } False) };
   #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__getstationbyname__temp.temp__split_fields.Stations__station.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:190:7" () );
   ( "GP_Sloc:railsystems.adb:191:7" (if ((Railsystems__getstationbyname__stationlocation.stationlocation <> 0)) then (
    ( ( "GP_Sloc:railsystems.adb:192:49" ( (let railsystems__getstationbyname__L_3__R20b__assume = (Railsystems__list_stations__get_size__axiom.get_size((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(Railsystems__getstationbyname__r_system.r_system)))))) in (
     #"railsystems.adb" 192 0 0# assume { (railsystems__getstationbyname__L_3__R20b__assume = Railsystems__getstationbyname__L_3__R20b.r20b) }))
    ;
    #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__getstationbyname__L_3__R20b.r20b True False True) } ) );
    ( "GP_Sloc:railsystems.adb:192:82" (let temp___1300 = 1 in (
    (let temp___1301 = Railsystems__getstationbyname__L_3__R20b.r20b in (
     ( #"railsystems.adb" 192 0 0# Railsystems__getstationbyname__L_3__i.i.int__content <- ( temp___1300 );
     () (* Translation of an Ada loop from railsystems.adb:192 *)
     ;
     (if ((Boolean.andb((temp___1300 <= Railsystems__getstationbyname__L_3__i.i.int__content)) ((Railsystems__getstationbyname__L_3__i.i.int__content <= temp___1301)))) then (
      try
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:192 *)
       ;
       () (* While loop translating the Ada loop from railsystems.adb:192 *)
       ;
       #"railsystems.adb" 192 0 0# while True do
        ( () (* Assume implicit invariants from the loop railsystems.adb:192 *)
        ;
        #"railsystems.adb" 192 0 0# assume { (Boolean.andb((if ((1 <= Railsystems__getstationbyname__L_3__R20b.r20b)) then (
         (Railsystems__getstationbyname__L_3__T21b.dynamic_property 1 Railsystems__getstationbyname__L_3__R20b.r20b Railsystems__getstationbyname__L_3__i.i.int__content)) else true)) (( (1 <= Railsystems__getstationbyname__L_3__i.i.int__content) /\ (Railsystems__getstationbyname__L_3__i.i.int__content <= Railsystems__getstationbyname__L_3__R20b.r20b) ))) };
        () (* Check for absence of RTE in the invariant of loop railsystems.adb:192 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop railsystems.adb:192 *)
        ;
        ( "GP_Sloc:railsystems.adb:193:13" (if (((Types__station_locations.to_rep((Railsystems__list_stations__data_type.rec__location((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(Railsystems__getstationbyname__r_system.r_system))))) (Railsystems__getstationbyname__L_3__i.i.int__content)))))))) = Railsystems__getstationbyname__stationlocation.stationlocation)) then (
         ( "GP_Sloc:railsystems.adb:194:16" ( #"railsystems.adb" 194 0 0# railsystems__getstationbyname__result.Stations__station.station__content <- ( (Railsystems__list_stations__data_type.to_base((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields(Railsystems__getstationbyname__r_system.r_system))))) (Railsystems__getstationbyname__L_3__i.i.int__content)))) );
         #"railsystems.adb" 194 0 0# raise Return__exc ) )) else (
         ())) );
        #"railsystems.adb" 192 0 0# Railsystems__getstationbyname__L_3__i.i.int__content <- ( (Railsystems__getstationbyname__L_3__i.i.int__content + 1) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:192 *)
        ;
        (if ((Railsystems__getstationbyname__L_3__i.i.int__content <= temp___1301)) then (
         ()) else (
         #"railsystems.adb" 192 0 0# raise Railsystems__getstationbyname__L_3.L_3)) )
       done )
      with
       Railsystems__getstationbyname__L_3.L_3 -> ()
      end)) )))
    ))
     ) )) else (
    ())) );
   ( "GP_Sloc:railsystems.adb:198:7" ( #"railsystems.adb" 198 0 0# railsystems__getstationbyname__result.Stations__station.station__content <- ( { Stations__station.__split_fields = Railsystems__getstationbyname__temp.temp__split_fields.Stations__station.__split_fields__content } );
   #"railsystems.adb" 198 0 0# raise Return__exc ) );
   #"railsystems.adb" 183 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:154 *)
  ;
  #"railsystems.adb" 183 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__getstationbyname__result.Stations__station.station__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "go" defined at railsystems.ads:104, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__go__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__string
 use        Standard__integer
 use        Standard__natural
 use        Standard__natural__axiom
 use        Standard__positive
 use        Standard__positive__axiom
 use        Array__Int__Standard__character
 use        Types__train_state
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Sprint__print__axiom
 use        Sprint__print_natural__axiom
 use        Sprint__print_train_state__axiom
 use        Sprint__print_station_locations__axiom
 use        Tracks__track
 use        Tracks__track__axiom
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element
 use        Stations__list_tracks__get_element__axiom
 use        Stations__station
 use        Stations__station__axiom
 use        Trains__train_location__T1s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__replacetrain__axiom
 use        Railsystems__replacetrack__axiom
 use        Railsystems__go__r_system
 use        Railsystems__go__train
 use        Railsystems__go__count
 use        Railsystems__gettrackbyname
 use        Railsystems__gettrackbyname__axiom
 use        Railsystems__getstationbyname
 use        Railsystems__getstationbyname__axiom
 use        Railsystems__go__track
 use        Railsystems__go__station
 use        Railsystems__go__tempstationlocation
 use        Railsystems__go__size
 use        Railsystems__go__station_count
 use        Railsystems__go__L_1
 use        Railsystems__go__L_2__R2b
 use        Railsystems__go__L_2
 use        Railsystems__go__L_2__T3b
 use        Railsystems__go__L_2__i
 use        Temp___1025
 use        Array__Int__Standard__character
 use        Temp___1320
 use        Array__Int__Standard__character
 use        Temp___1343
 use        Temp___1344
 use        Temp___1345
 use        Temp___1346
 use        Temp___1347
 use        Array__Int__Standard__character
 use        Temp___1348
 use        Array__Int__Standard__character
 use        Temp___1355
 use        Array__Int__Standard__character
 use        Temp___1381
 use        Temp___1382
 use        Array__Int__Standard__character
 use        Temp___1383
 use        Temp___1385
 use        Temp___1386
 use        Temp___1387
 use        Temp___1388
 use        Array__Int__Standard__character
 use        Temp___1391
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Standard__string__axiom
 use        Standard__integer__axiom
 use        Railsystems__go__track__axiom
 use        Railsystems__go__station__axiom
 use        Railsystems__go__tempstationlocation__axiom
 use        Railsystems__go__size__axiom
 use        Railsystems__go__station_count__axiom
 use        Railsystems__go__L_2__i__axiom
 use        Railsystems__go__L_2__axiom
 use        Railsystems__go__L_1__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__replacetrain__axiom
 use        Railsystems__replacetrack__axiom
 use        Railsystems__go__r_system__axiom
 use        Railsystems__go__train__axiom
 use        Railsystems__go__count__axiom
 use        Railsystems__getstationbyname__axiom
 use        Railsystems__gettrackbyname__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Sprint__print__axiom
 use        Sprint__print_natural__axiom
 use        Sprint__print_train_state__axiom
 use        Sprint__print_station_locations__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__get_size__axiom
 use        Stations__list_tracks__get_element__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__no_found__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__get_element_by_id__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom
 use        Railsystems__go__L_2__R2b__axiom
 use        Railsystems__go__L_2__T3b__axiom

 let def #"stations.ads" 18 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:104" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:104 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } True False True) };
  #"system.ads" 1 0 0# assume { (Standard__positive__axiom.dynamic_invariant Railsystems__go__count.count True False True) };
  #"list.ads" 22 0 0# assume { (Stations__list_tracks__data_type__axiom.dynamic_invariant Stations__list_tracks__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:104 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:104 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) <> 0)) (((Types__station_locations.to_rep((Trains__train.rec__origin((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) <> 0)))) (((Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) <> 0)))) (((Types__train_state.to_rep((Trains__train.rec__state((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) = 2)))) ((if ((Boolean.andb((let temp___1396 = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) in (
   (Array__Int__Standard__character.bool_eq(temp___1396) (Trains__train_location__T1s.first) (Trains__train_location__T1s.last) (Temp___1025.temp___1025) (1) (7))))
  ) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)))) then (
   ( (let index = #"trains.ads" 17 0 0# (any int
   ) in (
    (if ((Boolean.andb((1 <= index)) ((index <= (Stations__list_tracks__get_size__axiom.get_size((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))))))))))))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (if ((Boolean.andb((Boolean.andb(((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__trackslinedestination((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (index)))))))) = (Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) (((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__origin((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (index)))))))) <> 0)))) (((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__destination((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (index)))))))) <> 0)))) then (
      ((Standard__natural.to_rep((Tracks__track.rec__trainid((Tracks__track.__split_fields(( #"railsystems.ads" 119 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.ads:119:38" "GP_Id:48" "comment:                          RailSystems.getTrackByName(r_system,
                                     ^ railsystems.ads:119:38:VC_PRECONDITION" "GP_Shape:pragargs__and__and__if__forall__if__cmp__selectcomp__call_gettrackbyname" (Railsystems__gettrackbyname__axiom.gettrackbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__origin((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (index))))))))) ((Types__station_locations.to_rep((Stations__list_tracks__data_type.rec__destination((Stations__list_tracks__data_type.__split_fields((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (index)))))))))) ))))))) = 0)) else (
      (Boolean.of_int(1)))) in (
      ()))
      end ))))
   ;
   #"railsystems.ads" 113 0 0# (any bool
   requires {true} 
   ensures {( (result = True) <-> (forall index : int.
    ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))) ) -> (if (( ( ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) = (Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) ) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) )) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields (Railsystems__gettrackbyname.gettrackbyname { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))))))) = 0)) else (
     true)) )) )} 
   ) )) else (
   (Boolean.of_int(1))))))) ((if ((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.of_int(0))) (((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)))) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)))) (((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)))) (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))))))))) <> 0)))) then (
   ((Standard__natural.to_rep((Stations__station.rec__trainid((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))))))))) = 0)) else (
   (Boolean.of_int(1)))))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:104 *)
  ;
  #"railsystems.ads" 126 0 0# assume { ( ( ( ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))) <> 0) /\ ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ (if (( ((let temp___1397 = (Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
   (Array__Int__Standard__character.bool_eq temp___1397 Trains__train_location__T1s.first Trains__train_location__T1s.last Temp___1025.temp___1025 1 7)))
   = True) /\ ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) )) then (
   (forall index : int.
    ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))) ) -> (if (( ( ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) = (Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) ) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) <> 0) )) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields (Railsystems__gettrackbyname.gettrackbyname { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))) (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content })) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))) index)))))))) = 0)) else (
     true)) ))) else (
   true)) ) /\ (if (( ( ( ( false /\ ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) ) /\ ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))) <> 0) )) then (
   ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))) = 0)) else (
   true)) ) };
  () (* checking of pragma precondition railsystems.ads:104 *)
  ;
  try
   ( #"system.ads" 1 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 26 0 0# abstract ensures {true}(let _ = (let temp___1303 = #"tracks.ads" 7 0 0# (any Tracks__track.track
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Tracks__track.id__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.origin__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.destination__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trainid__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslineorigin__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Tracks__track.trackslinedestination__pred(temp___1303))) then (
     #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 26 0 0# assume { (Tracks__track__axiom.default_initial_assumption { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } False) };
   #"tracks.ads" 7 0 0# assume { (Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } False False True) };
   #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 27 0 0# abstract ensures {true}(let _ = (let temp___1305 = #"stations.ads" 18 0 0# (any Stations__station.station
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Stations__station.id__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.location__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.trainid__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.incoming__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1306 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1306))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1306))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1307 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1307))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1308 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1308))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1307))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1306))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1306))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.outgoing__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1309 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1309))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1309))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1310 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1310))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1311 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1311))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1310))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1309))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1309))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.trackslineoriginanddestination__pred(temp___1305))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1312 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1312))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1312))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1313 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1313))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1314 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1314))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1314))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1313))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1312))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1312))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 27 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } False) };
   #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } False False True) };
   #"stations.ads" 18 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"railsystems.adb" 28 0 0# assume { (Types__station_locations__axiom.default_initial_assumption Railsystems__go__tempstationlocation.tempstationlocation.int__content False) };
   #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__go__tempstationlocation.tempstationlocation.int__content False False True) };
   #"types.ads" 11 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"railsystems.adb" 29 0 0# assume { (Standard__natural__axiom.default_initial_assumption Railsystems__go__size.size.int__content False) };
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__go__size.size.int__content False False True) };
   #"system.ads" 1 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"railsystems.adb" 30 0 0# assume { (Standard__natural__axiom.default_initial_assumption Railsystems__go__station_count.station_count.int__content False) };
   #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__go__station_count.station_count.int__content False False True) };
   ( "GP_Sloc:railsystems.adb:32:7" () );
   ( "GP_Sloc:railsystems.adb:33:20" #"railsystems.adb" 33 0 0# Railsystems__go__station_count.station_count.int__content <- ( 1 ) );
   ( "GP_Sloc:railsystems.adb:35:34" ( () (* Translation of an Ada loop from railsystems.adb:35 *)
   ;
   (if ((Railsystems__go__station_count.station_count.int__content < Railsystems__go__count.count)) then (
    try
     ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:35 *)
     ;
     () (* While loop translating the Ada loop from railsystems.adb:35 *)
     ;
     #"railsystems.adb" 35 0 0# while True do
      ( () (* Assume implicit invariants from the loop railsystems.adb:35 *)
      ;
      #"railsystems.adb" 35 0 0# assume { (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)) ((Types__station_locations__axiom.dynamic_invariant Railsystems__go__tempstationlocation.tempstationlocation.int__content False True True)))) ((Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } False True True)))) ((Standard__natural__axiom.dynamic_invariant Railsystems__go__size.size.int__content False True True)))) ((if ((1 <= Railsystems__go__L_2__R2b.r2b)) then (
       (Railsystems__go__L_2__T3b.dynamic_property 1 Railsystems__go__L_2__R2b.r2b Railsystems__go__L_2__i.i.int__content)) else true)))) ((Standard__natural__axiom.dynamic_invariant Railsystems__go__station_count.station_count.int__content False True True)))) ((Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } False True True)))) ((Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } False True True)))) ((Railsystems__go__station_count.station_count.int__content < Railsystems__go__count.count))) };
      () (* Check for absence of RTE in the invariant of loop railsystems.adb:35 *)
      ;
      () (* Loop statements appearing after the loop invariant of loop railsystems.adb:35 *)
      ;
      ( "GP_Sloc:railsystems.adb:36:10" (if ((let temp___1392 = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) in (
       (Array__Int__Standard__character.bool_eq(temp___1392) (Trains__train_location__T1s.first) (Trains__train_location__T1s.last) (Temp___1391.temp___1391) (1) (7))))
      ) then (
       ( ( "GP_Sloc:railsystems.adb:37:13" (if (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) = (Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) then (
        ( ( "GP_Sloc:railsystems.adb:38:35" #"railsystems.adb" 38 0 0# Railsystems__go__tempstationlocation.tempstationlocation.int__content <- ( (Types__station_locations.to_rep((Trains__train.rec__origin((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) ) );
        ( "GP_Sloc:railsystems.adb:39:29" (let temp___1351 = (let temp___1350 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
         ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__origin((Trains__train.__split_fields(temp___1350)))) in (
          ()))
          end ;
         { ( temp___1350 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1350)) ) with Trains__train.rec__origin = (Types__station_locations.of_rep (Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
         in (
         #"railsystems.adb" 39 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1351)) )))
         );
        ( "GP_Sloc:railsystems.adb:40:33" (let temp___1353 = (let temp___1352 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
         ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__destination((Trains__train.__split_fields(temp___1352)))) in (
          ()))
          end ;
         { ( temp___1352 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1352)) ) with Trains__train.rec__destination = (Types__station_locations.of_rep Railsystems__go__tempstationlocation.tempstationlocation.int__content) } } )))
         in (
         #"railsystems.adb" 40 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1353)) )))
         ) )) else (
        ())) );
       ( "GP_Sloc:railsystems.adb:42:13" (if (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)) then (
        ( ( "GP_Sloc:railsystems.adb:43:20" #"railsystems.adb" 43 0 0# Railsystems__go__size.size.int__content <- ( (Stations__list_tracks__get_size__axiom.get_size((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))))))))) ) );
        ( "GP_Sloc:railsystems.adb:44:30" ( (let railsystems__go__L_2__R2b__assume = Railsystems__go__size.size.int__content in (
         #"railsystems.adb" 44 0 0# assume { (railsystems__go__L_2__R2b__assume = Railsystems__go__L_2__R2b.r2b) }))
        ;
        #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__go__L_2__R2b.r2b True False True) } ) );
        ( "GP_Sloc:railsystems.adb:44:35" (let temp___1389 = 1 in (
        (let temp___1390 = Railsystems__go__L_2__R2b.r2b in (
         ( #"railsystems.adb" 44 0 0# Railsystems__go__L_2__i.i.int__content <- ( temp___1389 );
         () (* Translation of an Ada loop from railsystems.adb:44 *)
         ;
         (if ((Boolean.andb((temp___1389 <= Railsystems__go__L_2__i.i.int__content)) ((Railsystems__go__L_2__i.i.int__content <= temp___1390)))) then (
          try
           ( () (* First unroling of the loop statements appearing before the loop invariant of loop railsystems.adb:44 *)
           ;
           () (* While loop translating the Ada loop from railsystems.adb:44 *)
           ;
           #"railsystems.adb" 44 0 0# while True do
            ( () (* Assume implicit invariants from the loop railsystems.adb:44 *)
            ;
            #"railsystems.adb" 44 0 0# assume { (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } False True True)) ((Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } False True True)))) ((if ((1 <= Railsystems__go__L_2__R2b.r2b)) then (
             (Railsystems__go__L_2__T3b.dynamic_property 1 Railsystems__go__L_2__R2b.r2b Railsystems__go__L_2__i.i.int__content)) else true)))) ((Tracks__track__axiom.dynamic_invariant { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } False True True)))) ((Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } False True True)))) (( (1 <= Railsystems__go__L_2__i.i.int__content) /\ (Railsystems__go__L_2__i.i.int__content <= Railsystems__go__L_2__R2b.r2b) ))) };
            () (* Check for absence of RTE in the invariant of loop railsystems.adb:44 *)
            ;
            () (* Loop statements appearing after the loop invariant of loop railsystems.adb:44 *)
            ;
            ( "GP_Sloc:railsystems.adb:45:19" (if (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)) then (
             ( ( "GP_Sloc:railsystems.adb:46:27" (let temp___1354 = (Stations__list_tracks__data_type.to_base((Stations__list_tracks__get_element__axiom.get_element((Railsystems__list_stations__data_type.rec__outgoing((Railsystems__list_stations__data_type.__split_fields((Railsystems__list_stations__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_stations((Railsystems__railsystem.__split_fields({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))))))))) (Railsystems__go__L_2__i.i.int__content)))) in (
              #"railsystems.adb" 46 0 0# Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1354)) )))
              );
             ( "GP_Sloc:railsystems.adb:47:22" (if (((Types__station_locations.to_rep((Tracks__track.rec__trackslinedestination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) = (Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) then (
              ( "GP_Sloc:railsystems.adb:48:25" (if ((Boolean.andb(((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) <> 0)))) then (
               ( "GP_Sloc:railsystems.adb:49:28" (if (((Standard__natural.to_rep((Tracks__track.rec__trainid((Tracks__track.__split_fields(( #"railsystems.adb" 49 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:49:31" "GP_Id:46" "comment:                           if getTrackByName(r_system,track.Origin, track.Destination).TrainID = 0 then
                              ^ railsystems.adb:49:31:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__cmp__selectcomp__call_gettrackbyname" (Railsystems__gettrackbyname__axiom.gettrackbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content }))))))) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))))) ))))))) = 0)) then (
                ( ( "GP_Sloc:railsystems.adb:50:62" (let temp___1358 = (let temp___1357 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1357)))) in (
                  ()))
                  end ;
                 { ( temp___1357 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1357)) ) with Trains__train.rec__location = (let temp___1356 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
                  ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields(temp___1356)))) in (
                   ()))
                   end ;
                  { ( temp___1356 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1356)) ) with Trains__train_location.rec__currentlocation = ( #"railsystems.adb" 50 0 0# assert { ( #"railsystems.adb" 50 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:railsystems.adb:50:65" "GP_Id:41" "comment:                              train.Location.currentLocation := \"Track  \";
                                                                ^ railsystems.adb:50:65:VC_LENGTH_CHECK" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__train_assign" ((if ((1 <= 7)) then (
                   ((7 - 1) + 1)) else (
                   0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
                   ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
                   0))) ) };
                  Temp___1355.temp___1355 ) } } )))
                  } } )))
                 in (
                 #"railsystems.adb" 50 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1358)) )))
                 );
                ( "GP_Sloc:railsystems.adb:51:51" (let temp___1361 = (let temp___1360 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1360)))) in (
                  ()))
                  end ;
                 { ( temp___1360 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1360)) ) with Trains__train.rec__location = (let temp___1359 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
                  ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__track((Trains__train_location.__split_fields(temp___1359)))) in (
                   ()))
                   end ;
                  { ( temp___1359 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1359)) ) with Trains__train_location.rec__track = { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } } } )))
                  } } )))
                 in (
                 #"railsystems.adb" 51 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1361)) )))
                 );
                ( "GP_Sloc:railsystems.adb:52:57" (let temp___1365 = (let temp___1364 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1364)))) in (
                  ()))
                  end ;
                 { ( temp___1364 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1364)) ) with Trains__train.rec__location = (let temp___1363 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
                  ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1363)))) in (
                   ()))
                   end ;
                  { ( temp___1363 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1363)) ) with Trains__train_location.rec__station = (let temp___1362 = (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
                   ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Stations__station.rec__id((Stations__station.__split_fields(temp___1362)))) in (
                    ()))
                    end ;
                   { ( temp___1362 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1362)) ) with Stations__station.rec__id = (Standard__natural.of_rep 0) } } )))
                   } } )))
                  } } )))
                 in (
                 #"railsystems.adb" 52 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1365)) )))
                 );
                ( "GP_Sloc:railsystems.adb:53:61" (let temp___1369 = (let temp___1368 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1368)))) in (
                  ()))
                  end ;
                 { ( temp___1368 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1368)) ) with Trains__train.rec__location = (let temp___1367 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
                  ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1367)))) in (
                   ()))
                   end ;
                  { ( temp___1367 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1367)) ) with Trains__train_location.rec__station = (let temp___1366 = (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
                   ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1366)))) in (
                    ()))
                    end ;
                   { ( temp___1366 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1366)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep 0) } } )))
                   } } )))
                  } } )))
                 in (
                 #"railsystems.adb" 53 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1369)) )))
                 );
                ( "GP_Sloc:railsystems.adb:54:42" (let temp___1371 = (let temp___1370 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__state((Trains__train.__split_fields(temp___1370)))) in (
                  ()))
                  end ;
                 { ( temp___1370 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1370)) ) with Trains__train.rec__state = (Types__train_state.of_rep 0) } } )))
                 in (
                 #"railsystems.adb" 54 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1371)) )))
                 );
                ( "GP_Sloc:railsystems.adb:55:59" (let temp___1375 = (let temp___1374 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
                 ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1374)))) in (
                  ()))
                  end ;
                 { ( temp___1374 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1374)) ) with Trains__train.rec__location = (let temp___1373 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
                  ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__track((Trains__train_location.__split_fields(temp___1373)))) in (
                   ()))
                   end ;
                  { ( temp___1373 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1373)) ) with Trains__train_location.rec__track = (let temp___1372 = (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
                   ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1372)))) in (
                    ()))
                    end ;
                   { ( temp___1372 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1372)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
                   } } )))
                  } } )))
                 in (
                 #"railsystems.adb" 55 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1375)) )))
                 );
                ( "GP_Sloc:railsystems.adb:56:38" (let temp___1376 = (Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))))) in (
                 #"railsystems.adb" 56 0 0# Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1376)) )))
                 );
                ( "GP_Sloc:railsystems.adb:57:46" (let temp___1378 = (let temp___1377 = { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } in (
                 ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1377)))) in (
                  ()))
                  end ;
                 { ( temp___1377 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1377)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep 0) } } )))
                 in (
                 #"railsystems.adb" 57 0 0# Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1378)) )))
                 );
                ( "GP_Sloc:railsystems.adb:58:31" (if ((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) < 101)))) (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) <> 0)))) then (
                 ( "GP_Sloc:railsystems.adb:59:34" ( #"railsystems.adb" 59 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:59:34" "GP_Id:42" "comment:                                 replaceStation(r_system,station);
                                 ^ railsystems.adb:59:34:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__if__call_replacestation" (Railsystems__replacestation__axiom.replacestation(Railsystems__go__r_system.r_system__split_fields) ({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })) ) )) else (
                 ())) );
                ( "GP_Sloc:railsystems.adb:62:44" (let temp___1380 = (let temp___1379 = { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } in (
                 ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1379)))) in (
                  ()))
                  end ;
                 { ( temp___1379 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1379)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
                 in (
                 #"railsystems.adb" 62 0 0# Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1380)) )))
                 );
                ( "GP_Sloc:railsystems.adb:63:31" (if ((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) < 101)))) then (
                 ( "GP_Sloc:railsystems.adb:64:34" ( #"railsystems.adb" 64 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:64:34" "GP_Id:43" "comment:                                 replaceTrack(r_system,track);
                                 ^ railsystems.adb:64:34:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__if__call_replacetrack" (Railsystems__replacetrack__axiom.replacetrack(Railsystems__go__r_system.r_system__split_fields) ({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })) ) )) else (
                 ())) );
                ( "GP_Sloc:railsystems.adb:66:31" (if ((Boolean.andb(((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) < 101)))) then (
                 ( "GP_Sloc:railsystems.adb:67:34" ( #"railsystems.adb" 67 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:67:34" "GP_Id:44" "comment:                                 replaceTrain(r_system,train);
                                 ^ railsystems.adb:67:34:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__if__call_replacetrain" (Railsystems__replacetrain__axiom.replacetrain(Railsystems__go__r_system.r_system__split_fields) ({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) ) )) else (
                 ())) );
                ( "GP_Sloc:railsystems.adb:69:31" (Sprint__print_natural__axiom.print_natural((Standard__string.of_array(Temp___1381.temp___1381) (1) (11))) ((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) );
                ( "GP_Sloc:railsystems.adb:70:31" (Sprint__print_train_state__axiom.print_train_state((Standard__string.of_array(Temp___1382.temp___1382) (1) (14))) ((Types__train_state.to_rep((Trains__train.rec__state((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) );
                ( "GP_Sloc:railsystems.adb:71:31" (Sprint__print__axiom.print((let temp___1384 = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) in (
                 (Standard__string.of_array((Array__Int__Standard__character.concat(Temp___1383.temp___1383) (1) (25) (temp___1384) (Trains__train_location__T1s.first) (Trains__train_location__T1s.last))) (1) (( #"railsystems.adb" 71 0 0# "model_vc" "keep_on_simp" "GP_Sloc:railsystems.adb:71:64" "GP_Reason:VC_RANGE_CHECK" "GP_Id:45" "comment:                              Print(\"Train current location:  \"& train.Location.currentLocation);
                                                               ^ railsystems.adb:71:64:VC_RANGE_CHECK" "GP_Shape:L_1_while__if__if__L_2_while__if__if__if__if__call_print__concat" (Standard__positive.range_check_(((1 + ((if ((1 <= 25)) then (
                  ((25 - 1) + 1)) else (
                  0)) + (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
                  ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
                  0)))) - 1))) )))))
                )) );
                ( "GP_Sloc:railsystems.adb:72:31" (Sprint__print_natural__axiom.print_natural((Standard__string.of_array(Temp___1385.temp___1385) (1) (11))) ((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) );
                ( "GP_Sloc:railsystems.adb:73:31" (Sprint__print_station_locations__axiom.print_station_locations((Standard__string.of_array(Temp___1386.temp___1386) (1) (11))) ((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))))) );
                ( "GP_Sloc:railsystems.adb:74:31" (Sprint__print_station_locations__axiom.print_station_locations((Standard__string.of_array(Temp___1387.temp___1387) (1) (11))) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))))) );
                ( "GP_Sloc:railsystems.adb:75:31" (Sprint__print__axiom.print((Standard__string.of_array(Temp___1388.temp___1388) (1) (56)))) ) )) else (
                ())) )) else (
               ())) )) else (
              ())) ) )) else (
             ())) );
            #"railsystems.adb" 44 0 0# Railsystems__go__L_2__i.i.int__content <- ( (Railsystems__go__L_2__i.i.int__content + 1) );
            () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:44 *)
            ;
            (if ((Railsystems__go__L_2__i.i.int__content <= temp___1390)) then (
             ()) else (
             #"railsystems.adb" 44 0 0# raise Railsystems__go__L_2.L_2)) )
           done )
          with
           Railsystems__go__L_2.L_2 -> ()
          end)) )))
        ))
         ) )) else (
        ())) ) )) else (
       ( "GP_Sloc:railsystems.adb:87:10" (if ((let temp___1349 = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) in (
        (Array__Int__Standard__character.bool_eq(temp___1349) (Trains__train_location__T1s.first) (Trains__train_location__T1s.last) (Temp___1348.temp___1348) (1) (7))))
       ) then (
        ( ( "GP_Sloc:railsystems.adb:88:13" (if (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)) then (
         ( "GP_Sloc:railsystems.adb:89:23" (let temp___1316 = (Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) in (
          #"railsystems.adb" 89 0 0# Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1316)) )))
          )) else (
         ())) );
        ( "GP_Sloc:railsystems.adb:91:13" (if (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) <> 0)) then (
         ( "GP_Sloc:railsystems.adb:92:16" (if (((Standard__natural.to_rep((Stations__station.rec__trainid((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))))))))))) = 0)) then (
          ( ( "GP_Sloc:railsystems.adb:93:19" (if (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)) then (
           ( "GP_Sloc:railsystems.adb:94:44" (let temp___1319 = (let temp___1318 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
            ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1318)))) in (
             ()))
             end ;
            { ( temp___1318 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1318)) ) with Trains__train.rec__location = (let temp___1317 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
             ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1317)))) in (
              ()))
              end ;
             { ( temp___1317 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1317)) ) with Trains__train_location.rec__station = (Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) } } )))
             } } )))
            in (
            #"railsystems.adb" 94 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1319)) )))
            )) else (
           ())) );
          ( "GP_Sloc:railsystems.adb:96:49" (let temp___1323 = (let temp___1322 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
           ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1322)))) in (
            ()))
            end ;
           { ( temp___1322 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1322)) ) with Trains__train.rec__location = (let temp___1321 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
            ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields(temp___1321)))) in (
             ()))
             end ;
            { ( temp___1321 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1321)) ) with Trains__train_location.rec__currentlocation = ( #"railsystems.adb" 96 0 0# assert { ( #"railsystems.adb" 96 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:railsystems.adb:96:52" "GP_Id:36" "comment:                  train.Location.currentLocation:= \"Station\";
                                                   ^ railsystems.adb:96:52:VC_LENGTH_CHECK" "GP_Shape:L_1_while__if__if__if__train_assign" ((if ((1 <= 7)) then (
             ((7 - 1) + 1)) else (
             0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
             ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
             0))) ) };
            Temp___1320.temp___1320 ) } } )))
            } } )))
           in (
           #"railsystems.adb" 96 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1323)) )))
           );
          ( "GP_Sloc:railsystems.adb:97:30" (let temp___1325 = (let temp___1324 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
           ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__state((Trains__train.__split_fields(temp___1324)))) in (
            ()))
            end ;
           { ( temp___1324 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1324)) ) with Trains__train.rec__state = (Types__train_state.of_rep 1) } } )))
           in (
           #"railsystems.adb" 97 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1325)) )))
           );
          ( "GP_Sloc:railsystems.adb:98:42" (let temp___1329 = (let temp___1328 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
           ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1328)))) in (
            ()))
            end ;
           { ( temp___1328 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1328)) ) with Trains__train.rec__location = (let temp___1327 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
            ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__track((Trains__train_location.__split_fields(temp___1327)))) in (
             ()))
             end ;
            { ( temp___1327 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1327)) ) with Trains__train_location.rec__track = (let temp___1326 = (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
             ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__id((Tracks__track.__split_fields(temp___1326)))) in (
              ()))
              end ;
             { ( temp___1326 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1326)) ) with Tracks__track.rec__id = (Standard__natural.of_rep 0) } } )))
             } } )))
            } } )))
           in (
           #"railsystems.adb" 98 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1329)) )))
           );
          ( "GP_Sloc:railsystems.adb:99:47" (let temp___1333 = (let temp___1332 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
           ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1332)))) in (
            ()))
            end ;
           { ( temp___1332 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1332)) ) with Trains__train.rec__location = (let temp___1331 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
            ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__track((Trains__train_location.__split_fields(temp___1331)))) in (
             ()))
             end ;
            { ( temp___1331 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1331)) ) with Trains__train_location.rec__track = (let temp___1330 = (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
             ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1330)))) in (
              ()))
              end ;
             { ( temp___1330 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1330)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep 0) } } )))
             } } )))
            } } )))
           in (
           #"railsystems.adb" 99 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1333)) )))
           );
          ( "GP_Sloc:railsystems.adb:100:49" (let temp___1337 = (let temp___1336 = { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content } in (
           ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1336)))) in (
            ()))
            end ;
           { ( temp___1336 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1336)) ) with Trains__train.rec__location = (let temp___1335 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) in (
            ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1335)))) in (
             ()))
             end ;
            { ( temp___1335 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1335)) ) with Trains__train_location.rec__station = (let temp___1334 = (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))) in (
             ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1334)))) in (
              ()))
              end ;
             { ( temp___1334 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1334)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
             } } )))
            } } )))
           in (
           #"railsystems.adb" 100 0 0# Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1337)) )))
           );
          ( "GP_Sloc:railsystems.adb:101:34" (let temp___1339 = (let temp___1338 = { Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content } in (
           ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1338)))) in (
            ()))
            end ;
           { ( temp___1338 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1338)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
           in (
           #"railsystems.adb" 101 0 0# Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1339)) )))
           );
          ( "GP_Sloc:railsystems.adb:103:19" (if ((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) < 101)))) (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })))))) <> 0)))) then (
           ( "GP_Sloc:railsystems.adb:104:22" ( #"railsystems.adb" 104 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:104:22" "GP_Id:37" "comment:                     replaceStation(r_system,station);
                     ^ railsystems.adb:104:22:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__if__if__call_replacestation" (Railsystems__replacestation__axiom.replacestation(Railsystems__go__r_system.r_system__split_fields) ({ Stations__station.__split_fields = Railsystems__go__station.station__split_fields.Stations__station.__split_fields__content })) ) )) else (
           ())) );
          ( "GP_Sloc:railsystems.adb:106:19" (if ((Boolean.andb(((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)) (((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) <> 0)))) then (
           ( "GP_Sloc:railsystems.adb:107:27" (let temp___1340 = ( #"railsystems.adb" 107 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:107:29" "GP_Id:38" "comment:                     track:=getTrackByName(r_system,train.Location.Track.Origin, train.Location.Track.Destination);
                            ^ railsystems.adb:107:29:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__if__if__track_assign__call_gettrackbyname" (Railsystems__gettrackbyname__axiom.gettrackbyname({ Railsystems__railsystem.__split_fields = Railsystems__go__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) ((Types__station_locations.to_rep((Tracks__track.rec__origin((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content }))))))))))))))) ((Types__station_locations.to_rep((Tracks__track.rec__destination((Tracks__track.__split_fields((Trains__train_location.rec__track((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) ) in (
            #"railsystems.adb" 107 0 0# Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1340)) )))
            )) else (
           ())) );
          ( "GP_Sloc:railsystems.adb:110:32" (let temp___1342 = (let temp___1341 = { Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content } in (
           ( #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1341)))) in (
            ()))
            end ;
           { ( temp___1341 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1341)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep 0) } } )))
           in (
           #"railsystems.adb" 110 0 0# Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content <- ( (Tracks__track.__split_fields(temp___1342)) )))
           );
          ( "GP_Sloc:railsystems.adb:111:19" (if ((Boolean.andb(((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Tracks__track.rec__id((Tracks__track.__split_fields({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })))))) < 101)))) then (
           ( "GP_Sloc:railsystems.adb:112:22" ( #"railsystems.adb" 112 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:112:22" "GP_Id:39" "comment:                     replaceTrack(r_system,track);
                     ^ railsystems.adb:112:22:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__if__if__call_replacetrack" (Railsystems__replacetrack__axiom.replacetrack(Railsystems__go__r_system.r_system__split_fields) ({ Tracks__track.__split_fields = Railsystems__go__track.track__split_fields.Tracks__track.__split_fields__content })) ) )) else (
           ())) );
          ( "GP_Sloc:railsystems.adb:114:19" (if ((Boolean.andb(((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))) < 101)))) then (
           ( "GP_Sloc:railsystems.adb:115:22" ( #"railsystems.adb" 115 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:115:22" "GP_Id:40" "comment:                     replaceTrain(r_system,train);
                     ^ railsystems.adb:115:22:VC_PRECONDITION" "GP_Shape:L_1_while__if__if__if__if__call_replacetrain" (Railsystems__replacetrain__axiom.replacetrain(Railsystems__go__r_system.r_system__split_fields) ({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })) ) )) else (
           ())) );
          ( "GP_Sloc:railsystems.adb:117:19" (Sprint__print_natural__axiom.print_natural((Standard__string.of_array(Temp___1343.temp___1343) (1) (14))) ((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) );
          ( "GP_Sloc:railsystems.adb:119:19" (Sprint__print_train_state__axiom.print_train_state((Standard__string.of_array(Temp___1344.temp___1344) (1) (14))) ((Types__train_state.to_rep((Trains__train.rec__state((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))) );
          ( "GP_Sloc:railsystems.adb:120:19" (Sprint__print_natural__axiom.print_natural((Standard__string.of_array(Temp___1345.temp___1345) (1) (30))) ((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) );
          ( "GP_Sloc:railsystems.adb:121:19" (Sprint__print_station_locations__axiom.print_station_locations((Standard__string.of_array(Temp___1346.temp___1346) (1) (27))) ((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__go__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))))) );
          ( "GP_Sloc:railsystems.adb:123:19" (Sprint__print__axiom.print((Standard__string.of_array(Temp___1347.temp___1347) (1) (56)))) ) )) else (
          ())) )) else (
         ())) ) )) else (
        ())) ))) );
      ( "GP_Sloc:railsystems.adb:133:23" #"railsystems.adb" 133 0 0# Railsystems__go__station_count.station_count.int__content <- ( ( #"railsystems.adb" 133 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:railsystems.adb:133:38" "GP_Id:47" "comment:         station_count:=station_count+1;
                                     ^ railsystems.adb:133:38:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__station_count_assign__add" (Standard__integer.range_check_((Railsystems__go__station_count.station_count.int__content + 1))) ) ) );
      () (* Check for the exit condition and loop statements appearing before the loop invariant of loop railsystems.adb:35 *)
      ;
      (if ((Railsystems__go__station_count.station_count.int__content < Railsystems__go__count.count)) then (
       ()) else (
       #"railsystems.ads" 104 0 0# raise Railsystems__go__L_1.L_1)) )
     done )
    with
     Railsystems__go__L_1.L_1 -> ()
    end)) ) );
   #"railsystems.adb" 23 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:104 *)
  ;
  #"railsystems.adb" 23 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "preparetrain" defined at railsystems.ads:136, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__preparetrain__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Types__station_locations__axiom
 use        Types__timetable
 use        Types__timetable__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__no_found
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Types__list_od__get_size
 use        Types__list_od__get_size__axiom
 use        Types__list_od__get_element
 use        Types__list_od__get_element__axiom
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Stations__station__axiom
 use        Trains__train_location__T1s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__replacetrain__axiom
 use        Railsystems__getstationbyname
 use        Railsystems__getstationbyname__axiom
 use        Railsystems__preparetrain__r_system
 use        Railsystems__preparetrain__train
 use        Railsystems__preparetrain__origin
 use        Railsystems__preparetrain__destination
 use        Railsystems__preparetrain__starttime
 use        Railsystems__preparetrain__temporiginstation
 use        Array__Int__Standard__character
 use        Temp___1417
 use        Array__Int__Standard__character
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__preparetrain__temporiginstation__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__replacestation__axiom
 use        Railsystems__replacetrain__axiom
 use        Railsystems__preparetrain__r_system__axiom
 use        Railsystems__preparetrain__train__axiom
 use        Railsystems__preparetrain__origin__axiom
 use        Railsystems__preparetrain__destination__axiom
 use        Railsystems__preparetrain__starttime__axiom
 use        Railsystems__getstationbyname__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__get_size__axiom
 use        Types__list_od__get_element__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__no_found__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__no_found__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 let def #"railsystems.adb" 23 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:136" 
   (__void_param : unit)
  requires { true }
  ensures { ( #"railsystems.ads" 147 0 0# "model_vc_post" "keep_on_simp" "GP_Sloc:railsystems.ads:147:14" "GP_Reason:VC_POSTCONDITION" "GP_Id:52" "comment:     post => (train.Origin = Origin
             ^ railsystems.ads:147:14:VC_POSTCONDITION" "GP_Shape:pragargs__and" ( ( ( "GP_Pretty_Ada:6181" "GP_Sloc:railsystems.ads:147:15" ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))) = Railsystems__preparetrain__origin.origin) ) /\ ( "GP_Pretty_Ada:6187" "GP_Sloc:railsystems.ads:148:19" ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))) = Railsystems__preparetrain__destination.destination) ) ) /\ ( "GP_Pretty_Ada:6193" "GP_Sloc:railsystems.ads:149:19" ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))) = 2) ) ) ) }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:136 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } True False True) };
  #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__preparetrain__origin.origin True False True) };
  #"types.ads" 11 0 0# assume { (Types__station_locations__axiom.dynamic_invariant Railsystems__preparetrain__destination.destination True False True) };
  #"types.ads" 14 0 0# assume { (Types__timetable__axiom.dynamic_invariant Railsystems__preparetrain__starttime.starttime True False True) };
  #"list.ads" 22 0 0# assume { (Types__list_od__data_type__axiom.dynamic_invariant Types__list_od__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_stations__data_type__axiom.dynamic_invariant Railsystems__list_stations__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:136 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:136 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Railsystems__preparetrain__origin.origin <> 0)) ((Railsystems__preparetrain__destination.destination <> 0)))) ((Railsystems__preparetrain__origin.origin <> Railsystems__preparetrain__destination.destination)))) (((Standard__natural.to_rep((Stations__station.rec__trainid((Stations__station.__split_fields((Trains__train_location.rec__station((Trains__train_location.__split_fields((Trains__train.rec__location((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))))))))))) = 0)))) ((if ((Railsystems__preparetrain__origin.origin <> 0)) then (
   ( (let index = #"railsystems.ads" 136 0 0# (any int
   ) in (
    (if ((Boolean.andb((1 <= index)) ((index <= (Types__list_od__get_size__axiom.get_size((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin)))))))))))) then (
     #"railsystems.ads" 136 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.orb(((Types__station_locations.to_rep((Types__list_od__data_type.rec__origin((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin))))))) (index)))))))) = Railsystems__preparetrain__origin.origin)) (((Types__station_locations.to_rep((Types__list_od__data_type.rec__destination((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin))))))) (index)))))))) = Railsystems__preparetrain__origin.origin)))) ((Boolean.orb(((Types__station_locations.to_rep((Types__list_od__data_type.rec__origin((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin))))))) (index)))))))) = Railsystems__preparetrain__destination.destination)) (((Types__station_locations.to_rep((Types__list_od__data_type.rec__destination((Types__list_od__data_type.__split_fields((Types__list_od__get_element__axiom.get_element((Stations__station.rec__trackslineoriginanddestination((Stations__station.__split_fields((Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin))))))) (index)))))))) = Railsystems__preparetrain__destination.destination))))) in (
      ()))
      end ))))
   ;
   #"railsystems.ads" 142 0 0# (any bool
   requires {true} 
   ensures {( (result = True) <-> (exists index  : int.
    ( ( (1 <= index) /\ (index <= (Types__list_od__get_size.get_size (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))))) ) /\ ( ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__origin.origin) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__origin.origin) ) /\ ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__destination.destination) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__destination.destination) ) ) )) )} 
   ) )) else (
   (Boolean.of_int(1)))))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:136 *)
  ;
  #"railsystems.ads" 142 0 0# assume { ( ( ( ( (Railsystems__preparetrain__origin.origin <> 0) /\ (Railsystems__preparetrain__destination.destination <> 0) ) /\ (Railsystems__preparetrain__origin.origin <> Railsystems__preparetrain__destination.destination) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) /\ (if ((Railsystems__preparetrain__origin.origin <> 0)) then (
   (exists index  : int.
    ( ( (1 <= index) /\ (index <= (Types__list_od__get_size.get_size (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))))) ) /\ ( ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__origin.origin) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__origin.origin) ) /\ ( ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__destination.destination) \/ ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields (Types__list_od__get_element.get_element (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content } Railsystems__preparetrain__origin.origin))) index)))) = Railsystems__preparetrain__destination.destination) ) ) ))) else (
   true)) ) };
  () (* checking of pragma precondition railsystems.ads:136 *)
  ;
  try
   ( #"system.ads" 1 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 152 0 0# abstract ensures {true}(let _ = (let temp___1398 = #"stations.ads" 18 0 0# (any Stations__station.station
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Stations__station.id__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.location__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.trainid__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Stations__station.incoming__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1399 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1399))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1399))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1400 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1400))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1401 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1401))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1400))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1399))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1399))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.outgoing__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1402 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1402))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1402))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
        ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1403 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Stations__list_tracks__data.data__pred(temp___1403))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1404 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Stations__list_tracks__data_type.id__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.origin__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.destination__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trainid__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1404))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Stations__list_tracks__data.id__pred(temp___1403))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.head__pred(temp___1402))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1402))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Stations__station.trackslineoriginanddestination__pred(temp___1398))) then (
     #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1405 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Types__list_od__list_ptr.size__pred(temp___1405))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.elements__pred(temp___1405))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
        ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
        0)) > 0)) then (
        #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1406 = #"list.ads" 95 0 0# (any Types__list_od__data.data
        requires {true} 
        ensures {true} 
        ) in (
         ( (if ((Types__list_od__data.data__pred(temp___1406))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1407 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
          requires {true} 
          ensures {true} 
          ) in (
           ( (if ((Types__list_od__data_type.origin__pred(temp___1407))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end ));
           (if ((Types__list_od__data_type.destination__pred(temp___1407))) then (
            #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
             ()))
             end )) )))
           in (
           ()))
           end ));
         (if ((Types__list_od__data.id__pred(temp___1406))) then (
          #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
           ()))
           end )) )))
         in (
         ()))
         end )) in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.head__pred(temp___1405))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
        ()))
        end ));
      (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1405))) then (
       #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
        ()))
        end )) )))
      in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 152 0 0# assume { (Stations__station__axiom.default_initial_assumption { Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content } False) };
   #"stations.ads" 18 0 0# assume { (Stations__station__axiom.dynamic_invariant { Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:156:20" (let temp___1410 = (let temp___1409 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__origin((Trains__train.__split_fields(temp___1409)))) in (
     ()))
     end ;
    { ( temp___1409 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1409)) ) with Trains__train.rec__origin = (Types__station_locations.of_rep Railsystems__preparetrain__origin.origin) } } )))
    in (
    #"railsystems.adb" 156 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1410)) )))
    );
   ( "GP_Sloc:railsystems.adb:158:25" (let temp___1412 = (let temp___1411 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__destination((Trains__train.__split_fields(temp___1411)))) in (
     ()))
     end ;
    { ( temp___1411 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1411)) ) with Trains__train.rec__destination = (Types__station_locations.of_rep Railsystems__preparetrain__destination.destination) } } )))
    in (
    #"railsystems.adb" 158 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1412)) )))
    );
   ( "GP_Sloc:railsystems.adb:159:18" (let temp___1414 = (let temp___1413 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__state((Trains__train.__split_fields(temp___1413)))) in (
     ()))
     end ;
    { ( temp___1413 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1413)) ) with Trains__train.rec__state = (Types__train_state.of_rep 2) } } )))
    in (
    #"railsystems.adb" 159 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1414)) )))
    );
   ( "GP_Sloc:railsystems.adb:160:27" (let temp___1416 = (let temp___1415 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__start_run_time((Trains__train.__split_fields(temp___1415)))) in (
     ()))
     end ;
    { ( temp___1415 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1415)) ) with Trains__train.rec__start_run_time = (Types__timetable.of_rep Railsystems__preparetrain__starttime.starttime) } } )))
    in (
    #"railsystems.adb" 160 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1416)) )))
    );
   ( "GP_Sloc:railsystems.adb:161:37" (let temp___1420 = (let temp___1419 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1419)))) in (
     ()))
     end ;
    { ( temp___1419 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1419)) ) with Trains__train.rec__location = (let temp___1418 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })) in (
     ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__currentlocation((Trains__train_location.__split_fields(temp___1418)))) in (
      ()))
      end ;
     { ( temp___1418 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1418)) ) with Trains__train_location.rec__currentlocation = ( #"railsystems.adb" 161 0 0# assert { ( #"railsystems.adb" 161 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:railsystems.adb:161:39" "GP_Id:49" "comment:      train.Location.currentLocation:=\"Station\";
                                      ^ railsystems.adb:161:39:VC_LENGTH_CHECK" "GP_Shape:train_assign" ((if ((1 <= 7)) then (
      ((7 - 1) + 1)) else (
      0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
      ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
      0))) ) };
     Temp___1417.temp___1417 ) } } )))
     } } )))
    in (
    #"railsystems.adb" 161 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1420)) )))
    );
   ( "GP_Sloc:railsystems.adb:162:30" (let temp___1423 = (let temp___1422 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1422)))) in (
     ()))
     end ;
    { ( temp___1422 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1422)) ) with Trains__train.rec__location = (let temp___1421 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })) in (
     ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1421)))) in (
      ()))
      end ;
     { ( temp___1421 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1421)) ) with Trains__train_location.rec__station = (Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin)) } } )))
     } } )))
    in (
    #"railsystems.adb" 162 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1423)) )))
    );
   ( "GP_Sloc:railsystems.adb:163:37" (let temp___1427 = (let temp___1426 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1426)))) in (
     ()))
     end ;
    { ( temp___1426 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1426)) ) with Trains__train.rec__location = (let temp___1425 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })) in (
     ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__station((Trains__train_location.__split_fields(temp___1425)))) in (
      ()))
      end ;
     { ( temp___1425 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1425)) ) with Trains__train_location.rec__station = (let temp___1424 = (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))) in (
      ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1424)))) in (
       ()))
       end ;
      { ( temp___1424 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1424)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
      } } )))
     } } )))
    in (
    #"railsystems.adb" 163 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1427)) )))
    );
   ( "GP_Sloc:railsystems.adb:164:36" (let temp___1431 = (let temp___1430 = { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content } in (
    ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train.rec__location((Trains__train.__split_fields(temp___1430)))) in (
     ()))
     end ;
    { ( temp___1430 ) with Trains__train.__split_fields = { ( (Trains__train.__split_fields(temp___1430)) ) with Trains__train.rec__location = (let temp___1429 = (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })) in (
     ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Trains__train_location.rec__track((Trains__train_location.__split_fields(temp___1429)))) in (
      ()))
      end ;
     { ( temp___1429 ) with Trains__train_location.__split_fields = { ( (Trains__train_location.__split_fields(temp___1429)) ) with Trains__train_location.rec__track = (let temp___1428 = (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))) in (
      ( #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (Tracks__track.rec__trainid((Tracks__track.__split_fields(temp___1428)))) in (
       ()))
       end ;
      { ( temp___1428 ) with Tracks__track.__split_fields = { ( (Tracks__track.__split_fields(temp___1428)) ) with Tracks__track.rec__trainid = (Standard__natural.of_rep 0) } } )))
      } } )))
     } } )))
    in (
    #"railsystems.adb" 164 0 0# Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1431)) )))
    );
   ( "GP_Sloc:railsystems.adb:165:24" (let temp___1432 = (Railsystems__getstationbyname__axiom.getstationbyname({ Railsystems__railsystem.__split_fields = Railsystems__preparetrain__r_system.r_system__split_fields.Railsystems__railsystem.__split_fields__content }) (Railsystems__preparetrain__origin.origin)) in (
    #"railsystems.adb" 165 0 0# Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1432)) )))
    );
   ( "GP_Sloc:railsystems.adb:167:34" (let temp___1434 = (let temp___1433 = { Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content } in (
    ( #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (Stations__station.rec__trainid((Stations__station.__split_fields(temp___1433)))) in (
     ()))
     end ;
    { ( temp___1433 ) with Stations__station.__split_fields = { ( (Stations__station.__split_fields(temp___1433)) ) with Stations__station.rec__trainid = (Standard__natural.of_rep (Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content }))))))) } } )))
    in (
    #"railsystems.adb" 167 0 0# Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content <- ( (Stations__station.__split_fields(temp___1434)) )))
    );
   ( "GP_Sloc:railsystems.adb:168:7" (if ((Boolean.andb((Boolean.andb(((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Stations__station.rec__id((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content })))))) < 101)))) (((Types__station_locations.to_rep((Stations__station.rec__location((Stations__station.__split_fields({ Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content })))))) <> 0)))) then (
    ( "GP_Sloc:railsystems.adb:169:10" ( #"railsystems.adb" 169 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:169:10" "GP_Id:50" "comment:         replaceStation(r_system, tempOriginStation);
         ^ railsystems.adb:169:10:VC_PRECONDITION" "GP_Shape:if__call_replacestation" (Railsystems__replacestation__axiom.replacestation(Railsystems__preparetrain__r_system.r_system__split_fields) ({ Stations__station.__split_fields = Railsystems__preparetrain__temporiginstation.temporiginstation__split_fields.Stations__station.__split_fields__content })) ) )) else (
    ())) );
   ( "GP_Sloc:railsystems.adb:171:7" (if ((Boolean.andb(((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))) > 0)) (((Standard__natural.to_rep((Trains__train.rec__id((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))) < 101)))) then (
    ( "GP_Sloc:railsystems.adb:172:13" ( #"railsystems.adb" 172 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_PRECONDITION" "GP_Sloc:railsystems.adb:172:13" "GP_Id:51" "comment:            replaceTrain(r_system => r_system,
            ^ railsystems.adb:172:13:VC_PRECONDITION" "GP_Shape:if__call_replacetrain" (Railsystems__replacetrain__axiom.replacetrain(Railsystems__preparetrain__r_system.r_system__split_fields) ({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })) ) )) else (
    ())) );
   #"railsystems.adb" 144 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:136 *)
  ;
  #"railsystems.adb" 144 0 0# abstract ensures {true}(let _ = (Boolean.andb((Boolean.andb(((Types__station_locations.to_rep((Trains__train.rec__origin((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))) = Railsystems__preparetrain__origin.origin)) (((Types__station_locations.to_rep((Trains__train.rec__destination((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))) = Railsystems__preparetrain__destination.destination)))) (((Types__train_state.to_rep((Trains__train.rec__state((Trains__train.__split_fields({ Trains__train.__split_fields = Railsystems__preparetrain__train.train__split_fields.Trains__train.__split_fields__content })))))) = 2))) in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "gettrainbyid" defined at railsystems.ads:168, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Railsystems__gettrainbyid__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural__axiom
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station
 use        Trains__train_location__T1s
 use        Trains__train_location__T4s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element_by_id__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrainbyid__r_system
 use        Railsystems__gettrainbyid__id
 use        Railsystems__gettrainbyid__train
 use        Temp___723
 use        Temp___724
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__natural__axiom
 use        Standard__positive__axiom
 use        Standard__character__axiom
 use        Railsystems__gettrainbyid__train__axiom
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrainbyid__r_system__axiom
 use        Railsystems__gettrainbyid__id__axiom
 use        Trains__train_location__axiom
 use        Trains__train__axiom
 use        Types__train_state__axiom
 use        Types__station_locations__axiom
 use        Types__timetable__axiom
 use        Tracks__track__axiom
 use        Stations__station__axiom
 use        Types__list_od__data__axiom
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr__T4s__axiom
 use        Stations__list_tracks__data__axiom
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr__T4s__axiom
 use        Trains__train_location__T1s__axiom
 use        Trains__train_location__T2s__axiom
 use        Trains__train_location__T4s__axiom
 use        Trains__train_location__T5s__axiom
 use        Railsystems__list_trains__get_size__axiom
 use        Railsystems__list_trains__get_element_by_id__axiom
 use        Railsystems__list_trains__data__axiom
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__no_found__axiom
 use        Railsystems__list_trains__list_ptr__T4s__axiom
 use        Railsystems__list_stations__data__axiom
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr__T9s__axiom

 val railsystems__gettrainbyid__result #"trains.ads" 17 0 0# "model_projected" "model_trace:6286@result"  : Trains__train.train__ref 
 
 let def #"trains.ads" 17 0 0# "W:diverges:N" "GP_Subp:railsystems.ads:168" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram railsystems.ads:168 *)
  ;
  #"railsystems.ads" 29 0 0# assume { (Railsystems__railsystem__axiom.dynamic_invariant Railsystems__gettrainbyid__r_system.r_system True False True) };
  #"system.ads" 1 0 0# assume { (Standard__natural__axiom.dynamic_invariant Railsystems__gettrainbyid__id.id True False True) };
  #"list.ads" 22 0 0# assume { (Railsystems__list_trains__data_type__axiom.dynamic_invariant Railsystems__list_trains__no_found.no_found True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram railsystems.ads:168 *)
  ;
  () (* Check for RTE in the Pre of the subprogram railsystems.ads:168 *)
  ;
  #"list.ads" 25 0 0# abstract ensures {true}(let _ = (Boolean.andb((Railsystems__gettrainbyid__id.id >= 1)) ((Railsystems__gettrainbyid__id.id <= (Railsystems__list_trains__get_size__axiom.get_size((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields(Railsystems__gettrainbyid__r_system.r_system))))))))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram railsystems.ads:168 *)
  ;
  #"railsystems.ads" 168 0 0# assume { ( (Railsystems__gettrainbyid__id.id >= 1) /\ (Railsystems__gettrainbyid__id.id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields Railsystems__gettrainbyid__r_system.r_system)))) ) };
  () (* checking of pragma precondition railsystems.ads:168 *)
  ;
  try
   ( #"railsystems.ads" 168 0 0# abstract ensures {true}(let _ = #"railsystems.adb" 284 0 0# abstract ensures {true}(let _ = (let temp___1438 = #"trains.ads" 17 0 0# (any Trains__train.train
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Trains__train.id__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.location__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = (let temp___1439 = #"trains.ads" 9 0 0# (any Trains__train_location.train_location
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Trains__train_location.currentlocation__pred(temp___1439))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 11 0 0# assert { ( #"trains.ads" 11 0 0# "model_vc" "keep_on_simp" "GP_Sloc:trains.ads:11:40" "GP_Reason:VC_LENGTH_CHECK" "comment:         currentLocation:String(1..7):=\"None   \";
                                       ^ trains.ads:11:40:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Id:53" ((if ((1 <= 7)) then (
        ((7 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T1s.first <= Trains__train_location__T1s.last)) then (
        ((Trains__train_location__T1s.last - Trains__train_location__T1s.first) + 1)) else (
        0))) ) };
       Temp___723.temp___723 ) in (
        ()))
        end ));
      (if ((Trains__train_location.none__pred(temp___1439))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = ( #"trains.ads" 12 0 0# assert { ( #"trains.ads" 12 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:train_location_def" "GP_Sloc:trains.ads:12:30" "comment:         None: String(1..4):=\"None\";
                             ^ trains.ads:12:30:VC_LENGTH_CHECK" "GP_Id:54" ((if ((1 <= 4)) then (
        ((4 - 1) + 1)) else (
        0)) = (if ((Trains__train_location__T4s.first <= Trains__train_location__T4s.last)) then (
        ((Trains__train_location__T4s.last - Trains__train_location__T4s.first) + 1)) else (
        0))) ) };
       Temp___724.temp___724 ) in (
        ()))
        end ));
      (if ((Trains__train_location.track__pred(temp___1439))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1440 = #"tracks.ads" 7 0 0# (any Tracks__track.track
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Tracks__track.id__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.origin__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.destination__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trainid__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslineorigin__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Tracks__track.trackslinedestination__pred(temp___1440))) then (
         #"tracks.ads" 7 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end )) )))
        in (
        ()))
        end ));
      (if ((Trains__train_location.station__pred(temp___1439))) then (
       #"trains.ads" 9 0 0# abstract ensures {true}(let _ = (let temp___1441 = #"stations.ads" 18 0 0# (any Stations__station.station
       requires {true} 
       ensures {true} 
       ) in (
        ( (if ((Stations__station.id__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.location__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.trainid__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = 0 in (
          ()))
          end ));
        (if ((Stations__station.incoming__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1442 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1442))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1442))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1443 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1443))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1444 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1444))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1443))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1442))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1442))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.outgoing__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1445 = #"list.ads" 105 0 0# (any Stations__list_tracks__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Stations__list_tracks__list_ptr.size__pred(temp___1445))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.elements__pred(temp___1445))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Stations__list_tracks__list_ptr__T4s.first <= Stations__list_tracks__list_ptr__T4s.last)) then (
            ((Stations__list_tracks__list_ptr__T4s.last - Stations__list_tracks__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1446 = #"list.ads" 95 0 0# (any Stations__list_tracks__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Stations__list_tracks__data.data__pred(temp___1446))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1447 = #"list.ads" 22 0 0# (any Stations__list_tracks__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Stations__list_tracks__data_type.id__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.origin__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.destination__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trainid__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslineorigin__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Stations__list_tracks__data_type.trackslinedestination__pred(temp___1447))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Stations__list_tracks__data.id__pred(temp___1446))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.head__pred(temp___1445))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Stations__list_tracks__list_ptr.list_max_size__pred(temp___1445))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end ));
        (if ((Stations__station.trackslineoriginanddestination__pred(temp___1441))) then (
         #"stations.ads" 18 0 0# abstract ensures {true}(let _ = (let temp___1448 = #"list.ads" 105 0 0# (any Types__list_od__list_ptr.list_ptr
         requires {true} 
         ensures {true} 
         ) in (
          ( (if ((Types__list_od__list_ptr.size__pred(temp___1448))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 0 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.elements__pred(temp___1448))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = (if (((if ((Types__list_od__list_ptr__T4s.first <= Types__list_od__list_ptr__T4s.last)) then (
            ((Types__list_od__list_ptr__T4s.last - Types__list_od__list_ptr__T4s.first) + 1)) else (
            0)) > 0)) then (
            #"list.ads" 108 0 0# abstract ensures {true}(let _ = (let temp___1449 = #"list.ads" 95 0 0# (any Types__list_od__data.data
            requires {true} 
            ensures {true} 
            ) in (
             ( (if ((Types__list_od__data.data__pred(temp___1449))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = (let temp___1450 = #"list.ads" 22 0 0# (any Types__list_od__data_type.data_type
              requires {true} 
              ensures {true} 
              ) in (
               ( (if ((Types__list_od__data_type.origin__pred(temp___1450))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end ));
               (if ((Types__list_od__data_type.destination__pred(temp___1450))) then (
                #"list.ads" 22 0 0# abstract ensures {true}(let _ = 0 in (
                 ()))
                 end )) )))
               in (
               ()))
               end ));
             (if ((Types__list_od__data.id__pred(temp___1449))) then (
              #"list.ads" 95 0 0# abstract ensures {true}(let _ = 0 in (
               ()))
               end )) )))
             in (
             ()))
             end )) in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.head__pred(temp___1448))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 1 in (
            ()))
            end ));
          (if ((Types__list_od__list_ptr.list_max_size__pred(temp___1448))) then (
           #"list.ads" 105 0 0# abstract ensures {true}(let _ = 100 in (
            ()))
            end )) )))
          in (
          ()))
          end )) )))
        in (
        ()))
        end )) )))
      in (
      ()))
      end ));
    (if ((Trains__train.origin__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.destination__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end ));
    (if ((Trains__train.state__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 3 in (
      ()))
      end ));
    (if ((Trains__train.start_run_time__pred(temp___1438))) then (
     #"trains.ads" 17 0 0# abstract ensures {true}(let _ = 0 in (
      ()))
      end )) )))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"railsystems.adb" 284 0 0# assume { (Trains__train__axiom.default_initial_assumption { Trains__train.__split_fields = Railsystems__gettrainbyid__train.train__split_fields.Trains__train.__split_fields__content } False) };
   #"trains.ads" 17 0 0# assume { (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = Railsystems__gettrainbyid__train.train__split_fields.Trains__train.__split_fields__content } False False True) };
   ( "GP_Sloc:railsystems.adb:286:12" (let temp___1452 = (Railsystems__list_trains__data_type.to_base((Railsystems__list_trains__get_element_by_id__axiom.get_element_by_id((Railsystems__railsystem.rec__all_trains((Railsystems__railsystem.__split_fields(Railsystems__gettrainbyid__r_system.r_system))))) (Railsystems__gettrainbyid__id.id)))) in (
    #"railsystems.adb" 286 0 0# Railsystems__gettrainbyid__train.train__split_fields.Trains__train.__split_fields__content <- ( (Trains__train.__split_fields(temp___1452)) )))
    );
   ( "GP_Sloc:railsystems.adb:287:7" ( #"railsystems.adb" 287 0 0# railsystems__gettrainbyid__result.Trains__train.train__content <- ( { Trains__train.__split_fields = Railsystems__gettrainbyid__train.train__split_fields.Trains__train.__split_fields__content } );
   #"railsystems.adb" 287 0 0# raise Return__exc ) );
   #"railsystems.adb" 280 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition railsystems.ads:168 *)
  ;
  #"railsystems.adb" 280 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  railsystems__gettrainbyid__result.Trains__train.train__content )
end
