(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "status" defined at aunit.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__status
 use import "_gnatprove_standard".Main
 use import "int".Int

 type status #"aunit.ads" 40 0 0# 
 
 function first #"aunit.ads" 40 0 0# 
   : int =
  0
 
 function last #"aunit.ads" 40 0 0# 
   : int =
  1
 
 predicate in_range #"aunit.ads" 40 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = status, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type status__ref #"aunit.ads" 40 0 0# =
  { mutable status__content "model_trace:" : status }
 
 function status__ref___projection #"aunit.ads" 40 0 0# 
   (a : status__ref) : status =
  a.status__content
 
 meta "model_projection" function status__ref___projection
 
 meta "inline : no" function status__ref___projection
 
 val status__havoc #"aunit.ads" 40 0 0# 
   (x : status__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at aunit.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__format__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"aunit.ads" 44 0 0# "model_projected" "model_trace:2454" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at aunit.ads:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__format__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "length" defined at aunit.ads:45, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__message_alloc__length
 use import "_gnatprove_standard".Main

 function length #"aunit.ads" 45 0 0# "model" "model_trace:2473" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "length" defined at aunit.ads:45, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__message_alloc__length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "hash_type" defined at ada_containers.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__hash_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type hash_type #"ada_containers.ads" 19 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"ada_containers.ads" 19 0 0# 
   : BV32.t
 
 function first #"ada_containers.ads" 19 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"ada_containers.ads" 19 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"ada_containers.ads" 19 0 0# 
   : int =
  0
 
 function last_int #"ada_containers.ads" 19 0 0# 
   : int =
  4294967295
 
 predicate in_range #"ada_containers.ads" 19 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"ada_containers.ads" 19 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = hash_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type hash_type__ref #"ada_containers.ads" 19 0 0# =
  { mutable hash_type__content "model_trace:" : hash_type }
 
 function hash_type__ref___projection #"ada_containers.ads" 19 0 0# 
   (a : hash_type__ref) : hash_type =
  a.hash_type__content
 
 meta "model_projection" function hash_type__ref___projection
 
 meta "inline : no" function hash_type__ref___projection
 
 val hash_type__havoc #"ada_containers.ads" 19 0 0# 
   (x : hash_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tcount_typeB" defined at ada_containers.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__Tcount_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcount_typeB #"ada_containers.ads" 20 0 0# 
 
 function first #"ada_containers.ads" 20 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"ada_containers.ads" 20 0 0# 
   : int =
  2147483647
 
 predicate in_range #"ada_containers.ads" 20 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcount_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tcount_typeB__ref #"ada_containers.ads" 20 0 0# =
  { mutable tcount_typeB__content "model_trace:" : tcount_typeB }
 
 function tcount_typeB__ref___projection #"ada_containers.ads" 20 0 0# 
   (a : tcount_typeB__ref) : tcount_typeB =
  a.tcount_typeB__content
 
 meta "model_projection" function tcount_typeB__ref___projection
 
 meta "inline : no" function tcount_typeB__ref___projection
 
 val tcount_typeB__havoc #"ada_containers.ads" 20 0 0# 
   (x : tcount_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "count_type" defined at ada_containers.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Ada_containers__count_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count_type #"ada_containers.ads" 20 0 0# 
 
 function first #"ada_containers.ads" 20 0 0# 
   : int =
  0
 
 function last #"ada_containers.ads" 20 0 0# 
   : int =
  2147483647
 
 predicate in_range #"ada_containers.ads" 20 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type count_type__ref #"ada_containers.ads" 20 0 0# =
  { mutable count_type__content "model_trace:" : count_type }
 
 function count_type__ref___projection #"ada_containers.ads" 20 0 0# 
   (a : count_type__ref) : count_type =
  a.count_type__content
 
 meta "model_projection" function count_type__ref___projection
 
 meta "inline : no" function count_type__ref___projection
 
 val count_type__havoc #"ada_containers.ads" 20 0 0# 
   (x : count_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test" defined at aunit-tests.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Aunit__tests__test
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"ada_containers.ads" 20 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields___projection #"ada_containers.ads" 20 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields___projection
 
 meta "inline : no" function __split_fields___projection
 
 type __split_fields__ref #"ada_containers.ads" 20 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"ada_containers.ads" 20 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"ada_containers.ads" 20 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test #"aunit-tests.ads" 43 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test___projection #"aunit-tests.ads" 43 0 0# 
   (a : test) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test___projection
 
 meta "inline : no" function test___projection
 
 function test_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : test) : int =
  a.attr__tag
 
 meta "model_projection" function test_2__projection
 
 meta "inline : no" function test_2__projection
 
 function user_eq #"aunit-tests.ads" 43 0 0# 
   (a : test) (b : test) : bool
 
 function __dispatch_eq #"aunit-tests.ads" 43 0 0# 
   (a : test) (b : test) : bool
 
 function __tag #"aunit-tests.ads" 43 0 0# 
   : int
 
 function value__size #"aunit-tests.ads" 43 0 0# 
   : int
 
 function object__size #"aunit-tests.ads" 43 0 0# 
   (a : test) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test.
   ((object__size a) >= 0))
 
 function dummy #"aunit-tests.ads" 43 0 0# 
   : test
 
 type test__ref #"aunit-tests.ads" 43 0 0# =
  { mutable test__content "model_trace:" : test }
 
 function test__ref___projection #"aunit-tests.ads" 43 0 0# 
   (a : test__ref) : test =
  a.test__content
 
 meta "model_projection" function test__ref___projection
 
 meta "inline : no" function test__ref___projection
 
 val test__havoc #"aunit-tests.ads" 43 0 0# 
   (x : test__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TtestC" defined at aunit-tests.ads:38, created in Gnat2Why.Types.Translate_Type *)
module Aunit__tests__TtestC
 use export Aunit__tests__test
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "test_filter" defined at aunit-test_filters.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__test_filter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-tests.ads" 43 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_2__projection
 
 meta "inline : no" function __split_fields_2__projection
 
 type __split_fields__ref #"aunit-tests.ads" 43 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"aunit-tests.ads" 43 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test_filter #"aunit-test_filters.ads" 70 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_filter___projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_filter___projection
 
 meta "inline : no" function test_filter___projection
 
 function test_filter_2__projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : int =
  a.attr__tag
 
 meta "model_projection" function test_filter_2__projection
 
 meta "inline : no" function test_filter_2__projection
 
 function user_eq #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) (b : test_filter) : bool
 
 function __dispatch_eq #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) (b : test_filter) : bool
 
 function __tag #"aunit-test_filters.ads" 70 0 0# 
   : int
 
 function value__size #"aunit-test_filters.ads" 70 0 0# 
   : int
 
 function object__size #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test_filter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_filters.ads" 70 0 0# 
   : test_filter
 
 type test_filter__ref #"aunit-test_filters.ads" 70 0 0# =
  { mutable test_filter__content "model_trace:" : test_filter }
 
 function test_filter__ref___projection #"aunit-test_filters.ads" 70 0 0# 
   (a : test_filter__ref) : test_filter =
  a.test_filter__content
 
 meta "model_projection" function test_filter__ref___projection
 
 meta "inline : no" function test_filter__ref___projection
 
 val test_filter__havoc #"aunit-test_filters.ads" 70 0 0# 
   (x : test_filter__ref) : unit
  writes {x}

end

(* Module for defining the constant "filter" defined at aunit-test_filters.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 function filter #"aunit-test_filters.ads" 43 0 0# "model_projected" "model_trace:4404" 
   : Aunit__test_filters__test_filter.test_filter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:43, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_filters.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__t
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 function t #"aunit-test_filters.ads" 44 0 0# "model_projected" "model_trace:4413" 
   : Aunit__tests__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-tests.ads" 43 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_filters.ads:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_active" defined at aunit-test_filters.ads:42, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__is_active
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__test_filter

 function is_active #"aunit-test_filters.ads" 42 0 0# 
   (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
 
 namespace Dispatch
  function is_active #"aunit-test_filters.ads" 42 0 0# 
    (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool

 end

end

(* Module for axiomatizing type "name_filter" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__name_filter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 type __split_fields #"aunit-tests.ads" 43 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_3__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_3__projection
 
 meta "inline : no" function __split_fields_3__projection
 
 function __split_fields_4__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_4__projection
 
 meta "inline : no" function __split_fields_4__projection
 
 type __split_fields__ref #"aunit-tests.ads" 43 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"aunit-tests.ads" 43 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"aunit-tests.ads" 43 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type name_filter #"aunit-test_filters.ads" 48 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function name_filter___projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function name_filter___projection
 
 meta "inline : no" function name_filter___projection
 
 function name_filter_2__projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : int =
  a.attr__tag
 
 meta "model_projection" function name_filter_2__projection
 
 meta "inline : no" function name_filter_2__projection
 
 function hide_ext__ #"aunit-test_filters.ads" 48 0 0# 
   (rec__ext__ : Main.__private) (rec__main__ : Main.__private) : Main.__private
 
 function extract__ext__ #"aunit-test_filters.ads" 48 0 0# 
   (x : Main.__private) : Main.__private
 
 function extract__main__ #"aunit-test_filters.ads" 48 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : Aunit__test_filters__test_filter.test_filter =
  { Aunit__test_filters__test_filter.__split_fields = { Aunit__test_filters__test_filter.rec__ext__ = (hide_ext__ a.__split_fields.rec__ext__ a.__split_fields.rec__main__) }; Aunit__test_filters__test_filter.attr__tag = a.attr__tag }
 
 function of_base #"aunit-test_filters.ads" 70 0 0# 
   (r : Aunit__test_filters__test_filter.test_filter) : name_filter =
  { __split_fields = { rec__ext__ = (extract__ext__ r.Aunit__test_filters__test_filter.__split_fields.Aunit__test_filters__test_filter.rec__ext__); rec__main__ = (extract__main__ r.Aunit__test_filters__test_filter.__split_fields.Aunit__test_filters__test_filter.rec__ext__) }; attr__tag = r.Aunit__test_filters__test_filter.attr__tag }
 
 function user_eq #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) (b : name_filter) : bool
 
 function __tag #"aunit-test_filters.ads" 48 0 0# 
   : int
 
 function value__size #"aunit-test_filters.ads" 48 0 0# 
   : int
 
 function object__size #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : name_filter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_filters.ads" 48 0 0# 
   : name_filter
 
 type name_filter__ref #"aunit-test_filters.ads" 48 0 0# =
  { mutable name_filter__content "model_trace:" : name_filter }
 
 function name_filter__ref___projection #"aunit-test_filters.ads" 48 0 0# 
   (a : name_filter__ref) : name_filter =
  a.name_filter__content
 
 meta "model_projection" function name_filter__ref___projection
 
 meta "inline : no" function name_filter__ref___projection
 
 val name_filter__havoc #"aunit-test_filters.ads" 48 0 0# 
   (x : name_filter__ref) : unit
  writes {x}

end

(* Module for defining the constant "name" defined at aunit-test_filters.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__set_name__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"aunit-test_filters.ads" 52 0 0# "model_projected" "model_trace:4457" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at aunit-test_filters.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__set_name__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filter" defined at aunit-test_filters.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__2__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 function filter #"aunit-test_filters.ads" 65 0 0# "model_projected" "model_trace:4475" 
   : Aunit__test_filters__name_filter.name_filter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__2__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_filters.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_filters__is_active__2__t
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 function t #"aunit-test_filters.ads" 66 0 0# "model_projected" "model_trace:4484" 
   : Aunit__tests__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-tests.ads" 43 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_filters.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__is_active__2__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttest_filterC" defined at aunit-test_filters.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__Ttest_filterC
 use export Aunit__test_filters__test_filter
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tname_filterC" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_filters__Tname_filterC
 use export Aunit__test_filters__name_filter
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "file" defined at g-souinf.ads:49, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__file
 use import "_gnatprove_standard".Main
 use        Standard__string

 function file #"g-souinf.ads" 49 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "line" defined at g-souinf.ads:54, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__line
 use import "_gnatprove_standard".Main

 function line #"g-souinf.ads" 54 0 0# 
   (__void_param : unit) : int

end

(* Module for possibly declaring a logic function for "source_location" defined at g-souinf.ads:59, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__source_location
 use import "_gnatprove_standard".Main
 use        Standard__string

 function source_location #"g-souinf.ads" 59 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "enclosing_entity" defined at g-souinf.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__enclosing_entity
 use import "_gnatprove_standard".Main
 use        Standard__string

 function enclosing_entity #"g-souinf.ads" 68 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "compilation_iso_date" defined at g-souinf.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__compilation_iso_date
 use import "_gnatprove_standard".Main
 use        Standard__string

 function compilation_iso_date #"g-souinf.ads" 82 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "compilation_date" defined at g-souinf.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__compilation_date
 use import "_gnatprove_standard".Main
 use        Standard__string

 function compilation_date #"g-souinf.ads" 86 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "compilation_time" defined at g-souinf.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__source_info__compilation_time
 use import "_gnatprove_standard".Main
 use        Standard__string

 function compilation_time #"g-souinf.ads" 91 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for axiomatizing type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__time
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"system.ads" 1 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_5__projection #"system.ads" 1 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_5__projection
 
 meta "inline : no" function __split_fields_5__projection
 
 type __split_fields__ref #"system.ads" 1 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"system.ads" 1 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"system.ads" 1 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type time #"a-calend.ads" 44 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function time___projection #"a-calend.ads" 44 0 0# 
   (a : time) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function time___projection
 
 meta "inline : no" function time___projection
 
 function bool_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"a-calend.ads" 44 0 0# 
   (a : time) (b : time) : bool
 
 function value__size #"a-calend.ads" 44 0 0# 
   : int
 
 function object__size #"a-calend.ads" 44 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 function dummy #"a-calend.ads" 44 0 0# 
   : time
 
 type time__ref #"a-calend.ads" 44 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref___projection #"a-calend.ads" 44 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref___projection
 
 meta "inline : no" function time__ref___projection
 
 val time__havoc #"a-calend.ads" 44 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__year_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type year_number #"a-calend.ads" 50 0 0# 
 
 function first #"a-calend.ads" 50 0 0# 
   : int =
  1901
 
 function last #"a-calend.ads" 50 0 0# 
   : int =
  2399
 
 predicate in_range #"a-calend.ads" 50 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = year_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type year_number__ref #"a-calend.ads" 50 0 0# =
  { mutable year_number__content "model_trace:" : year_number }
 
 function year_number__ref___projection #"a-calend.ads" 50 0 0# 
   (a : year_number__ref) : year_number =
  a.year_number__content
 
 meta "model_projection" function year_number__ref___projection
 
 meta "inline : no" function year_number__ref___projection
 
 val year_number__havoc #"a-calend.ads" 50 0 0# 
   (x : year_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__month_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type month_number #"a-calend.ads" 51 0 0# 
 
 function first #"a-calend.ads" 51 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 51 0 0# 
   : int =
  12
 
 predicate in_range #"a-calend.ads" 51 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = month_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type month_number__ref #"a-calend.ads" 51 0 0# =
  { mutable month_number__content "model_trace:" : month_number }
 
 function month_number__ref___projection #"a-calend.ads" 51 0 0# 
   (a : month_number__ref) : month_number =
  a.month_number__content
 
 meta "model_projection" function month_number__ref___projection
 
 meta "inline : no" function month_number__ref___projection
 
 val month_number__havoc #"a-calend.ads" 51 0 0# 
   (x : month_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_number
 use import "_gnatprove_standard".Main
 use import "int".Int

 type day_number #"a-calend.ads" 52 0 0# 
 
 function first #"a-calend.ads" 52 0 0# 
   : int =
  1
 
 function last #"a-calend.ads" 52 0 0# 
   : int =
  31
 
 predicate in_range #"a-calend.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = day_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type day_number__ref #"a-calend.ads" 52 0 0# =
  { mutable day_number__content "model_trace:" : day_number }
 
 function day_number__ref___projection #"a-calend.ads" 52 0 0# 
   (a : day_number__ref) : day_number =
  a.day_number__content
 
 meta "model_projection" function day_number__ref___projection
 
 meta "inline : no" function day_number__ref___projection
 
 val day_number__havoc #"a-calend.ads" 52 0 0# 
   (x : day_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Ada__calendar__day_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type day_duration #"a-calend.ads" 56 0 0# 
 
 function inv_small #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  0
 
 function last #"a-calend.ads" 56 0 0# 
   : Main.__fixed =
  86400000000000
 
 predicate in_range #"a-calend.ads" 56 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = day_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type day_duration__ref #"a-calend.ads" 56 0 0# =
  { mutable day_duration__content "model_trace:" : day_duration }
 
 function day_duration__ref___projection #"a-calend.ads" 56 0 0# 
   (a : day_duration__ref) : day_duration =
  a.day_duration__content
 
 meta "model_projection" function day_duration__ref___projection
 
 meta "inline : no" function day_duration__ref___projection
 
 val day_duration__havoc #"a-calend.ads" 56 0 0# 
   (x : day_duration__ref) : unit
  writes {x}

end

(* Module for defining the constant "date" defined at a-calend.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__year__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 66 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__year__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__year
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__month__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 67 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__month__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__month
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__day__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 68 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__day__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__day
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int

end

(* Module for defining the constant "date" defined at a-calend.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__seconds__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 69 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__seconds__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration

end

(* Module for defining the constant "date" defined at a-calend.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__split__date
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function date #"a-calend.ads" 72 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "date" defined at a-calend.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__date__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "year" defined at a-calend.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__year
 use import "_gnatprove_standard".Main

 function year #"a-calend.ads" 83 0 0# "model" "model_trace:6846" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "month" defined at a-calend.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__month
 use import "_gnatprove_standard".Main

 function month #"a-calend.ads" 84 0 0# "model" "model_trace:6855" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "day" defined at a-calend.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__day
 use import "_gnatprove_standard".Main

 function day #"a-calend.ads" 85 0 0# "model" "model_trace:6864" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "seconds" defined at a-calend.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__time_of__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 function seconds #"a-calend.ads" 86 0 0# "model_projected" "model_trace:6873" 
   : Ada__calendar__day_duration.day_duration
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__time_of__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__time_of
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 102 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 102 0 0# "model_projected" "model_trace:6902" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__left
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function left #"a-calend.ads" 103 0 0# "model_projected" "model_trace:6921" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 103 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oadd__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oadd__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 104 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__right
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function right #"a-calend.ads" 104 0 0# "model_projected" "model_trace:6958" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time

end

(* Module for defining the constant "left" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 105 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Osubtract__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Osubtract__2
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time

 function osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration

end

(* Module for defining the constant "left" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Olt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 111 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Olt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ole__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 112 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ole
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Ogt__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 113 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Ogt
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for defining the constant "left" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__left
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function left #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-calend.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__calendar__Oge__right
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function right #"a-calend.ads" 114 0 0# 
   : Ada__calendar__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-calend.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__Oge
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 function oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool

end

(* Module for axiomatizing type "time" defined at aunit-time_measure.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__time
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__time

 type __split_fields #"a-calend.ads" 44 0 0# =
  { rec__start "model_trace:.6332" : Ada__calendar__time.time; rec__stop "model_trace:.6346" : Ada__calendar__time.time }
 
 function __split_fields_Start__projection #"a-calend.ads" 44 0 0# "model_trace:.6332" 
   (a : __split_fields) : Ada__calendar__time.time =
  a.rec__start
 
 meta "model_projection" function __split_fields_Start__projection
 
 meta "inline : no" function __split_fields_Start__projection
 
 function __split_fields_Stop__projection #"aunit-time_measure.ads" 36 0 0# "model_trace:.6346" 
   (a : __split_fields) : Ada__calendar__time.time =
  a.rec__stop
 
 meta "model_projection" function __split_fields_Stop__projection
 
 meta "inline : no" function __split_fields_Stop__projection
 
 type __split_fields__ref #"aunit-time_measure.ads" 36 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"aunit-time_measure.ads" 36 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type time #"aunit-time_measure.ads" 36 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function time_2__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function time_2__projection
 
 meta "inline : no" function time_2__projection
 
 predicate start__pred #"aunit-time_measure.ads" 36 0 0# 
   (a : time)  =
  true
 
 val rec__start_ #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : Ada__calendar__time.time
  requires { (start__pred a) }
  ensures { (result = a.__split_fields.rec__start) }
 
 predicate stop__pred #"aunit-time_measure.ads" 36 0 0# 
   (a : time)  =
  true
 
 val rec__stop_ #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : Ada__calendar__time.time
  requires { (stop__pred a) }
  ensures { (result = a.__split_fields.rec__stop) }
 
 function bool_eq #"aunit-time_measure.ads" 36 0 0# 
   (a : time) (b : time) : bool =
  (if (( ((Ada__calendar__time.bool_eq a.__split_fields.rec__start b.__split_fields.rec__start) = True) /\ ((Ada__calendar__time.bool_eq a.__split_fields.rec__stop b.__split_fields.rec__stop) = True) )) then (
   True) else (
   False))
 
 function user_eq #"aunit-time_measure.ads" 36 0 0# 
   (a : time) (b : time) : bool
 
 function value__size #"aunit-time_measure.ads" 36 0 0# 
   : int
 
 function object__size #"aunit-time_measure.ads" 36 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 function dummy #"aunit-time_measure.ads" 36 0 0# 
   : time
 
 type time__ref #"aunit-time_measure.ads" 36 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref_2__projection #"aunit-time_measure.ads" 36 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref_2__projection
 
 meta "inline : no" function time__ref_2__projection
 
 val time__havoc #"aunit-time_measure.ads" 36 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Taunit_durationB" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__Taunit_durationB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type taunit_durationB #"aunit-time_measure.ads" 70 0 0# 
 
 function inv_small #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"aunit-time_measure.ads" 70 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = taunit_durationB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type taunit_durationB__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable taunit_durationB__content "model_trace:" : taunit_durationB }
 
 function taunit_durationB__ref___projection #"aunit-time_measure.ads" 70 0 0# 
   (a : taunit_durationB__ref) : taunit_durationB =
  a.taunit_durationB__content
 
 meta "model_projection" function taunit_durationB__ref___projection
 
 meta "inline : no" function taunit_durationB__ref___projection
 
 val taunit_durationB__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : taunit_durationB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "aunit_duration" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Aunit__time_measure__aunit_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type aunit_duration #"aunit-time_measure.ads" 70 0 0# 
 
 function inv_small #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"aunit-time_measure.ads" 70 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"aunit-time_measure.ads" 70 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = aunit_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type aunit_duration__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable aunit_duration__content "model_trace:" : aunit_duration }
 
 function aunit_duration__ref___projection #"aunit-time_measure.ads" 70 0 0# 
   (a : aunit_duration__ref) : aunit_duration =
  a.aunit_duration__content
 
 meta "model_projection" function aunit_duration__ref___projection
 
 meta "inline : no" function aunit_duration__ref___projection
 
 val aunit_duration__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : aunit_duration__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_time" defined at aunit-time_measure.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__time_measure__null_time
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function null_time #"aunit-time_measure.ads" 43 0 0# "model_projected" "model_trace:6370" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module for defining the constant "t" defined at aunit-time_measure.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__time_measure__get_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function t #"aunit-time_measure.ads" 52 0 0# "model_projected" "model_trace:6445" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__get_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_measure" defined at aunit-time_measure.ads:52, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__get_measure
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__aunit_duration

 function get_measure #"aunit-time_measure.ads" 52 0 0# 
   (t : Aunit__time_measure__time.time) : Aunit__time_measure__aunit_duration.aunit_duration

end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-time_measure.ads" 70 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_6__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_6__projection
 
 meta "inline : no" function __split_fields_6__projection
 
 function __split_fields_7__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_7__projection
 
 meta "inline : no" function __split_fields_7__projection
 
 type __split_fields__ref #"aunit-time_measure.ads" 70 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"aunit-time_measure.ads" 70 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"aunit-time_measure.ads" 70 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list___projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list___projection
 
 meta "inline : no" function list___projection
 
 function list_2__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_2__projection
 
 meta "inline : no" function list_2__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref___projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref___projection
 
 meta "inline : no" function list__ref___projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "result" defined at aunit-test_results.ads:140, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type
 use        Aunit__time_measure__time
 use        Aunit__test_results__result_lists__list

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__tests_run "model_trace:.6263" : Ada_containers__count_type.count_type; rec__result_list "model_trace:.6274" : Aunit__test_results__result_lists__list.list; rec__elapsed_time "model_trace:.6286" : Aunit__time_measure__time.time; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_Tests_Run__projection #"aunit-time_measure.ads" 36 0 0# "model_trace:.6263" 
   (a : __split_fields) : Ada_containers__count_type.count_type =
  a.rec__tests_run
 
 meta "model_projection" function __split_fields_Tests_Run__projection
 
 meta "inline : no" function __split_fields_Tests_Run__projection
 
 function __split_fields_Result_List__projection #"aunit-test_results.ads" 140 0 0# "model_trace:.6274" 
   (a : __split_fields) : Aunit__test_results__result_lists__list.list =
  a.rec__result_list
 
 meta "model_projection" function __split_fields_Result_List__projection
 
 meta "inline : no" function __split_fields_Result_List__projection
 
 function __split_fields_Elapsed_Time__projection #"aunit-test_results.ads" 140 0 0# "model_trace:.6286" 
   (a : __split_fields) : Aunit__time_measure__time.time =
  a.rec__elapsed_time
 
 meta "model_projection" function __split_fields_Elapsed_Time__projection
 
 meta "inline : no" function __split_fields_Elapsed_Time__projection
 
 function __split_fields_8__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_8__projection
 
 meta "inline : no" function __split_fields_8__projection
 
 type __split_fields__ref #"aunit-test_results.ads" 140 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"aunit-test_results.ads" 140 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type result__ #"aunit-test_results.ads" 140 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function result_____projection #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function result_____projection
 
 meta "inline : no" function result_____projection
 
 function result___2__projection #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : int =
  a.attr__tag
 
 meta "model_projection" function result___2__projection
 
 meta "inline : no" function result___2__projection
 
 predicate tests_run__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__tests_run_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Ada_containers__count_type.count_type
  requires { (tests_run__pred a) }
  ensures { (result = a.__split_fields.rec__tests_run) }
 
 predicate result_list__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__result_list_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Aunit__test_results__result_lists__list.list
  requires { (result_list__pred a) }
  ensures { (result = a.__split_fields.rec__result_list) }
 
 predicate elapsed_time__pred #"aunit-test_results.ads" 140 0 0# 
   (a : result__)  =
  true
 
 val rec__elapsed_time_ #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : Aunit__time_measure__time.time
  requires { (elapsed_time__pred a) }
  ensures { (result = a.__split_fields.rec__elapsed_time) }
 
 function user_eq #"aunit-test_results.ads" 140 0 0# 
   (a : result__) (b : result__) : bool
 
 function __dispatch_eq #"aunit-test_results.ads" 140 0 0# 
   (a : result__) (b : result__) : bool
 
 function __tag #"aunit-test_results.ads" 140 0 0# 
   : int
 
 function value__size #"aunit-test_results.ads" 140 0 0# 
   : int
 
 function object__size #"aunit-test_results.ads" 140 0 0# 
   (a : result__) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : result__.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_results.ads" 140 0 0# 
   : result__
 
 type result____ref #"aunit-test_results.ads" 140 0 0# =
  { mutable result____content "model_trace:" : result__ }
 
 function result____ref___projection #"aunit-test_results.ads" 140 0 0# 
   (a : result____ref) : result__ =
  a.result____content
 
 meta "model_projection" function result____ref___projection
 
 meta "inline : no" function result____ref___projection
 
 val result____havoc #"aunit-test_results.ads" 140 0 0# 
   (x : result____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-test_results.ads" 140 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_9__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_9__projection
 
 meta "inline : no" function __split_fields_9__projection
 
 type __split_fields__ref #"aunit-test_results.ads" 140 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"aunit-test_results.ads" 140 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"aunit-test_results.ads" 140 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor___projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor___projection
 
 meta "inline : no" function cursor___projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref___projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref___projection
 
 meta "inline : no" function cursor__ref___projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:13910" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:13919" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:13938" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:13957" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:14103" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:14158" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:14204" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:14241" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:14278" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:14315" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:14343" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:14371" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:14597" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__cursor

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:14616" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:14635" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__cursor

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:14654" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:14747" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:14785" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:14823" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__test_results__result_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__result_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:14888" 
   : Aunit__test_results__result_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__result_lists__TlistC
 use export Aunit__test_results__result_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_error__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 81 0 0# "model_projected" "model_trace:5860" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_error__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_failure__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 89 0 0# "model_projected" "model_trace:5914" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_failure__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "elapsed" defined at aunit-test_results.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__add_success__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function elapsed #"aunit-test_results.ads" 96 0 0# "model_projected" "model_trace:5959" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at aunit-test_results.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_success__elapsed__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-test_results.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__set_elapsed__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 function t #"aunit-test_results.ads" 99 0 0# "model_projected" "model_trace:5986" 
   : Aunit__time_measure__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_results.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__set_elapsed__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__error_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 102 0 0# "model_projected" "model_trace:6004" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__error_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__failure_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 109 0 0# "model_projected" "model_trace:6052" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failure_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__elapsed__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 115 0 0# "model_projected" "model_trace:6100" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__elapsed__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "elapsed" defined at aunit-test_results.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__elapsed
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__test_results__result

 function elapsed #"aunit-test_results.ads" 115 0 0# 
   (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
 
 namespace Dispatch
  function elapsed #"aunit-test_results.ads" 115 0 0# 
    (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time

 end

end

(* Module for defining the constant "subtest_count" defined at aunit-test_results.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__start_test__subtest_count
 use import "_gnatprove_standard".Main

 function subtest_count #"aunit-test_results.ads" 118 0 0# "model" "model_trace:6128" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "subtest_count" defined at aunit-test_results.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__start_test__subtest_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__success_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 121 0 0# "model_projected" "model_trace:6146" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__success_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__successful__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 127 0 0# "model_projected" "model_trace:6194" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successful__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at aunit-test_results.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_results__test_count__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function r #"aunit-test_results.ads" 130 0 0# "model_projected" "model_trace:6213" 
   : Aunit__test_results__result.result__
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__test_count__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "test_count" defined at aunit-test_results.ads:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__test_count
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function test_count #"aunit-test_results.ads" 130 0 0# 
   (r : Aunit__test_results__result.result__) : int
 
 namespace Dispatch
  function test_count #"aunit-test_results.ads" 130 0 0# 
    (r : Aunit__test_results__result.result__) : int

 end

end

(* Module for axiomatizing type "TresultC" defined at aunit-test_results.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_results__TresultC
 use export Aunit__test_results__result
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "condition" defined at aunit-assertions.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__condition
 use import "_gnatprove_standard".Main

 function condition #"aunit-assertions.ads" 49 0 0# "model" "model_trace:4857" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 49 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "condition" defined at aunit-assertions.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__condition__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at aunit-assertions.ads:50, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"aunit-assertions.ads" 50 0 0# "model_projected" "model_trace:4866" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at aunit-assertions.ads:50, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at aunit-assertions.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__source
 use import "_gnatprove_standard".Main
 use        Standard__string

 function source #"aunit-assertions.ads" 51 0 0# "model_projected" "model_trace:4875" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at aunit-assertions.ads:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "line" defined at aunit-assertions.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__line
 use import "_gnatprove_standard".Main

 function line #"aunit-assertions.ads" 52 0 0# "model" "model_trace:4889" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "line" defined at aunit-assertions.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "condition" defined at aunit-assertions.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__2__condition
 use import "_gnatprove_standard".Main

 function condition #"aunit-assertions.ads" 58 0 0# "model" "model_trace:4912" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "condition" defined at aunit-assertions.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__2__condition__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at aunit-assertions.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__2__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"aunit-assertions.ads" 59 0 0# "model_projected" "model_trace:4921" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at aunit-assertions.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__2__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at aunit-assertions.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__2__source
 use import "_gnatprove_standard".Main
 use        Standard__string

 function source #"aunit-assertions.ads" 60 0 0# "model_projected" "model_trace:4930" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at aunit-assertions.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "line" defined at aunit-assertions.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__2__line
 use import "_gnatprove_standard".Main

 function line #"aunit-assertions.ads" 61 0 0# "model" "model_trace:4944" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "line" defined at aunit-assertions.ads:61, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__2__line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "actual" defined at aunit-assertions.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__3__actual
 use import "_gnatprove_standard".Main
 use        Standard__string

 function actual #"aunit-assertions.ads" 73 0 0# "model_projected" "model_trace:4968" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "actual" defined at aunit-assertions.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__3__actual__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "expected" defined at aunit-assertions.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__3__expected
 use import "_gnatprove_standard".Main
 use        Standard__string

 function expected #"aunit-assertions.ads" 74 0 0# "model_projected" "model_trace:4977" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "expected" defined at aunit-assertions.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__3__expected__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at aunit-assertions.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__3__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"aunit-assertions.ads" 75 0 0# "model_projected" "model_trace:4986" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at aunit-assertions.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__3__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at aunit-assertions.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__3__source
 use import "_gnatprove_standard".Main
 use        Standard__string

 function source #"aunit-assertions.ads" 76 0 0# "model_projected" "model_trace:4995" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at aunit-assertions.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__3__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "line" defined at aunit-assertions.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert__3__line
 use import "_gnatprove_standard".Main

 function line #"aunit-assertions.ads" 77 0 0# "model" "model_trace:5009" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "line" defined at aunit-assertions.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert__3__line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at aunit-assertions.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert_exception__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"aunit-assertions.ads" 83 0 0# "model_projected" "model_trace:5041" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at aunit-assertions.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert_exception__message__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at aunit-assertions.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert_exception__source
 use import "_gnatprove_standard".Main
 use        Standard__string

 function source #"aunit-assertions.ads" 84 0 0# "model_projected" "model_trace:5050" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at aunit-assertions.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert_exception__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "line" defined at aunit-assertions.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__assert_exception__line
 use import "_gnatprove_standard".Main

 function line #"aunit-assertions.ads" 85 0 0# "model" "model_trace:5064" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "line" defined at aunit-assertions.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__assert_exception__line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttest_idB" defined at aunit-assertions.ads:137, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__Ttest_idB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttest_idB #"aunit-assertions.ads" 137 0 0# 
 
 function first #"aunit-assertions.ads" 137 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"aunit-assertions.ads" 137 0 0# 
   : int =
  2147483647
 
 predicate in_range #"aunit-assertions.ads" 137 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttest_idB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttest_idB__ref #"aunit-assertions.ads" 137 0 0# =
  { mutable ttest_idB__content "model_trace:" : ttest_idB }
 
 function ttest_idB__ref___projection #"aunit-assertions.ads" 137 0 0# 
   (a : ttest_idB__ref) : ttest_idB =
  a.ttest_idB__content
 
 meta "model_projection" function ttest_idB__ref___projection
 
 meta "inline : no" function ttest_idB__ref___projection
 
 val ttest_idB__havoc #"aunit-assertions.ads" 137 0 0# 
   (x : ttest_idB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test_id" defined at aunit-assertions.ads:137, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__test_id
 use import "_gnatprove_standard".Main
 use import "int".Int

 type test_id #"aunit-assertions.ads" 137 0 0# 
 
 function first #"aunit-assertions.ads" 137 0 0# 
   : int =
  0
 
 function last #"aunit-assertions.ads" 137 0 0# 
   : int =
  2147483647
 
 predicate in_range #"aunit-assertions.ads" 137 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = test_id, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type test_id__ref #"aunit-assertions.ads" 137 0 0# =
  { mutable test_id__content "model_trace:" : test_id }
 
 function test_id__ref___projection #"aunit-assertions.ads" 137 0 0# 
   (a : test_id__ref) : test_id =
  a.test_id__content
 
 meta "model_projection" function test_id__ref___projection
 
 meta "inline : no" function test_id__ref___projection
 
 val test_id__havoc #"aunit-assertions.ads" 137 0 0# 
   (x : test_id__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test" defined at aunit-assertions.ads:151, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__test
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__assertions__test_id

 type __split_fields #"aunit-assertions.ads" 137 0 0# =
  { rec__id "model_trace:.5417" : Aunit__assertions__test_id.test_id; rec__anc__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_Id__projection #"aunit-assertions.ads" 137 0 0# "model_trace:.5417" 
   (a : __split_fields) : Aunit__assertions__test_id.test_id =
  a.rec__id
 
 meta "model_projection" function __split_fields_Id__projection
 
 meta "inline : no" function __split_fields_Id__projection
 
 function __split_fields_10__projection #"aunit-assertions.ads" 151 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__anc__
 
 meta "model_projection" function __split_fields_10__projection
 
 meta "inline : no" function __split_fields_10__projection
 
 function __split_fields_11__projection #"aunit-assertions.ads" 151 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_11__projection
 
 meta "inline : no" function __split_fields_11__projection
 
 type __split_fields__ref #"aunit-assertions.ads" 151 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"aunit-assertions.ads" 151 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"aunit-assertions.ads" 151 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test #"aunit-assertions.ads" 151 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_3__projection #"aunit-assertions.ads" 151 0 0# 
   (a : test) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_3__projection
 
 meta "inline : no" function test_3__projection
 
 function test_4__projection #"aunit-assertions.ads" 151 0 0# 
   (a : test) : int =
  a.attr__tag
 
 meta "model_projection" function test_4__projection
 
 meta "inline : no" function test_4__projection
 
 function hide_anc__ #"aunit-assertions.ads" 151 0 0# 
   (rec__ext__ : Main.__private) : Main.__private
 
 function hide_ext__ #"aunit-assertions.ads" 151 0 0# 
   (id : Aunit__assertions__test_id.test_id) (rec__ext__ : Main.__private) (rec__anc__ : Main.__private) : Main.__private
 
 function extract__id #"aunit-assertions.ads" 137 0 0# 
   (x : Main.__private) : Aunit__assertions__test_id.test_id
 
 axiom extract__id__conv :
  (forall id : Aunit__assertions__test_id.test_id.
  (forall rec__ext__ rec__anc__ : Main.__private.
   ((extract__id (hide_ext__ id rec__ext__ rec__anc__)) = id)))
 
 function extract__ext__ #"aunit-assertions.ads" 137 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"aunit-assertions.ads" 137 0 0# 
   (a : test) : Aunit__tests__test.test =
  { Aunit__tests__test.__split_fields = { Aunit__tests__test.rec__ext__ = (hide_ext__ a.__split_fields.rec__id a.__split_fields.rec__ext__ a.__split_fields.rec__anc__) }; Aunit__tests__test.attr__tag = a.attr__tag }
 
 function of_base #"aunit-assertions.ads" 151 0 0# 
   (r : Aunit__tests__test.test) : test =
  { __split_fields = { rec__id = (extract__id r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__ext__ = (extract__ext__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__anc__ = (hide_anc__ (Aunit__tests__test.__split_fields r).Aunit__tests__test.rec__ext__) }; attr__tag = r.Aunit__tests__test.attr__tag }
 
 predicate id__pred #"aunit-assertions.ads" 151 0 0# 
   (a : test)  =
  true
 
 val rec__id_ #"aunit-assertions.ads" 151 0 0# 
   (a : test) : Aunit__assertions__test_id.test_id
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function user_eq #"aunit-assertions.ads" 151 0 0# 
   (a : test) (b : test) : bool
 
 function __tag #"aunit-assertions.ads" 151 0 0# 
   : int
 
 function value__size #"aunit-assertions.ads" 151 0 0# 
   : int
 
 function object__size #"aunit-assertions.ads" 151 0 0# 
   (a : test) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test.
   ((object__size a) >= 0))
 
 function dummy #"aunit-assertions.ads" 151 0 0# 
   : test
 
 type test__ref #"aunit-assertions.ads" 151 0 0# =
  { mutable test__content "model_trace:" : test }
 
 function test__ref_2__projection #"aunit-assertions.ads" 151 0 0# 
   (a : test__ref) : test =
  a.test__content
 
 meta "model_projection" function test__ref_2__projection
 
 meta "inline : no" function test__ref_2__projection
 
 val test__havoc #"aunit-assertions.ads" 151 0 0# 
   (x : test__ref) : unit
  writes {x}

end

(* Module for defining the constant "t" defined at aunit-assertions.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__clear_failures__t
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 function t #"aunit-assertions.ads" 104 0 0# "model_projected" "model_trace:5142" 
   : Aunit__assertions__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-assertions.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__clear_failures__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at aunit-assertions.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__has_failures__t
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 function t #"aunit-assertions.ads" 107 0 0# "model_projected" "model_trace:5160" 
   : Aunit__assertions__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-assertions.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__has_failures__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__failure_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-assertions.ads" 151 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_12__projection #"aunit-assertions.ads" 151 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_12__projection
 
 meta "inline : no" function __split_fields_12__projection
 
 type __split_fields__ref #"aunit-assertions.ads" 151 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_10__projection #"aunit-assertions.ads" 151 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_10__projection
 
 meta "inline : no" function __split_fields__ref_10__projection
 
 val __split_fields__havoc #"aunit-assertions.ads" 151 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor_2__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor_2__projection
 
 meta "inline : no" function cursor_2__projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref_2__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref_2__projection
 
 meta "inline : no" function cursor__ref_2__projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "failure_iter" defined at aunit-assertions.ads:149, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__failure_iter
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 type __split_fields #"ada_containers-aunit_lists.ads" 53 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_13__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_13__projection
 
 meta "inline : no" function __split_fields_13__projection
 
 type __split_fields__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_11__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_11__projection
 
 meta "inline : no" function __split_fields__ref_11__projection
 
 val __split_fields__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type failure_iter #"aunit-assertions.ads" 149 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function failure_iter___projection #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function failure_iter___projection
 
 meta "inline : no" function failure_iter___projection
 
 function to_base #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter) : Aunit__assertions__failure_lists__cursor.cursor =
  { Aunit__assertions__failure_lists__cursor.__split_fields = { Aunit__assertions__failure_lists__cursor.rec__main__ = a.__split_fields.rec__main__ } }
 
 function of_base #"ada_containers-aunit_lists.ads" 53 0 0# 
   (r : Aunit__assertions__failure_lists__cursor.cursor) : failure_iter =
  { __split_fields = { rec__main__ = r.Aunit__assertions__failure_lists__cursor.__split_fields.Aunit__assertions__failure_lists__cursor.rec__main__ } }
 
 function bool_eq #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter) (b : failure_iter) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter) (b : failure_iter) : bool
 
 function value__size #"aunit-assertions.ads" 149 0 0# 
   : int
 
 function object__size #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : failure_iter.
   ((object__size a) >= 0))
 
 function dummy #"aunit-assertions.ads" 149 0 0# 
   : failure_iter
 
 type failure_iter__ref #"aunit-assertions.ads" 149 0 0# =
  { mutable failure_iter__content "model_trace:" : failure_iter }
 
 function failure_iter__ref___projection #"aunit-assertions.ads" 149 0 0# 
   (a : failure_iter__ref) : failure_iter =
  a.failure_iter__content
 
 meta "model_projection" function failure_iter__ref___projection
 
 meta "inline : no" function failure_iter__ref___projection
 
 val failure_iter__havoc #"aunit-assertions.ads" 149 0 0# 
   (x : failure_iter__ref) : unit
  writes {x}

end

(* Module for defining the constant "t" defined at aunit-assertions.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__first_failure__t
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 function t #"aunit-assertions.ads" 113 0 0# "model_projected" "model_trace:5187" 
   : Aunit__assertions__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-assertions.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__first_failure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at aunit-assertions.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__has_failure__i
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter

 function i #"aunit-assertions.ads" 114 0 0# 
   : Aunit__assertions__failure_iter.failure_iter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 149 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at aunit-assertions.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__has_failure__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at aunit-assertions.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__get_failure__i
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter

 function i #"aunit-assertions.ads" 116 0 0# 
   : Aunit__assertions__failure_iter.failure_iter
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 149 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at aunit-assertions.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__get_failure__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TtestC" defined at aunit-assertions.ads:96, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__TtestC
 use export Aunit__assertions__test
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "from" defined at aunit-assertions.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__copy_id__from
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 function from #"aunit-assertions.ads" 125 0 0# "model_projected" "model_trace:5294" 
   : Aunit__assertions__test.test
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "from" defined at aunit-assertions.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__copy_id__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "null_id" defined at aunit-assertions.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__null_id
 use import "_gnatprove_standard".Main

 function null_id #"aunit-assertions.ads" 138 0 0# "model" "model_trace:5332" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 137 0 0# 
   : int

end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__failure_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-assertions.ads" 137 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_14__projection #"aunit-assertions.ads" 137 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_14__projection
 
 meta "inline : no" function __split_fields_14__projection
 
 function __split_fields_15__projection #"aunit-assertions.ads" 137 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_15__projection
 
 meta "inline : no" function __split_fields_15__projection
 
 type __split_fields__ref #"aunit-assertions.ads" 137 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_12__projection #"aunit-assertions.ads" 137 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_12__projection
 
 meta "inline : no" function __split_fields__ref_12__projection
 
 val __split_fields__havoc #"aunit-assertions.ads" 137 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list_3__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_3__projection
 
 meta "inline : no" function list_3__projection
 
 function list_4__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_4__projection
 
 meta "inline : no" function list_4__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref_2__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref_2__projection
 
 meta "inline : no" function list__ref_2__projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:15655" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:15664" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__assertions__failure_lists__list.list) (right : Aunit__assertions__failure_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__assertions__failure_lists__list.list) (right : Aunit__assertions__failure_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:15683" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:15702" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:15848" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:15903" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:15949" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:15986" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:16023" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:16060" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:16088" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:16116" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:16342" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:16361" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:16380" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:16399" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:16492" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:16530" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:16568" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__assertions__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__assertions__failure_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:16633" 
   : Aunit__assertions__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Translate_Type *)
module Aunit__assertions__failure_lists__TlistC
 use export Aunit__assertions__failure_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "test_case" defined at aunit-simple_test_cases.ads:75, created in Gnat2Why.Types.Translate_Type *)
module Aunit__simple_test_cases__test_case
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__anc__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_16__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__anc__
 
 meta "model_projection" function __split_fields_16__projection
 
 meta "inline : no" function __split_fields_16__projection
 
 function __split_fields_17__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_17__projection
 
 meta "inline : no" function __split_fields_17__projection
 
 type __split_fields__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_13__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_13__projection
 
 meta "inline : no" function __split_fields__ref_13__projection
 
 val __split_fields__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test_case #"aunit-simple_test_cases.ads" 75 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_case___projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_case___projection
 
 meta "inline : no" function test_case___projection
 
 function test_case_2__projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case) : int =
  a.attr__tag
 
 meta "model_projection" function test_case_2__projection
 
 meta "inline : no" function test_case_2__projection
 
 function hide_anc__ #"aunit-simple_test_cases.ads" 75 0 0# 
   (rec__ext__ : Main.__private) : Main.__private
 
 function hide_ext__ #"aunit-simple_test_cases.ads" 75 0 0# 
   (rec__ext__ : Main.__private) (rec__anc__ : Main.__private) : Main.__private
 
 function extract__ext__ #"aunit-simple_test_cases.ads" 75 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case) : Aunit__tests__test.test =
  { Aunit__tests__test.__split_fields = { Aunit__tests__test.rec__ext__ = (hide_ext__ a.__split_fields.rec__ext__ a.__split_fields.rec__anc__) }; Aunit__tests__test.attr__tag = a.attr__tag }
 
 function of_base #"aunit-tests.ads" 43 0 0# 
   (r : Aunit__tests__test.test) : test_case =
  { __split_fields = { rec__ext__ = (extract__ext__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__anc__ = (hide_anc__ (Aunit__tests__test.__split_fields r).Aunit__tests__test.rec__ext__) }; attr__tag = r.Aunit__tests__test.attr__tag }
 
 function user_eq #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case) (b : test_case) : bool
 
 function __tag #"aunit-simple_test_cases.ads" 75 0 0# 
   : int
 
 function value__size #"aunit-simple_test_cases.ads" 75 0 0# 
   : int
 
 function object__size #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test_case.
   ((object__size a) >= 0))
 
 function dummy #"aunit-simple_test_cases.ads" 75 0 0# 
   : test_case
 
 type test_case__ref #"aunit-simple_test_cases.ads" 75 0 0# =
  { mutable test_case__content "model_trace:" : test_case }
 
 function test_case__ref___projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : test_case__ref) : test_case =
  a.test_case__content
 
 meta "model_projection" function test_case__ref___projection
 
 meta "inline : no" function test_case__ref___projection
 
 val test_case__havoc #"aunit-simple_test_cases.ads" 75 0 0# 
   (x : test_case__ref) : unit
  writes {x}

end

(* Module for defining the constant "test" defined at aunit-simple_test_cases.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__simple_test_cases__name__test
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 function test #"aunit-simple_test_cases.ads" 47 0 0# "model_projected" "model_trace:4653" 
   : Aunit__simple_test_cases__test_case.test_case
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-simple_test_cases.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__name__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "test" defined at aunit-simple_test_cases.ads:50, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__simple_test_cases__routine_name__test
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 function test #"aunit-simple_test_cases.ads" 50 0 0# "model_projected" "model_trace:4672" 
   : Aunit__simple_test_cases__test_case.test_case
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-simple_test_cases.ads:50, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__routine_name__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttest_caseC" defined at aunit-simple_test_cases.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Aunit__simple_test_cases__Ttest_caseC
 use export Aunit__simple_test_cases__test_case
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__routine_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-simple_test_cases.ads" 75 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_18__projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_18__projection
 
 meta "inline : no" function __split_fields_18__projection
 
 function __split_fields_19__projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_19__projection
 
 meta "inline : no" function __split_fields_19__projection
 
 type __split_fields__ref #"aunit-simple_test_cases.ads" 75 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_14__projection #"aunit-simple_test_cases.ads" 75 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_14__projection
 
 meta "inline : no" function __split_fields__ref_14__projection
 
 val __split_fields__havoc #"aunit-simple_test_cases.ads" 75 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list_5__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_5__projection
 
 meta "inline : no" function list_5__projection
 
 function list_6__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_6__projection
 
 meta "inline : no" function list_6__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref_3__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref_3__projection
 
 meta "inline : no" function list__ref_3__projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test_case" defined at aunit-test_cases.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__test_case
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__anc__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_20__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_20__projection
 
 meta "inline : no" function __split_fields_20__projection
 
 function __split_fields_21__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__anc__
 
 meta "model_projection" function __split_fields_21__projection
 
 meta "inline : no" function __split_fields_21__projection
 
 function __split_fields_22__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_22__projection
 
 meta "inline : no" function __split_fields_22__projection
 
 type __split_fields__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_15__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_15__projection
 
 meta "inline : no" function __split_fields__ref_15__projection
 
 val __split_fields__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test_case #"aunit-test_cases.ads" 41 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_case_3__projection #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_case_3__projection
 
 meta "inline : no" function test_case_3__projection
 
 function test_case_4__projection #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case) : int =
  a.attr__tag
 
 meta "model_projection" function test_case_4__projection
 
 meta "inline : no" function test_case_4__projection
 
 function hide_anc__ #"aunit-test_cases.ads" 41 0 0# 
   (rec__ext__ : Main.__private) : Main.__private
 
 function hide_ext__ #"aunit-test_cases.ads" 41 0 0# 
   (rec__ext__ : Main.__private) (rec__anc__ : Main.__private) (rec__main__ : Main.__private) : Main.__private
 
 function extract__ext__ #"aunit-test_cases.ads" 41 0 0# 
   (x : Main.__private) : Main.__private
 
 function extract__main__ #"aunit-test_cases.ads" 41 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case) : Aunit__tests__test.test =
  { Aunit__tests__test.__split_fields = { Aunit__tests__test.rec__ext__ = (hide_ext__ a.__split_fields.rec__ext__ a.__split_fields.rec__main__ a.__split_fields.rec__anc__) }; Aunit__tests__test.attr__tag = a.attr__tag }
 
 function of_base #"aunit-tests.ads" 43 0 0# 
   (r : Aunit__tests__test.test) : test_case =
  { __split_fields = { rec__ext__ = (extract__ext__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__anc__ = (hide_anc__ (Aunit__tests__test.__split_fields r).Aunit__tests__test.rec__ext__); rec__main__ = (extract__main__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__) }; attr__tag = r.Aunit__tests__test.attr__tag }
 
 function user_eq #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case) (b : test_case) : bool
 
 function __tag #"aunit-test_cases.ads" 41 0 0# 
   : int
 
 function value__size #"aunit-test_cases.ads" 41 0 0# 
   : int
 
 function object__size #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test_case.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_cases.ads" 41 0 0# 
   : test_case
 
 type test_case__ref #"aunit-test_cases.ads" 41 0 0# =
  { mutable test_case__content "model_trace:" : test_case }
 
 function test_case__ref_2__projection #"aunit-test_cases.ads" 41 0 0# 
   (a : test_case__ref) : test_case =
  a.test_case__content
 
 meta "model_projection" function test_case__ref_2__projection
 
 meta "inline : no" function test_case__ref_2__projection
 
 val test_case__havoc #"aunit-test_cases.ads" 41 0 0# 
   (x : test_case__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Ttest_caseC" defined at aunit-test_cases.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__Ttest_caseC
 use export Aunit__test_cases__test_case
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at aunit-test_cases.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__registration__register_routine__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"aunit-test_cases.ads" 68 0 0# "model_projected" "model_trace:11270" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at aunit-test_cases.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__registration__register_routine__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "test" defined at aunit-test_cases.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__registration__routine_count__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 function test #"aunit-test_cases.ads" 71 0 0# "model_projected" "model_trace:11288" 
   : Aunit__test_cases__test_case.test_case
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__registration__routine_count__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "routine_count" defined at aunit-test_cases.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__registration__routine_count
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 function routine_count #"aunit-test_cases.ads" 71 0 0# 
   (test : Aunit__test_cases__test_case.test_case) : int

end

(* Module for defining the constant "test" defined at aunit-test_cases.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_name__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 function test #"aunit-test_cases.ads" 101 0 0# "model_projected" "model_trace:11462" 
   : Aunit__test_cases__test_case.test_case
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_name__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__routine_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-test_cases.ads" 41 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_23__projection #"aunit-test_cases.ads" 41 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_23__projection
 
 meta "inline : no" function __split_fields_23__projection
 
 type __split_fields__ref #"aunit-test_cases.ads" 41 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_16__projection #"aunit-test_cases.ads" 41 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_16__projection
 
 meta "inline : no" function __split_fields__ref_16__projection
 
 val __split_fields__havoc #"aunit-test_cases.ads" 41 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor_3__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor_3__projection
 
 meta "inline : no" function cursor_3__projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref_3__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref_3__projection
 
 meta "inline : no" function cursor__ref_3__projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:18600" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:18609" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_cases__routine_lists__list.list) (right : Aunit__test_cases__routine_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_cases__routine_lists__list.list) (right : Aunit__test_cases__routine_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:18628" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:18647" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:18793" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:18848" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:18894" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:18931" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:18968" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:19005" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:19033" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:19061" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:19287" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__cursor

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:19306" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:19325" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__cursor

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:19344" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:19437" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:19475" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:19513" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__test_cases__routine_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__routine_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:19578" 
   : Aunit__test_cases__routine_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__routine_lists__TlistC
 use export Aunit__test_cases__routine_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__failure_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_24__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_24__projection
 
 meta "inline : no" function __split_fields_24__projection
 
 function __split_fields_25__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_25__projection
 
 meta "inline : no" function __split_fields_25__projection
 
 type __split_fields__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_17__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_17__projection
 
 meta "inline : no" function __split_fields__ref_17__projection
 
 val __split_fields__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list_7__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_7__projection
 
 meta "inline : no" function list_7__projection
 
 function list_8__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_8__projection
 
 meta "inline : no" function list_8__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref_4__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref_4__projection
 
 meta "inline : no" function list__ref_4__projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__failure_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_26__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_26__projection
 
 meta "inline : no" function __split_fields_26__projection
 
 type __split_fields__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_18__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_18__projection
 
 meta "inline : no" function __split_fields__ref_18__projection
 
 val __split_fields__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor_4__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor_4__projection
 
 meta "inline : no" function cursor_4__projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref_4__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref_4__projection
 
 meta "inline : no" function cursor__ref_4__projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:20265" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:20274" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_cases__failure_lists__list.list) (right : Aunit__test_cases__failure_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_cases__failure_lists__list.list) (right : Aunit__test_cases__failure_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:20293" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:20312" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:20458" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:20513" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:20559" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:20596" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:20633" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:20670" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:20698" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:20726" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:20952" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__cursor

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:20971" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:20990" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__cursor

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:21009" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:21102" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:21140" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:21178" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__test_cases__failure_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_cases__failure_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:21243" 
   : Aunit__test_cases__failure_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_cases__failure_lists__TlistC
 use export Aunit__test_cases__failure_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__Tmax_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tmax_sizeB #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  ( -128 )
 
 function last #"types.ads" 3 0 0# 
   : int =
  127
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tmax_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tmax_sizeB__ref #"types.ads" 3 0 0# =
  { mutable tmax_sizeB__content "model_trace:" : tmax_sizeB }
 
 function tmax_sizeB__ref___projection #"types.ads" 3 0 0# 
   (a : tmax_sizeB__ref) : tmax_sizeB =
  a.tmax_sizeB__content
 
 meta "model_projection" function tmax_sizeB__ref___projection
 
 meta "inline : no" function tmax_sizeB__ref___projection
 
 val tmax_sizeB__havoc #"types.ads" 3 0 0# 
   (x : tmax_sizeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Types__max_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type max_size #"types.ads" 3 0 0# 
 
 function first #"types.ads" 3 0 0# 
   : int =
  0
 
 function last #"types.ads" 3 0 0# 
   : int =
  100
 
 predicate in_range #"types.ads" 3 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = max_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type max_size__ref #"types.ads" 3 0 0# =
  { mutable max_size__content "model_trace:" : max_size }
 
 function max_size__ref___projection #"types.ads" 3 0 0# 
   (a : max_size__ref) : max_size =
  a.max_size__content
 
 meta "model_projection" function max_size__ref___projection
 
 meta "inline : no" function max_size__ref___projection
 
 val max_size__havoc #"types.ads" 3 0 0# 
   (x : max_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Types__train_state
 use import "_gnatprove_standard".Main
 use import "int".Int

 type train_state #"types.ads" 8 0 0# 
 
 function first #"types.ads" 8 0 0# 
   : int =
  0
 
 function last #"types.ads" 8 0 0# 
   : int =
  3
 
 predicate in_range #"types.ads" 8 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = train_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type train_state__ref #"types.ads" 8 0 0# =
  { mutable train_state__content "model_trace:" : train_state }
 
 function train_state__ref___projection #"types.ads" 8 0 0# 
   (a : train_state__ref) : train_state =
  a.train_state__content
 
 meta "model_projection" function train_state__ref___projection
 
 meta "inline : no" function train_state__ref___projection
 
 val train_state__havoc #"types.ads" 8 0 0# 
   (x : train_state__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Types__station_locations
 use import "_gnatprove_standard".Main
 use import "int".Int

 type station_locations #"types.ads" 11 0 0# 
 
 function first #"types.ads" 11 0 0# 
   : int =
  0
 
 function last #"types.ads" 11 0 0# 
   : int =
  8
 
 predicate in_range #"types.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = station_locations, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type station_locations__ref #"types.ads" 11 0 0# =
  { mutable station_locations__content "model_trace:" : station_locations }
 
 function station_locations__ref___projection #"types.ads" 11 0 0# 
   (a : station_locations__ref) : station_locations =
  a.station_locations__content
 
 meta "model_projection" function station_locations__ref___projection
 
 meta "inline : no" function station_locations__ref___projection
 
 val station_locations__havoc #"types.ads" 11 0 0# 
   (x : station_locations__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Types__timetable
 use import "_gnatprove_standard".Main
 use import "int".Int

 type timetable #"types.ads" 14 0 0# 
 
 function first #"types.ads" 14 0 0# 
   : int =
  0
 
 function last #"types.ads" 14 0 0# 
   : int =
  14
 
 predicate in_range #"types.ads" 14 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = timetable, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type timetable__ref #"types.ads" 14 0 0# =
  { mutable timetable__content "model_trace:" : timetable }
 
 function timetable__ref___projection #"types.ads" 14 0 0# 
   (a : timetable__ref) : timetable =
  a.timetable__content
 
 meta "model_projection" function timetable__ref___projection
 
 meta "inline : no" function timetable__ref___projection
 
 val timetable__havoc #"types.ads" 14 0 0# 
   (x : timetable__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Types__odrecord
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 type __split_fields #"types.ads" 14 0 0# =
  { rec__origin "model_trace:.9914" : Types__station_locations.station_locations; rec__destination "model_trace:.9925" : Types__station_locations.station_locations }
 
 function __split_fields_Origin__projection #"types.ads" 11 0 0# "model_trace:.9914" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin__projection
 
 meta "inline : no" function __split_fields_Origin__projection
 
 function __split_fields_Destination__projection #"types.ads" 16 0 0# "model_trace:.9925" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination__projection
 
 meta "inline : no" function __split_fields_Destination__projection
 
 type __split_fields__ref #"types.ads" 16 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_19__projection #"types.ads" 16 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_19__projection
 
 meta "inline : no" function __split_fields__ref_19__projection
 
 val __split_fields__havoc #"types.ads" 16 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type odrecord #"types.ads" 16 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function odrecord___projection #"types.ads" 16 0 0# 
   (a : odrecord) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function odrecord___projection
 
 meta "inline : no" function odrecord___projection
 
 predicate origin__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__origin_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"types.ads" 16 0 0# 
   (a : odrecord)  =
  true
 
 val rec__destination_ #"types.ads" 16 0 0# 
   (a : odrecord) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 function bool_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool =
  (if (( ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) )) then (
   True) else (
   False))
 
 function user_eq #"types.ads" 16 0 0# 
   (a : odrecord) (b : odrecord) : bool
 
 function value__size #"types.ads" 16 0 0# 
   : int
 
 function object__size #"types.ads" 16 0 0# 
   (a : odrecord) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : odrecord.
   ((object__size a) >= 0))
 
 function dummy #"types.ads" 16 0 0# 
   : odrecord
 
 type odrecord__ref #"types.ads" 16 0 0# =
  { mutable odrecord__content "model_trace:" : odrecord }
 
 function odrecord__ref___projection #"types.ads" 16 0 0# 
   (a : odrecord__ref) : odrecord =
  a.odrecord__content
 
 meta "model_projection" function odrecord__ref___projection
 
 meta "inline : no" function odrecord__ref___projection
 
 val odrecord__havoc #"types.ads" 16 0 0# 
   (x : odrecord__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data_type
 use export Types__odrecord
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  odrecord
 
 function to_base #"types.ads" 16 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref___projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref___projection
 
 meta "inline : no" function data_type__ref___projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:23172" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__no_found
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:23181" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__list_od__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.23044" : Types__list_od__data_type.data_type; rec__id "model_trace:.23054" : Standard__natural.natural }
 
 function __split_fields_DATA__projection #"system.ads" 1 0 0# "model_trace:.23044" 
   (a : __split_fields) : Types__list_od__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA__projection
 
 meta "inline : no" function __split_fields_DATA__projection
 
 function __split_fields_ID__projection #"list.ads" 90 0 0# "model_trace:.23054" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID__projection
 
 meta "inline : no" function __split_fields_ID__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_20__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_20__projection
 
 meta "inline : no" function __split_fields__ref_20__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data___projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data___projection
 
 meta "inline : no" function data___projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Types__list_od__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Types__list_od__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref___projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref___projection
 
 meta "inline : no" function data__ref___projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Types__list_od__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Types__list_od__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"list.ads" 90 0 0# =
  Types__list_od__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref___projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref___projection
 
 meta "inline : no" function list_array__ref___projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref___projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref___projection
 
 meta "inline : no" function t3s__ref___projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Types__list_od__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Types__list_od__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref___projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref___projection
 
 meta "inline : no" function t4s__ref___projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at types.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Types__list_od__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.22721" : Standard__positive.positive }
 
 function __split_discrs___projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs___projection
 
 meta "inline : no" function __split_discrs___projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref___projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___projection
 
 meta "inline : no" function __split_discrs__ref___projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.23088" : Standard__natural.natural; rec__elements "model_trace:.23099" : Types__list_od__list_ptr__T4s.t4s; rec__head "model_trace:.23114" : Standard__positive.positive }
 
 function __split_fields_SIZE__projection #"system.ads" 1 0 0# "model_trace:.23088" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE__projection
 
 meta "inline : no" function __split_fields_SIZE__projection
 
 function __split_fields_ELEMENTS__projection #"list.ads" 99 0 0# "model_trace:.23099" 
   (a : __split_fields) : Types__list_od__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS__projection
 
 meta "inline : no" function __split_fields_ELEMENTS__projection
 
 function __split_fields_HEAD__projection #"list.ads" 99 0 0# "model_trace:.23114" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD__projection
 
 meta "inline : no" function __split_fields_HEAD__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_21__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_21__projection
 
 meta "inline : no" function __split_fields__ref_21__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr___projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr___projection
 
 meta "inline : no" function list_ptr___projection
 
 function list_ptr_2__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_2__projection
 
 meta "inline : no" function list_ptr_2__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Types__list_od__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Types__list_od__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref___projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref___projection
 
 meta "inline : no" function list_ptr__ref___projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 46 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__contains__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:22748" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__contains
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_first__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 48 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_first
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_last__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 51 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_last
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_size__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 54 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_size
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 57 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:22833" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 60 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:22861" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__full__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function a #"list.ads" 62 0 0# 
   : Types__list_od__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__full
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__d
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:22908" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:22917" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:22962" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Types__list_od__data

 function newvalue #"list.ads" 78 0 0# 
   : Types__list_od__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:22998" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant *)
module Types__list_od__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:23007" 
   : Types__list_od__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Tracks__track
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations

 type __split_fields #"list.ads" 21 0 0# =
  { rec__id "model_trace:.10481" : Standard__natural.natural; rec__origin "model_trace:.10492" : Types__station_locations.station_locations; rec__destination "model_trace:.10507" : Types__station_locations.station_locations; rec__trainid "model_trace:.10522" : Standard__natural.natural; rec__trackslineorigin "model_trace:.10533" : Types__station_locations.station_locations; rec__trackslinedestination "model_trace:.10548" : Types__station_locations.station_locations }
 
 function __split_fields_ID2__projection #"types.ads" 11 0 0# "model_trace:.10481" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID2__projection
 
 meta "inline : no" function __split_fields_ID2__projection
 
 function __split_fields_Origin2__projection #"tracks.ads" 7 0 0# "model_trace:.10492" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin2__projection
 
 meta "inline : no" function __split_fields_Origin2__projection
 
 function __split_fields_Destination2__projection #"tracks.ads" 7 0 0# "model_trace:.10507" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination2__projection
 
 meta "inline : no" function __split_fields_Destination2__projection
 
 function __split_fields_TrainID__projection #"tracks.ads" 7 0 0# "model_trace:.10522" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID__projection
 
 meta "inline : no" function __split_fields_TrainID__projection
 
 function __split_fields_TracksLineOrigin__projection #"tracks.ads" 7 0 0# "model_trace:.10533" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslineorigin
 
 meta "model_projection" function __split_fields_TracksLineOrigin__projection
 
 meta "inline : no" function __split_fields_TracksLineOrigin__projection
 
 function __split_fields_TracksLineDestination__projection #"tracks.ads" 7 0 0# "model_trace:.10548" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__trackslinedestination
 
 meta "model_projection" function __split_fields_TracksLineDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineDestination__projection
 
 type __split_fields__ref #"tracks.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_22__projection #"tracks.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_22__projection
 
 meta "inline : no" function __split_fields__ref_22__projection
 
 val __split_fields__havoc #"tracks.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type track #"tracks.ads" 7 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function track___projection #"tracks.ads" 7 0 0# 
   (a : track) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function track___projection
 
 meta "inline : no" function track___projection
 
 predicate id__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__id_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate origin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__origin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__destination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate trainid__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trainid_ #"tracks.ads" 7 0 0# 
   (a : track) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate trackslineorigin__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslineorigin_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslineorigin__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineorigin) }
 
 predicate trackslinedestination__pred #"tracks.ads" 7 0 0# 
   (a : track)  =
  true
 
 val rec__trackslinedestination_ #"tracks.ads" 7 0 0# 
   (a : track) : Types__station_locations.station_locations
  requires { (trackslinedestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslinedestination) }
 
 function bool_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslineorigin) = (Types__station_locations.to_rep b.__split_fields.rec__trackslineorigin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__trackslinedestination) = (Types__station_locations.to_rep b.__split_fields.rec__trackslinedestination)) )) then (
   True) else (
   False))
 
 function user_eq #"tracks.ads" 7 0 0# 
   (a : track) (b : track) : bool
 
 function value__size #"tracks.ads" 7 0 0# 
   : int
 
 function object__size #"tracks.ads" 7 0 0# 
   (a : track) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : track.
   ((object__size a) >= 0))
 
 function dummy #"tracks.ads" 7 0 0# 
   : track
 
 type track__ref #"tracks.ads" 7 0 0# =
  { mutable track__content "model_trace:" : track }
 
 function track__ref___projection #"tracks.ads" 7 0 0# 
   (a : track__ref) : track =
  a.track__content
 
 meta "model_projection" function track__ref___projection
 
 meta "inline : no" function track__ref___projection
 
 val track__havoc #"tracks.ads" 7 0 0# 
   (x : track__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data_type
 use export Tracks__track
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  track
 
 function to_base #"tracks.ads" 7 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_2__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_2__projection
 
 meta "inline : no" function data_type__ref_2__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:23793" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__no_found
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:23802" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.23665" : Stations__list_tracks__data_type.data_type; rec__id "model_trace:.23675" : Standard__natural.natural }
 
 function __split_fields_DATA2__projection #"system.ads" 1 0 0# "model_trace:.23665" 
   (a : __split_fields) : Stations__list_tracks__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA2__projection
 
 meta "inline : no" function __split_fields_DATA2__projection
 
 function __split_fields_ID3__projection #"list.ads" 90 0 0# "model_trace:.23675" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID3__projection
 
 meta "inline : no" function __split_fields_ID3__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_23__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_23__projection
 
 meta "inline : no" function __split_fields__ref_23__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_2__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_2__projection
 
 meta "inline : no" function data_2__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Stations__list_tracks__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Stations__list_tracks__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_2__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_2__projection
 
 meta "inline : no" function data__ref_2__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Stations__list_tracks__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Stations__list_tracks__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"list.ads" 90 0 0# =
  Stations__list_tracks__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_2__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_2__projection
 
 meta "inline : no" function list_array__ref_2__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_2__projection
 
 meta "inline : no" function t3s__ref_2__projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Stations__list_tracks__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Stations__list_tracks__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_2__projection
 
 meta "inline : no" function t4s__ref_2__projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at stations.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Stations__list_tracks__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.23342" : Standard__positive.positive }
 
 function __split_discrs_2__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_2__projection
 
 meta "inline : no" function __split_discrs_2__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_2__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_2__projection
 
 meta "inline : no" function __split_discrs__ref_2__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.23709" : Standard__natural.natural; rec__elements "model_trace:.23720" : Stations__list_tracks__list_ptr__T4s.t4s; rec__head "model_trace:.23735" : Standard__positive.positive }
 
 function __split_fields_SIZE2__projection #"system.ads" 1 0 0# "model_trace:.23709" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE2__projection
 
 meta "inline : no" function __split_fields_SIZE2__projection
 
 function __split_fields_ELEMENTS2__projection #"list.ads" 99 0 0# "model_trace:.23720" 
   (a : __split_fields) : Stations__list_tracks__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS2__projection
 
 meta "inline : no" function __split_fields_ELEMENTS2__projection
 
 function __split_fields_HEAD2__projection #"list.ads" 99 0 0# "model_trace:.23735" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD2__projection
 
 meta "inline : no" function __split_fields_HEAD2__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_24__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_24__projection
 
 meta "inline : no" function __split_fields__ref_24__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_3__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_3__projection
 
 meta "inline : no" function list_ptr_3__projection
 
 function list_ptr_4__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_4__projection
 
 meta "inline : no" function list_ptr_4__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Stations__list_tracks__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__list_tracks__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_2__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_2__projection
 
 meta "inline : no" function list_ptr__ref_2__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 46 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__contains__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:23369" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__contains
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_first__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 48 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_first
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_last__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 51 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_last
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_size__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 54 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_size
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 57 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:23454" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 60 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:23482" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__full__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function a #"list.ads" 62 0 0# 
   : Stations__list_tracks__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__full
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__d
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:23529" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:23538" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:23583" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data

 function newvalue #"list.ads" 78 0 0# 
   : Stations__list_tracks__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:23619" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Stations__list_tracks__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:23628" 
   : Stations__list_tracks__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TT5sP1" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS__TT5sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT5sP1 #"stations.ads" 14 0 0# 
 
 function first #"stations.ads" 14 0 0# 
   : int =
  1
 
 function last #"stations.ads" 14 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 14 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT5sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT5sP1__ref #"stations.ads" 14 0 0# =
  { mutable tT5sP1__content "model_trace:" : tT5sP1 }
 
 function tT5sP1__ref___projection #"stations.ads" 14 0 0# 
   (a : tT5sP1__ref) : tT5sP1 =
  a.tT5sP1__content
 
 meta "model_projection" function tT5sP1__ref___projection
 
 meta "inline : no" function tT5sP1__ref___projection
 
 val tT5sP1__havoc #"stations.ads" 14 0 0# 
   (x : tT5sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 14 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TintracksS" defined at stations.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Stations__TintracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__TintracksS__TT5sP1
 use        Stations__TintracksS__T5s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.23900" : Standard__natural.natural; rec__elements "model_trace:.23907" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.23935" : Standard__positive.positive }
 
 function __split_fields_SIZE3__projection #"system.ads" 1 0 0# "model_trace:.23900" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE3__projection
 
 meta "inline : no" function __split_fields_SIZE3__projection
 
 function __split_fields_ELEMENTS3__projection #"stations.ads" 14 0 0# "model_trace:.23907" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS3__projection
 
 meta "inline : no" function __split_fields_ELEMENTS3__projection
 
 function __split_fields_HEAD3__projection #"stations.ads" 14 0 0# "model_trace:.23935" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD3__projection
 
 meta "inline : no" function __split_fields_HEAD3__projection
 
 type __split_fields__ref #"stations.ads" 14 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_25__projection #"stations.ads" 14 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_25__projection
 
 meta "inline : no" function __split_fields__ref_25__projection
 
 val __split_fields__havoc #"stations.ads" 14 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type tintracksS #"stations.ads" 14 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function tintracksS___projection #"stations.ads" 14 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function tintracksS___projection
 
 meta "inline : no" function tintracksS___projection
 
 function tintracksS_2__projection #"stations.ads" 14 0 0# 
   (a : tintracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function tintracksS_2__projection
 
 meta "inline : no" function tintracksS_2__projection
 
 function to_base #"stations.ads" 14 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__TintracksS__TT5sP1.first Stations__TintracksS__TT5sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 14 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : tintracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___141 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___141)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__size_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 14 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__elements_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 14 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__head_ #"stations.ads" 14 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 14 0 0# 
   (a : tintracksS) (b : tintracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__TintracksS__T5s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 14 0 0# 
   (a : tintracksS) (b : tintracksS) : bool
 
 function value__size #"stations.ads" 14 0 0# 
   : int
 
 function object__size #"stations.ads" 14 0 0# 
   (a : tintracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : tintracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 14 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 14 0 0# 
   : tintracksS
 
 type tintracksS__ref #"stations.ads" 14 0 0# =
  { mutable tintracksS__content "model_trace:" : tintracksS }
 
 function tintracksS__ref___projection #"stations.ads" 14 0 0# 
   (a : tintracksS__ref) : tintracksS =
  a.tintracksS__content
 
 meta "model_projection" function tintracksS__ref___projection
 
 meta "inline : no" function tintracksS__ref___projection
 
 val tintracksS__havoc #"stations.ads" 14 0 0# 
   (x : tintracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT6sP1" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS__TT6sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT6sP1 #"stations.ads" 15 0 0# 
 
 function first #"stations.ads" 15 0 0# 
   : int =
  1
 
 function last #"stations.ads" 15 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 15 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT6sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT6sP1__ref #"stations.ads" 15 0 0# =
  { mutable tT6sP1__content "model_trace:" : tT6sP1 }
 
 function tT6sP1__ref___projection #"stations.ads" 15 0 0# 
   (a : tT6sP1__ref) : tT6sP1 =
  a.tT6sP1__content
 
 meta "model_projection" function tT6sP1__ref___projection
 
 meta "inline : no" function tT6sP1__ref___projection
 
 val tT6sP1__havoc #"stations.ads" 15 0 0# 
   (x : tT6sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6s" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 15 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TouttracksS" defined at stations.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stations__TouttracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__TouttracksS__TT6sP1
 use        Stations__TouttracksS__T6s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.23965" : Standard__natural.natural; rec__elements "model_trace:.23972" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24000" : Standard__positive.positive }
 
 function __split_fields_SIZE4__projection #"system.ads" 1 0 0# "model_trace:.23965" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE4__projection
 
 meta "inline : no" function __split_fields_SIZE4__projection
 
 function __split_fields_ELEMENTS4__projection #"stations.ads" 15 0 0# "model_trace:.23972" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS4__projection
 
 meta "inline : no" function __split_fields_ELEMENTS4__projection
 
 function __split_fields_HEAD4__projection #"stations.ads" 15 0 0# "model_trace:.24000" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD4__projection
 
 meta "inline : no" function __split_fields_HEAD4__projection
 
 type __split_fields__ref #"stations.ads" 15 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_26__projection #"stations.ads" 15 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_26__projection
 
 meta "inline : no" function __split_fields__ref_26__projection
 
 val __split_fields__havoc #"stations.ads" 15 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type touttracksS #"stations.ads" 15 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function touttracksS___projection #"stations.ads" 15 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function touttracksS___projection
 
 meta "inline : no" function touttracksS___projection
 
 function touttracksS_2__projection #"stations.ads" 15 0 0# 
   (a : touttracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function touttracksS_2__projection
 
 meta "inline : no" function touttracksS_2__projection
 
 function to_base #"stations.ads" 15 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__TouttracksS__TT6sP1.first Stations__TouttracksS__TT6sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 15 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : touttracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___142 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___142)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__size_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 15 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__elements_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 15 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__head_ #"stations.ads" 15 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 15 0 0# 
   (a : touttracksS) (b : touttracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__TouttracksS__T6s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 15 0 0# 
   (a : touttracksS) (b : touttracksS) : bool
 
 function value__size #"stations.ads" 15 0 0# 
   : int
 
 function object__size #"stations.ads" 15 0 0# 
   (a : touttracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : touttracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 15 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 15 0 0# 
   : touttracksS
 
 type touttracksS__ref #"stations.ads" 15 0 0# =
  { mutable touttracksS__content "model_trace:" : touttracksS }
 
 function touttracksS__ref___projection #"stations.ads" 15 0 0# 
   (a : touttracksS__ref) : touttracksS =
  a.touttracksS__content
 
 meta "model_projection" function touttracksS__ref___projection
 
 meta "inline : no" function touttracksS__ref___projection
 
 val touttracksS__havoc #"stations.ads" 15 0 0# 
   (x : touttracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT8sP1" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s__TT8sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT8sP1 #"stations.ads" 22 0 0# 
 
 function first #"stations.ads" 22 0 0# 
   : int =
  1
 
 function last #"stations.ads" 22 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 22 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT8sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT8sP1__ref #"stations.ads" 22 0 0# =
  { mutable tT8sP1__content "model_trace:" : tT8sP1 }
 
 function tT8sP1__ref___projection #"stations.ads" 22 0 0# 
   (a : tT8sP1__ref) : tT8sP1 =
  a.tT8sP1__content
 
 meta "model_projection" function tT8sP1__ref___projection
 
 meta "inline : no" function tT8sP1__ref___projection
 
 val tT8sP1__havoc #"stations.ads" 22 0 0# 
   (x : tT8sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 22 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at stations.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s__T8s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.24028" : Standard__natural.natural; rec__elements "model_trace:.24035" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24063" : Standard__positive.positive }
 
 function __split_fields_SIZE5__projection #"system.ads" 1 0 0# "model_trace:.24028" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE5__projection
 
 meta "inline : no" function __split_fields_SIZE5__projection
 
 function __split_fields_ELEMENTS5__projection #"stations.ads" 22 0 0# "model_trace:.24035" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS5__projection
 
 meta "inline : no" function __split_fields_ELEMENTS5__projection
 
 function __split_fields_HEAD5__projection #"stations.ads" 22 0 0# "model_trace:.24063" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD5__projection
 
 meta "inline : no" function __split_fields_HEAD5__projection
 
 type __split_fields__ref #"stations.ads" 22 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_27__projection #"stations.ads" 22 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_27__projection
 
 meta "inline : no" function __split_fields__ref_27__projection
 
 val __split_fields__havoc #"stations.ads" 22 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t7s #"stations.ads" 22 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t7s___projection #"stations.ads" 22 0 0# 
   (a : t7s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t7s___projection
 
 meta "inline : no" function t7s___projection
 
 function t7s_2__projection #"stations.ads" 22 0 0# 
   (a : t7s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t7s_2__projection
 
 meta "inline : no" function t7s_2__projection
 
 function to_base #"stations.ads" 22 0 0# 
   (a : t7s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T7s__TT8sP1.first Stations__station__T7s__TT8sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 22 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t7s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___143 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___143)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t7s)  =
  true
 
 val rec__size_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 22 0 0# 
   (a : t7s)  =
  true
 
 val rec__elements_ #"stations.ads" 22 0 0# 
   (a : t7s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 22 0 0# 
   (a : t7s)  =
  true
 
 val rec__head_ #"stations.ads" 22 0 0# 
   (a : t7s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 22 0 0# 
   (a : t7s) (b : t7s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T7s__T8s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 22 0 0# 
   (a : t7s) (b : t7s) : bool
 
 function value__size #"stations.ads" 22 0 0# 
   : int
 
 function object__size #"stations.ads" 22 0 0# 
   (a : t7s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t7s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 22 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 22 0 0# 
   : t7s
 
 type t7s__ref #"stations.ads" 22 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"stations.ads" 22 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"stations.ads" 22 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT10sP1" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s__TT10sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT10sP1 #"stations.ads" 23 0 0# 
 
 function first #"stations.ads" 23 0 0# 
   : int =
  1
 
 function last #"stations.ads" 23 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 23 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT10sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT10sP1__ref #"stations.ads" 23 0 0# =
  { mutable tT10sP1__content "model_trace:" : tT10sP1 }
 
 function tT10sP1__ref___projection #"stations.ads" 23 0 0# 
   (a : tT10sP1__ref) : tT10sP1 =
  a.tT10sP1__content
 
 meta "model_projection" function tT10sP1__ref___projection
 
 meta "inline : no" function tT10sP1__ref___projection
 
 val tT10sP1__havoc #"stations.ads" 23 0 0# 
   (x : tT10sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"stations.ads" 23 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9s" defined at stations.ads:23, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s__T10s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.24091" : Standard__natural.natural; rec__elements "model_trace:.24098" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24126" : Standard__positive.positive }
 
 function __split_fields_SIZE6__projection #"system.ads" 1 0 0# "model_trace:.24091" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE6__projection
 
 meta "inline : no" function __split_fields_SIZE6__projection
 
 function __split_fields_ELEMENTS6__projection #"stations.ads" 23 0 0# "model_trace:.24098" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS6__projection
 
 meta "inline : no" function __split_fields_ELEMENTS6__projection
 
 function __split_fields_HEAD6__projection #"stations.ads" 23 0 0# "model_trace:.24126" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD6__projection
 
 meta "inline : no" function __split_fields_HEAD6__projection
 
 type __split_fields__ref #"stations.ads" 23 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_28__projection #"stations.ads" 23 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_28__projection
 
 meta "inline : no" function __split_fields__ref_28__projection
 
 val __split_fields__havoc #"stations.ads" 23 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t9s #"stations.ads" 23 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t9s___projection #"stations.ads" 23 0 0# 
   (a : t9s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t9s___projection
 
 meta "inline : no" function t9s___projection
 
 function t9s_2__projection #"stations.ads" 23 0 0# 
   (a : t9s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t9s_2__projection
 
 meta "inline : no" function t9s_2__projection
 
 function to_base #"stations.ads" 23 0 0# 
   (a : t9s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T9s__TT10sP1.first Stations__station__T9s__TT10sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 23 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t9s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___144 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___144)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t9s)  =
  true
 
 val rec__size_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 23 0 0# 
   (a : t9s)  =
  true
 
 val rec__elements_ #"stations.ads" 23 0 0# 
   (a : t9s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 23 0 0# 
   (a : t9s)  =
  true
 
 val rec__head_ #"stations.ads" 23 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 23 0 0# 
   (a : t9s) (b : t9s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T9s__T10s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 23 0 0# 
   (a : t9s) (b : t9s) : bool
 
 function value__size #"stations.ads" 23 0 0# 
   : int
 
 function object__size #"stations.ads" 23 0 0# 
   (a : t9s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t9s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 23 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 23 0 0# 
   : t9s
 
 type t9s__ref #"stations.ads" 23 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"stations.ads" 23 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"stations.ads" 23 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT12sP1" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s__TT12sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT12sP1 #"stations.ads" 24 0 0# 
 
 function first #"stations.ads" 24 0 0# 
   : int =
  1
 
 function last #"stations.ads" 24 0 0# 
   : int =
  100
 
 predicate in_range #"stations.ads" 24 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT12sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT12sP1__ref #"stations.ads" 24 0 0# =
  { mutable tT12sP1__content "model_trace:" : tT12sP1 }
 
 function tT12sP1__ref___projection #"stations.ads" 24 0 0# 
   (a : tT12sP1__ref) : tT12sP1 =
  a.tT12sP1__content
 
 meta "model_projection" function tT12sP1__ref___projection
 
 meta "inline : no" function tT12sP1__ref___projection
 
 val tT12sP1__havoc #"stations.ads" 24 0 0# 
   (x : tT12sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data

 type component_type #"stations.ads" 24 0 0# =
  Types__list_od__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Types__list_od__data.map, 
 function array_bool_eq = Array__Int__Types__list_od__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at stations.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Stations__station__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s__T12s
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Types__list_od__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.24154" : Standard__natural.natural; rec__elements "model_trace:.24161" : Array__Int__Types__list_od__data.map; rec__head "model_trace:.24189" : Standard__positive.positive }
 
 function __split_fields_SIZE7__projection #"system.ads" 1 0 0# "model_trace:.24154" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE7__projection
 
 meta "inline : no" function __split_fields_SIZE7__projection
 
 function __split_fields_ELEMENTS7__projection #"stations.ads" 24 0 0# "model_trace:.24161" 
   (a : __split_fields) : Array__Int__Types__list_od__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS7__projection
 
 meta "inline : no" function __split_fields_ELEMENTS7__projection
 
 function __split_fields_HEAD7__projection #"stations.ads" 24 0 0# "model_trace:.24189" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD7__projection
 
 meta "inline : no" function __split_fields_HEAD7__projection
 
 type __split_fields__ref #"stations.ads" 24 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_29__projection #"stations.ads" 24 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_29__projection
 
 meta "inline : no" function __split_fields__ref_29__projection
 
 val __split_fields__havoc #"stations.ads" 24 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t11s #"stations.ads" 24 0 0# =
  { __split_discrs "model_trace:" : Types__list_od__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t11s___projection #"stations.ads" 24 0 0# 
   (a : t11s) : Types__list_od__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t11s___projection
 
 meta "inline : no" function t11s___projection
 
 function t11s_2__projection #"stations.ads" 24 0 0# 
   (a : t11s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t11s_2__projection
 
 meta "inline : no" function t11s_2__projection
 
 function to_base #"stations.ads" 24 0 0# 
   (a : t11s) : Types__list_od__list_ptr.list_ptr =
  { Types__list_od__list_ptr.__split_discrs = a.__split_discrs; Types__list_od__list_ptr.__split_fields = { Types__list_od__list_ptr.rec__size = a.__split_fields.rec__size; Types__list_od__list_ptr.rec__elements = (Types__list_od__list_ptr__T4s.of_array a.__split_fields.rec__elements Stations__station__T11s__TT12sP1.first Stations__station__T11s__TT12sP1.last); Types__list_od__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"stations.ads" 24 0 0# 
   (r : Types__list_od__list_ptr.list_ptr) : t11s =
  { __split_discrs = r.Types__list_od__list_ptr.__split_discrs; __split_fields = { rec__size = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__size; rec__elements = (let temp___145 = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__elements in (
   (Types__list_od__list_ptr__T4s.to_array temp___145)))
  ; rec__head = r.Types__list_od__list_ptr.__split_fields.Types__list_od__list_ptr.rec__head } }
 
 val rec__max_size_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Types__list_od__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t11s)  =
  true
 
 val rec__size_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"stations.ads" 24 0 0# 
   (a : t11s)  =
  true
 
 val rec__elements_ #"stations.ads" 24 0 0# 
   (a : t11s) : Array__Int__Types__list_od__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"stations.ads" 24 0 0# 
   (a : t11s)  =
  true
 
 val rec__head_ #"stations.ads" 24 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"stations.ads" 24 0 0# 
   (a : t11s) (b : t11s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Types__list_od__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Types__list_od__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Stations__station__T11s__T12s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 24 0 0# 
   (a : t11s) (b : t11s) : bool
 
 function value__size #"stations.ads" 24 0 0# 
   : int
 
 function object__size #"stations.ads" 24 0 0# 
   (a : t11s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t11s.
   ((object__size a) >= 0))
 
 predicate in_range #"stations.ads" 24 0 0# 
   (rec__max_size : int) (a : Types__list_od__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size a.Types__list_od__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"stations.ads" 24 0 0# 
   : t11s
 
 type t11s__ref #"stations.ads" 24 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref___projection #"stations.ads" 24 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref___projection
 
 meta "inline : no" function t11s__ref___projection
 
 val t11s__havoc #"stations.ads" 24 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "station" defined at stations.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Stations__station
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s

 type __split_fields #"stations.ads" 24 0 0# =
  { rec__id "model_trace:.10666" : Standard__natural.natural; rec__location "model_trace:.10677" : Types__station_locations.station_locations; rec__trainid "model_trace:.10692" : Standard__natural.natural; rec__incoming "model_trace:.10703" : Stations__station__T7s.t7s; rec__outgoing "model_trace:.10720" : Stations__station__T9s.t9s; rec__trackslineoriginanddestination "model_trace:.10737" : Stations__station__T11s.t11s }
 
 function __split_fields_ID4__projection #"stations.ads" 24 0 0# "model_trace:.10666" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID4__projection
 
 meta "inline : no" function __split_fields_ID4__projection
 
 function __split_fields_Location__projection #"stations.ads" 17 0 0# "model_trace:.10677" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location__projection
 
 meta "inline : no" function __split_fields_Location__projection
 
 function __split_fields_TrainID2__projection #"stations.ads" 17 0 0# "model_trace:.10692" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__trainid
 
 meta "model_projection" function __split_fields_TrainID2__projection
 
 meta "inline : no" function __split_fields_TrainID2__projection
 
 function __split_fields_Incoming__projection #"stations.ads" 17 0 0# "model_trace:.10703" 
   (a : __split_fields) : Stations__station__T7s.t7s =
  a.rec__incoming
 
 meta "model_projection" function __split_fields_Incoming__projection
 
 meta "inline : no" function __split_fields_Incoming__projection
 
 function __split_fields_Outgoing__projection #"stations.ads" 17 0 0# "model_trace:.10720" 
   (a : __split_fields) : Stations__station__T9s.t9s =
  a.rec__outgoing
 
 meta "model_projection" function __split_fields_Outgoing__projection
 
 meta "inline : no" function __split_fields_Outgoing__projection
 
 function __split_fields_TracksLineOriginAndDestination__projection #"stations.ads" 17 0 0# "model_trace:.10737" 
   (a : __split_fields) : Stations__station__T11s.t11s =
  a.rec__trackslineoriginanddestination
 
 meta "model_projection" function __split_fields_TracksLineOriginAndDestination__projection
 
 meta "inline : no" function __split_fields_TracksLineOriginAndDestination__projection
 
 type __split_fields__ref #"stations.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_30__projection #"stations.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_30__projection
 
 meta "inline : no" function __split_fields__ref_30__projection
 
 val __split_fields__havoc #"stations.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type station #"stations.ads" 17 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function station___projection #"stations.ads" 17 0 0# 
   (a : station) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function station___projection
 
 meta "inline : no" function station___projection
 
 predicate id__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__id_ #"stations.ads" 17 0 0# 
   (a : station) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__location_ #"stations.ads" 17 0 0# 
   (a : station) : Types__station_locations.station_locations
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate trainid__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__trainid_ #"stations.ads" 17 0 0# 
   (a : station) : Standard__natural.natural
  requires { (trainid__pred a) }
  ensures { (result = a.__split_fields.rec__trainid) }
 
 predicate incoming__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__incoming_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T7s.t7s
  requires { (incoming__pred a) }
  ensures { (result = a.__split_fields.rec__incoming) }
 
 predicate outgoing__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__outgoing_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T9s.t9s
  requires { (outgoing__pred a) }
  ensures { (result = a.__split_fields.rec__outgoing) }
 
 predicate trackslineoriginanddestination__pred #"stations.ads" 17 0 0# 
   (a : station)  =
  true
 
 val rec__trackslineoriginanddestination_ #"stations.ads" 17 0 0# 
   (a : station) : Stations__station__T11s.t11s
  requires { (trackslineoriginanddestination__pred a) }
  ensures { (result = a.__split_fields.rec__trackslineoriginanddestination) }
 
 function bool_eq #"stations.ads" 17 0 0# 
   (a : station) (b : station) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Types__station_locations.to_rep a.__split_fields.rec__location) = (Types__station_locations.to_rep b.__split_fields.rec__location)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__trainid) = (Standard__natural.to_rep b.__split_fields.rec__trainid)) ) /\ ((Stations__station__T7s.bool_eq a.__split_fields.rec__incoming b.__split_fields.rec__incoming) = True) ) /\ ((Stations__station__T9s.bool_eq a.__split_fields.rec__outgoing b.__split_fields.rec__outgoing) = True) ) /\ ((Stations__station__T11s.bool_eq a.__split_fields.rec__trackslineoriginanddestination b.__split_fields.rec__trackslineoriginanddestination) = True) )) then (
   True) else (
   False))
 
 function user_eq #"stations.ads" 17 0 0# 
   (a : station) (b : station) : bool
 
 function value__size #"stations.ads" 17 0 0# 
   : int
 
 function object__size #"stations.ads" 17 0 0# 
   (a : station) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : station.
   ((object__size a) >= 0))
 
 function dummy #"stations.ads" 17 0 0# 
   : station
 
 type station__ref #"stations.ads" 17 0 0# =
  { mutable station__content "model_trace:" : station }
 
 function station__ref___projection #"stations.ads" 17 0 0# 
   (a : station__ref) : station =
  a.station__content
 
 meta "model_projection" function station__ref___projection
 
 meta "inline : no" function station__ref___projection
 
 val station__havoc #"stations.ads" 17 0 0# 
   (x : station__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT1sP1" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS__TT1sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT1sP1 #"trains.ads" 7 0 0# 
 
 function first #"trains.ads" 7 0 0# 
   : int =
  1
 
 function last #"trains.ads" 7 0 0# 
   : int =
  100
 
 predicate in_range #"trains.ads" 7 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT1sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT1sP1__ref #"trains.ads" 7 0 0# =
  { mutable tT1sP1__content "model_trace:" : tT1sP1 }
 
 function tT1sP1__ref___projection #"trains.ads" 7 0 0# 
   (a : tT1sP1__ref) : tT1sP1 =
  a.tT1sP1__content
 
 meta "model_projection" function tT1sP1__ref___projection
 
 meta "inline : no" function tT1sP1__ref___projection
 
 val tT1sP1__havoc #"trains.ads" 7 0 0# 
   (x : tT1sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"trains.ads" 7 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TintracksS" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TintracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Trains__TintracksS__TT1sP1
 use        Trains__TintracksS__T1s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.24236" : Standard__natural.natural; rec__elements "model_trace:.24243" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24271" : Standard__positive.positive }
 
 function __split_fields_SIZE8__projection #"system.ads" 1 0 0# "model_trace:.24236" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE8__projection
 
 meta "inline : no" function __split_fields_SIZE8__projection
 
 function __split_fields_ELEMENTS8__projection #"trains.ads" 7 0 0# "model_trace:.24243" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS8__projection
 
 meta "inline : no" function __split_fields_ELEMENTS8__projection
 
 function __split_fields_HEAD8__projection #"trains.ads" 7 0 0# "model_trace:.24271" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD8__projection
 
 meta "inline : no" function __split_fields_HEAD8__projection
 
 type __split_fields__ref #"trains.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_31__projection #"trains.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_31__projection
 
 meta "inline : no" function __split_fields__ref_31__projection
 
 val __split_fields__havoc #"trains.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type tintracksS #"trains.ads" 7 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function tintracksS_3__projection #"trains.ads" 7 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function tintracksS_3__projection
 
 meta "inline : no" function tintracksS_3__projection
 
 function tintracksS_4__projection #"trains.ads" 7 0 0# 
   (a : tintracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function tintracksS_4__projection
 
 meta "inline : no" function tintracksS_4__projection
 
 function to_base #"trains.ads" 7 0 0# 
   (a : tintracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Trains__TintracksS__TT1sP1.first Trains__TintracksS__TT1sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"trains.ads" 7 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : tintracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___146 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___146)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__size_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"trains.ads" 7 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__elements_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"trains.ads" 7 0 0# 
   (a : tintracksS)  =
  true
 
 val rec__head_ #"trains.ads" 7 0 0# 
   (a : tintracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"trains.ads" 7 0 0# 
   (a : tintracksS) (b : tintracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Trains__TintracksS__T1s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 7 0 0# 
   (a : tintracksS) (b : tintracksS) : bool
 
 function value__size #"trains.ads" 7 0 0# 
   : int
 
 function object__size #"trains.ads" 7 0 0# 
   (a : tintracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : tintracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"trains.ads" 7 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"trains.ads" 7 0 0# 
   : tintracksS
 
 type tintracksS__ref #"trains.ads" 7 0 0# =
  { mutable tintracksS__content "model_trace:" : tintracksS }
 
 function tintracksS__ref_2__projection #"trains.ads" 7 0 0# 
   (a : tintracksS__ref) : tintracksS =
  a.tintracksS__content
 
 meta "model_projection" function tintracksS__ref_2__projection
 
 meta "inline : no" function tintracksS__ref_2__projection
 
 val tintracksS__havoc #"trains.ads" 7 0 0# 
   (x : tintracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT2sP1" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS__TT2sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT2sP1 #"trains.ads" 8 0 0# 
 
 function first #"trains.ads" 8 0 0# 
   : int =
  1
 
 function last #"trains.ads" 8 0 0# 
   : int =
  100
 
 predicate in_range #"trains.ads" 8 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT2sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT2sP1__ref #"trains.ads" 8 0 0# =
  { mutable tT2sP1__content "model_trace:" : tT2sP1 }
 
 function tT2sP1__ref___projection #"trains.ads" 8 0 0# 
   (a : tT2sP1__ref) : tT2sP1 =
  a.tT2sP1__content
 
 meta "model_projection" function tT2sP1__ref___projection
 
 meta "inline : no" function tT2sP1__ref___projection
 
 val tT2sP1__havoc #"trains.ads" 8 0 0# 
   (x : tT2sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T2s" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"trains.ads" 8 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TouttracksS" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TouttracksS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Trains__TouttracksS__TT2sP1
 use        Trains__TouttracksS__T2s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.24301" : Standard__natural.natural; rec__elements "model_trace:.24308" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.24336" : Standard__positive.positive }
 
 function __split_fields_SIZE9__projection #"system.ads" 1 0 0# "model_trace:.24301" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE9__projection
 
 meta "inline : no" function __split_fields_SIZE9__projection
 
 function __split_fields_ELEMENTS9__projection #"trains.ads" 8 0 0# "model_trace:.24308" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS9__projection
 
 meta "inline : no" function __split_fields_ELEMENTS9__projection
 
 function __split_fields_HEAD9__projection #"trains.ads" 8 0 0# "model_trace:.24336" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD9__projection
 
 meta "inline : no" function __split_fields_HEAD9__projection
 
 type __split_fields__ref #"trains.ads" 8 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_32__projection #"trains.ads" 8 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_32__projection
 
 meta "inline : no" function __split_fields__ref_32__projection
 
 val __split_fields__havoc #"trains.ads" 8 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type touttracksS #"trains.ads" 8 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function touttracksS_3__projection #"trains.ads" 8 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function touttracksS_3__projection
 
 meta "inline : no" function touttracksS_3__projection
 
 function touttracksS_4__projection #"trains.ads" 8 0 0# 
   (a : touttracksS) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function touttracksS_4__projection
 
 meta "inline : no" function touttracksS_4__projection
 
 function to_base #"trains.ads" 8 0 0# 
   (a : touttracksS) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Trains__TouttracksS__TT2sP1.first Trains__TouttracksS__TT2sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"trains.ads" 8 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : touttracksS =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___147 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___147)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__size_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"trains.ads" 8 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__elements_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"trains.ads" 8 0 0# 
   (a : touttracksS)  =
  true
 
 val rec__head_ #"trains.ads" 8 0 0# 
   (a : touttracksS) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"trains.ads" 8 0 0# 
   (a : touttracksS) (b : touttracksS) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Trains__TouttracksS__T2s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 8 0 0# 
   (a : touttracksS) (b : touttracksS) : bool
 
 function value__size #"trains.ads" 8 0 0# 
   : int
 
 function object__size #"trains.ads" 8 0 0# 
   (a : touttracksS) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : touttracksS.
   ((object__size a) >= 0))
 
 predicate in_range #"trains.ads" 8 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"trains.ads" 8 0 0# 
   : touttracksS
 
 type touttracksS__ref #"trains.ads" 8 0 0# =
  { mutable touttracksS__content "model_trace:" : touttracksS }
 
 function touttracksS__ref_2__projection #"trains.ads" 8 0 0# 
   (a : touttracksS__ref) : touttracksS =
  a.touttracksS__content
 
 meta "model_projection" function touttracksS__ref_2__projection
 
 meta "inline : no" function touttracksS__ref_2__projection
 
 val touttracksS__havoc #"trains.ads" 8 0 0# 
   (x : touttracksS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"trains.ads" 11 0 0# 
 
 function first #"trains.ads" 11 0 0# 
   : int =
  1
 
 function last #"trains.ads" 11 0 0# 
   : int =
  7
 
 predicate in_range #"trains.ads" 11 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"trains.ads" 11 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_3__projection #"trains.ads" 11 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_3__projection
 
 meta "inline : no" function t3s__ref_3__projection
 
 val t3s__havoc #"trains.ads" 11 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 11 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5s" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t6s #"trains.ads" 12 0 0# 
 
 function first #"trains.ads" 12 0 0# 
   : int =
  1
 
 function last #"trains.ads" 12 0 0# 
   : int =
  4
 
 predicate in_range #"trains.ads" 12 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t6s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t6s__ref #"trains.ads" 12 0 0# =
  { mutable t6s__content "model_trace:" : t6s }
 
 function t6s__ref___projection #"trains.ads" 12 0 0# 
   (a : t6s__ref) : t6s =
  a.t6s__content
 
 meta "model_projection" function t6s__ref___projection
 
 meta "inline : no" function t6s__ref___projection
 
 val t6s__havoc #"trains.ads" 12 0 0# 
   (x : t6s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"trains.ads" 12 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T8s" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__train_location
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Tracks__track
 use        Stations__station
 use        Trains__train_location__T4s
 use        Trains__train_location__T7s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"system.ads" 1 0 0# =
  { rec__currentlocation "model_trace:.9499" : Array__Int__Standard__character.map; rec__none "model_trace:.9515" : Array__Int__Standard__character.map; rec__track "model_trace:.9531" : Tracks__track.track; rec__station "model_trace:.9543" : Stations__station.station }
 
 function __split_fields_currentLocation__projection #"stations.ads" 17 0 0# "model_trace:.9499" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__currentlocation
 
 meta "model_projection" function __split_fields_currentLocation__projection
 
 meta "inline : no" function __split_fields_currentLocation__projection
 
 function __split_fields_None__projection #"trains.ads" 9 0 0# "model_trace:.9515" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__none
 
 meta "model_projection" function __split_fields_None__projection
 
 meta "inline : no" function __split_fields_None__projection
 
 function __split_fields_Track__projection #"trains.ads" 9 0 0# "model_trace:.9531" 
   (a : __split_fields) : Tracks__track.track =
  a.rec__track
 
 meta "model_projection" function __split_fields_Track__projection
 
 meta "inline : no" function __split_fields_Track__projection
 
 function __split_fields_Station__projection #"trains.ads" 9 0 0# "model_trace:.9543" 
   (a : __split_fields) : Stations__station.station =
  a.rec__station
 
 meta "model_projection" function __split_fields_Station__projection
 
 meta "inline : no" function __split_fields_Station__projection
 
 type __split_fields__ref #"trains.ads" 9 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_33__projection #"trains.ads" 9 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_33__projection
 
 meta "inline : no" function __split_fields__ref_33__projection
 
 val __split_fields__havoc #"trains.ads" 9 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train_location #"trains.ads" 9 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train_location___projection #"trains.ads" 9 0 0# 
   (a : train_location) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train_location___projection
 
 meta "inline : no" function train_location___projection
 
 predicate currentlocation__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__currentlocation_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (currentlocation__pred a) }
  ensures { (result = a.__split_fields.rec__currentlocation) }
 
 predicate none__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__none_ #"trains.ads" 9 0 0# 
   (a : train_location) : Array__Int__Standard__character.map
  requires { (none__pred a) }
  ensures { (result = a.__split_fields.rec__none) }
 
 predicate track__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__track_ #"trains.ads" 9 0 0# 
   (a : train_location) : Tracks__track.track
  requires { (track__pred a) }
  ensures { (result = a.__split_fields.rec__track) }
 
 predicate station__pred #"trains.ads" 9 0 0# 
   (a : train_location)  =
  true
 
 val rec__station_ #"trains.ads" 9 0 0# 
   (a : train_location) : Stations__station.station
  requires { (station__pred a) }
  ensures { (result = a.__split_fields.rec__station) }
 
 function bool_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool =
  (if (( ( ( ((Trains__train_location__T4s.bool_eq a.__split_fields.rec__currentlocation b.__split_fields.rec__currentlocation) = True) /\ ((Trains__train_location__T7s.bool_eq a.__split_fields.rec__none b.__split_fields.rec__none) = True) ) /\ ((Tracks__track.bool_eq a.__split_fields.rec__track b.__split_fields.rec__track) = True) ) /\ ((Stations__station.bool_eq a.__split_fields.rec__station b.__split_fields.rec__station) = True) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 9 0 0# 
   (a : train_location) (b : train_location) : bool
 
 function value__size #"trains.ads" 9 0 0# 
   : int
 
 function object__size #"trains.ads" 9 0 0# 
   (a : train_location) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train_location.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 9 0 0# 
   : train_location
 
 type train_location__ref #"trains.ads" 9 0 0# =
  { mutable train_location__content "model_trace:" : train_location }
 
 function train_location__ref___projection #"trains.ads" 9 0 0# 
   (a : train_location__ref) : train_location =
  a.train_location__content
 
 meta "model_projection" function train_location__ref___projection
 
 meta "inline : no" function train_location__ref___projection
 
 val train_location__havoc #"trains.ads" 9 0 0# 
   (x : train_location__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "train" defined at trains.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Trains__train
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Trains__train_location

 type __split_fields #"trains.ads" 9 0 0# =
  { rec__id "model_trace:.9567" : Standard__natural.natural; rec__location "model_trace:.9578" : Trains__train_location.train_location; rec__origin "model_trace:.9588" : Types__station_locations.station_locations; rec__destination "model_trace:.9603" : Types__station_locations.station_locations; rec__state "model_trace:.9618" : Types__train_state.train_state; rec__start_run_time "model_trace:.9633" : Types__timetable.timetable }
 
 function __split_fields_ID5__projection #"types.ads" 14 0 0# "model_trace:.9567" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID5__projection
 
 meta "inline : no" function __split_fields_ID5__projection
 
 function __split_fields_Location2__projection #"trains.ads" 17 0 0# "model_trace:.9578" 
   (a : __split_fields) : Trains__train_location.train_location =
  a.rec__location
 
 meta "model_projection" function __split_fields_Location2__projection
 
 meta "inline : no" function __split_fields_Location2__projection
 
 function __split_fields_Origin3__projection #"trains.ads" 17 0 0# "model_trace:.9588" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__origin
 
 meta "model_projection" function __split_fields_Origin3__projection
 
 meta "inline : no" function __split_fields_Origin3__projection
 
 function __split_fields_Destination3__projection #"trains.ads" 17 0 0# "model_trace:.9603" 
   (a : __split_fields) : Types__station_locations.station_locations =
  a.rec__destination
 
 meta "model_projection" function __split_fields_Destination3__projection
 
 meta "inline : no" function __split_fields_Destination3__projection
 
 function __split_fields_State__projection #"trains.ads" 17 0 0# "model_trace:.9618" 
   (a : __split_fields) : Types__train_state.train_state =
  a.rec__state
 
 meta "model_projection" function __split_fields_State__projection
 
 meta "inline : no" function __split_fields_State__projection
 
 function __split_fields_Start_Run_Time__projection #"trains.ads" 17 0 0# "model_trace:.9633" 
   (a : __split_fields) : Types__timetable.timetable =
  a.rec__start_run_time
 
 meta "model_projection" function __split_fields_Start_Run_Time__projection
 
 meta "inline : no" function __split_fields_Start_Run_Time__projection
 
 type __split_fields__ref #"trains.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_34__projection #"trains.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_34__projection
 
 meta "inline : no" function __split_fields__ref_34__projection
 
 val __split_fields__havoc #"trains.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type train #"trains.ads" 17 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function train___projection #"trains.ads" 17 0 0# 
   (a : train) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function train___projection
 
 meta "inline : no" function train___projection
 
 predicate id__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__id_ #"trains.ads" 17 0 0# 
   (a : train) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 predicate location__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__location_ #"trains.ads" 17 0 0# 
   (a : train) : Trains__train_location.train_location
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }
 
 predicate origin__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__origin_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (origin__pred a) }
  ensures { (result = a.__split_fields.rec__origin) }
 
 predicate destination__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__destination_ #"trains.ads" 17 0 0# 
   (a : train) : Types__station_locations.station_locations
  requires { (destination__pred a) }
  ensures { (result = a.__split_fields.rec__destination) }
 
 predicate state__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__state_ #"trains.ads" 17 0 0# 
   (a : train) : Types__train_state.train_state
  requires { (state__pred a) }
  ensures { (result = a.__split_fields.rec__state) }
 
 predicate start_run_time__pred #"trains.ads" 17 0 0# 
   (a : train)  =
  true
 
 val rec__start_run_time_ #"trains.ads" 17 0 0# 
   (a : train) : Types__timetable.timetable
  requires { (start_run_time__pred a) }
  ensures { (result = a.__split_fields.rec__start_run_time) }
 
 function bool_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool =
  (if (( ( ( ( ( ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) /\ ((Trains__train_location.bool_eq a.__split_fields.rec__location b.__split_fields.rec__location) = True) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__origin) = (Types__station_locations.to_rep b.__split_fields.rec__origin)) ) /\ ((Types__station_locations.to_rep a.__split_fields.rec__destination) = (Types__station_locations.to_rep b.__split_fields.rec__destination)) ) /\ ((Types__train_state.to_rep a.__split_fields.rec__state) = (Types__train_state.to_rep b.__split_fields.rec__state)) ) /\ ((Types__timetable.to_rep a.__split_fields.rec__start_run_time) = (Types__timetable.to_rep b.__split_fields.rec__start_run_time)) )) then (
   True) else (
   False))
 
 function user_eq #"trains.ads" 17 0 0# 
   (a : train) (b : train) : bool
 
 function value__size #"trains.ads" 17 0 0# 
   : int
 
 function object__size #"trains.ads" 17 0 0# 
   (a : train) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : train.
   ((object__size a) >= 0))
 
 function dummy #"trains.ads" 17 0 0# 
   : train
 
 type train__ref #"trains.ads" 17 0 0# =
  { mutable train__content "model_trace:" : train }
 
 function train__ref___projection #"trains.ads" 17 0 0# 
   (a : train__ref) : train =
  a.train__content
 
 meta "model_projection" function train__ref___projection
 
 meta "inline : no" function train__ref___projection
 
 val train__havoc #"trains.ads" 17 0 0# 
   (x : train__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at sprint.ads:3, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 3 0 0# "model_projected" "model_trace:10782" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:3, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 4 0 0# "model_projected" "model_trace:10800" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_natural__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 4 0 0# "model" "model_trace:10809" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_natural__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 5 0 0# "model_projected" "model_trace:10827" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:5, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_train_state__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 5 0 0# "model" "model_trace:10836" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 8 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:5, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_train_state__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"sprint.ads" 6 0 0# "model_projected" "model_trace:10856" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at sprint.ads:6, created in Gnat2Why.Decls.Translate_Constant *)
module Sprint__print_station_locations__n
 use import "_gnatprove_standard".Main

 function n #"sprint.ads" 6 0 0# "model" "model_trace:10865" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at sprint.ads:6, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Sprint__print_station_locations__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data_type
 use export Trains__train
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  train
 
 function to_base #"trains.ads" 17 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_3__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_3__projection
 
 meta "inline : no" function data_type__ref_3__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:24914" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:24923" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.24786" : Railsystems__list_trains__data_type.data_type; rec__id "model_trace:.24796" : Standard__natural.natural }
 
 function __split_fields_DATA3__projection #"system.ads" 1 0 0# "model_trace:.24786" 
   (a : __split_fields) : Railsystems__list_trains__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA3__projection
 
 meta "inline : no" function __split_fields_DATA3__projection
 
 function __split_fields_ID6__projection #"list.ads" 90 0 0# "model_trace:.24796" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID6__projection
 
 meta "inline : no" function __split_fields_ID6__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_35__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_35__projection
 
 meta "inline : no" function __split_fields__ref_35__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_3__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_3__projection
 
 meta "inline : no" function data_3__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Railsystems__list_trains__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_trains__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_3__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_3__projection
 
 meta "inline : no" function data__ref_3__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_trains__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_trains__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_trains__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_3__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_3__projection
 
 meta "inline : no" function list_array__ref_3__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t3s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t3s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t3s__ref #"list.ads" 102 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_4__projection #"list.ads" 102 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_4__projection
 
 meta "inline : no" function t3s__ref_4__projection
 
 val t3s__havoc #"list.ads" 102 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T3s

 type component_type #"list.ads" 102 0 0# =
  Railsystems__list_trains__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Railsystems__list_trains__list_ptr__T3s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t4s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t4s__ref #"list.ads" 102 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref_3__projection #"list.ads" 102 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref_3__projection
 
 meta "inline : no" function t4s__ref_3__projection
 
 val t4s__havoc #"list.ads" 102 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_trains__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr__T4s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.24463" : Standard__positive.positive }
 
 function __split_discrs_3__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_3__projection
 
 meta "inline : no" function __split_discrs_3__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_3__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_3__projection
 
 meta "inline : no" function __split_discrs__ref_3__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.24830" : Standard__natural.natural; rec__elements "model_trace:.24841" : Railsystems__list_trains__list_ptr__T4s.t4s; rec__head "model_trace:.24856" : Standard__positive.positive }
 
 function __split_fields_SIZE10__projection #"system.ads" 1 0 0# "model_trace:.24830" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE10__projection
 
 meta "inline : no" function __split_fields_SIZE10__projection
 
 function __split_fields_ELEMENTS10__projection #"list.ads" 99 0 0# "model_trace:.24841" 
   (a : __split_fields) : Railsystems__list_trains__list_ptr__T4s.t4s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS10__projection
 
 meta "inline : no" function __split_fields_ELEMENTS10__projection
 
 function __split_fields_HEAD10__projection #"list.ads" 99 0 0# "model_trace:.24856" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD10__projection
 
 meta "inline : no" function __split_fields_HEAD10__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_36__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_36__projection
 
 meta "inline : no" function __split_fields__ref_36__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_5__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_5__projection
 
 meta "inline : no" function list_ptr_5__projection
 
 function list_ptr_6__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_6__projection
 
 meta "inline : no" function list_ptr_6__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Railsystems__list_trains__list_ptr__T4s.t4s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__list_trains__list_ptr__T4s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_3__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_3__projection
 
 meta "inline : no" function list_ptr__ref_3__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 46 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:24490" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_first__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 48 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_first
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_last__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 51 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_last
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 54 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 57 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:24575" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:24603" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function a #"list.ads" 62 0 0# 
   : Railsystems__list_trains__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:24650" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:24659" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:24704" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data

 function newvalue #"list.ads" 78 0 0# 
   : Railsystems__list_trains__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:24740" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_trains__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:24749" 
   : Railsystems__list_trains__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "data_type" defined at list.ads:21 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data_type
 use export Stations__station
 use import "_gnatprove_standard".Main

 type data_type #"list.ads" 21 0 0# =
  station
 
 function to_base #"stations.ads" 17 0 0# 
   (a : data_type) : data_type =
  a
 
 function of_base #"list.ads" 21 0 0# 
   (a : data_type) : data_type =
  a
 
 type data_type__ref #"list.ads" 21 0 0# =
  { mutable data_type__content "model_trace:" : data_type }
 
 function data_type__ref_4__projection #"list.ads" 21 0 0# 
   (a : data_type__ref) : data_type =
  a.data_type__content
 
 meta "model_projection" function data_type__ref_4__projection
 
 meta "inline : no" function data_type__ref_4__projection
 
 val data_type__havoc #"list.ads" 21 0 0# 
   (x : data_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__e_id
 use import "_gnatprove_standard".Main

 function e_id #"list.ads" 22 0 0# "model" "model_trace:25499" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__no_found
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function no_found #"list.ads" 23 0 0# "model_projected" "model_trace:25508" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module for axiomatizing type "data" defined at list.ads:90 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_stations__data_type

 type __split_fields #"list.ads" 21 0 0# =
  { rec__data "model_trace:.25371" : Railsystems__list_stations__data_type.data_type; rec__id "model_trace:.25381" : Standard__natural.natural }
 
 function __split_fields_DATA4__projection #"system.ads" 1 0 0# "model_trace:.25371" 
   (a : __split_fields) : Railsystems__list_stations__data_type.data_type =
  a.rec__data
 
 meta "model_projection" function __split_fields_DATA4__projection
 
 meta "inline : no" function __split_fields_DATA4__projection
 
 function __split_fields_ID7__projection #"list.ads" 90 0 0# "model_trace:.25381" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__id
 
 meta "model_projection" function __split_fields_ID7__projection
 
 meta "inline : no" function __split_fields_ID7__projection
 
 type __split_fields__ref #"list.ads" 90 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_37__projection #"list.ads" 90 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_37__projection
 
 meta "inline : no" function __split_fields__ref_37__projection
 
 val __split_fields__havoc #"list.ads" 90 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type data #"list.ads" 90 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function data_4__projection #"list.ads" 90 0 0# 
   (a : data) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function data_4__projection
 
 meta "inline : no" function data_4__projection
 
 predicate data__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__data_ #"list.ads" 90 0 0# 
   (a : data) : Railsystems__list_stations__data_type.data_type
  requires { (data__pred a) }
  ensures { (result = a.__split_fields.rec__data) }
 
 predicate id__pred #"list.ads" 90 0 0# 
   (a : data)  =
  true
 
 val rec__id_ #"list.ads" 90 0 0# 
   (a : data) : Standard__natural.natural
  requires { (id__pred a) }
  ensures { (result = a.__split_fields.rec__id) }
 
 function bool_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool =
  (if (( ((Railsystems__list_stations__data_type.bool_eq a.__split_fields.rec__data b.__split_fields.rec__data) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__id) = (Standard__natural.to_rep b.__split_fields.rec__id)) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 90 0 0# 
   (a : data) (b : data) : bool
 
 function value__size #"list.ads" 90 0 0# 
   : int
 
 function object__size #"list.ads" 90 0 0# 
   (a : data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : data.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 90 0 0# 
   : data
 
 type data__ref #"list.ads" 90 0 0# =
  { mutable data__content "model_trace:" : data }
 
 function data__ref_4__projection #"list.ads" 90 0 0# 
   (a : data__ref) : data =
  a.data__content
 
 meta "model_projection" function data__ref_4__projection
 
 meta "inline : no" function data__ref_4__projection
 
 val data__havoc #"list.ads" 90 0 0# 
   (x : data__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Railsystems__list_stations__data
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data

 function index_I1_one #"list.ads" 90 0 0# 
   : int =
  1
 
 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_stations__data.data
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"list.ads" 90 0 0# =
  Railsystems__list_stations__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type list_array #"list.ads" 98 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type list_array__ref #"list.ads" 98 0 0# =
  { mutable list_array__content "model_trace:" : list_array }
 
 function list_array__ref_4__projection #"list.ads" 98 0 0# 
   (a : list_array__ref) : list_array =
  a.list_array__content
 
 meta "model_projection" function list_array__ref_4__projection
 
 meta "inline : no" function list_array__ref_4__projection
 
 val list_array__havoc #"list.ads" 98 0 0# 
   (x : list_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t7s #"list.ads" 102 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t7s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t7s__ref #"list.ads" 102 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref_2__projection #"list.ads" 102 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref_2__projection
 
 meta "inline : no" function t7s__ref_2__projection
 
 val t7s__havoc #"list.ads" 102 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T7s

 type component_type #"list.ads" 102 0 0# =
  Railsystems__list_stations__data.data
 
 function index_1_id #"list.ads" 90 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Railsystems__list_stations__list_ptr__T7s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t8s #"list.ads" 102 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t8s__ref #"list.ads" 102 0 0# =
  { mutable t8s__content "model_trace:" : t8s }
 
 function t8s__ref___projection #"list.ads" 102 0 0# 
   (a : t8s__ref) : t8s =
  a.t8s__content
 
 meta "model_projection" function t8s__ref___projection
 
 meta "inline : no" function t8s__ref___projection
 
 val t8s__havoc #"list.ads" 102 0 0# 
   (x : t8s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__list_stations__list_ptr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr__T8s

 type __split_discrs #"list.ads" 102 0 0# =
  { rec__max_size "model_trace:.25048" : Standard__positive.positive }
 
 function __split_discrs_4__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__positive.positive =
  a.rec__max_size
 
 meta "model_projection" function __split_discrs_4__projection
 
 meta "inline : no" function __split_discrs_4__projection
 
 type __split_discrs__ref #"list.ads" 99 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_4__projection #"list.ads" 99 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_4__projection
 
 meta "inline : no" function __split_discrs__ref_4__projection
 
 val __split_discrs__havoc #"list.ads" 99 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"list.ads" 99 0 0# =
  { rec__size "model_trace:.25415" : Standard__natural.natural; rec__elements "model_trace:.25426" : Railsystems__list_stations__list_ptr__T8s.t8s; rec__head "model_trace:.25441" : Standard__positive.positive }
 
 function __split_fields_SIZE11__projection #"system.ads" 1 0 0# "model_trace:.25415" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE11__projection
 
 meta "inline : no" function __split_fields_SIZE11__projection
 
 function __split_fields_ELEMENTS11__projection #"list.ads" 99 0 0# "model_trace:.25426" 
   (a : __split_fields) : Railsystems__list_stations__list_ptr__T8s.t8s =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS11__projection
 
 meta "inline : no" function __split_fields_ELEMENTS11__projection
 
 function __split_fields_HEAD11__projection #"list.ads" 99 0 0# "model_trace:.25441" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD11__projection
 
 meta "inline : no" function __split_fields_HEAD11__projection
 
 type __split_fields__ref #"list.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_38__projection #"list.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_38__projection
 
 meta "inline : no" function __split_fields__ref_38__projection
 
 val __split_fields__havoc #"list.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list_ptr #"list.ads" 99 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function list_ptr_7__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function list_ptr_7__projection
 
 meta "inline : no" function list_ptr_7__projection
 
 function list_ptr_8__projection #"list.ads" 99 0 0# 
   (a : list_ptr) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_ptr_8__projection
 
 meta "inline : no" function list_ptr_8__projection
 
 val rec__max_size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__size_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__elements_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Railsystems__list_stations__list_ptr__T8s.t8s
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"list.ads" 99 0 0# 
   (a : list_ptr)  =
  true
 
 val rec__head_ #"list.ads" 99 0 0# 
   (a : list_ptr) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__list_stations__list_ptr__T8s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"list.ads" 99 0 0# 
   (a : list_ptr) (b : list_ptr) : bool
 
 function value__size #"list.ads" 99 0 0# 
   : int
 
 function object__size #"list.ads" 99 0 0# 
   (a : list_ptr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list_ptr.
   ((object__size a) >= 0))
 
 function dummy #"list.ads" 99 0 0# 
   : list_ptr
 
 type list_ptr__ref #"list.ads" 99 0 0# =
  { mutable list_ptr__content "model_trace:" : list_ptr }
 
 function list_ptr__ref_4__projection #"list.ads" 99 0 0# 
   (a : list_ptr__ref) : list_ptr =
  a.list_ptr__content
 
 meta "model_projection" function list_ptr__ref_4__projection
 
 meta "inline : no" function list_ptr__ref_4__projection
 
 val list_ptr__havoc #"list.ads" 99 0 0# 
   (x : list_ptr__ref) : unit
  writes {x}

end

(* Module for defining the constant "a" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 46 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "d" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__contains__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 46 0 0# "model_projected" "model_trace:25075" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__contains__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contains" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__contains
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool

end

(* Module for defining the constant "a" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_first__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 48 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_first__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_first" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_first
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_last__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 51 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_last__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_last" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_last
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_size__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 54 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_size__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_size" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_size
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int

end

(* Module for defining the constant "a" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 57 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 57 0 0# "model" "model_trace:25160" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 60 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__get_element_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 60 0 0# "model" "model_trace:25188" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__get_element_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__get_element_by_id
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr

 function get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type

end

(* Module for defining the constant "a" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__full__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function a #"list.ads" 62 0 0# 
   : Railsystems__list_stations__list_ptr.list_ptr
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__full__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__full
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 function full #"list.ads" 62 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool

end

(* Module for defining the constant "d" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__d
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function d #"list.ads" 64 0 0# "model_projected" "model_trace:25235" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__append__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 64 0 0# "model" "model_trace:25244" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace__location
 use import "_gnatprove_standard".Main

 function location #"list.ads" 78 0 0# "model" "model_trace:25289" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data

 function newvalue #"list.ads" 78 0 0# 
   : Railsystems__list_stations__data.data
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__id
 use import "_gnatprove_standard".Main

 function id #"list.ads" 82 0 0# "model" "model_trace:25325" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvalue" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__list_stations__replace_by_id__newvalue
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type

 function newvalue #"list.ads" 82 0 0# "model_projected" "model_trace:25334" 
   : Railsystems__list_stations__data_type.data_type
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 21 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "newvalue" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__newvalue__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TT10sP1" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s__TT10sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT10sP1 #"railsystems.ads" 28 0 0# 
 
 function first #"railsystems.ads" 28 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 28 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 28 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT10sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT10sP1__ref #"railsystems.ads" 28 0 0# =
  { mutable tT10sP1__content "model_trace:" : tT10sP1 }
 
 function tT10sP1__ref_2__projection #"railsystems.ads" 28 0 0# 
   (a : tT10sP1__ref) : tT10sP1 =
  a.tT10sP1__content
 
 meta "model_projection" function tT10sP1__ref_2__projection
 
 meta "inline : no" function tT10sP1__ref_2__projection
 
 val tT10sP1__havoc #"railsystems.ads" 28 0 0# 
   (x : tT10sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type component_type #"railsystems.ads" 28 0 0# =
  Railsystems__list_trains__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_trains__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_trains__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9s" defined at railsystems.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__railsystem__T9s__TT10sP1
 use        Railsystems__railsystem__T9s__T10s
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.25604" : Standard__natural.natural; rec__elements "model_trace:.25611" : Array__Int__Railsystems__list_trains__data.map; rec__head "model_trace:.25639" : Standard__positive.positive }
 
 function __split_fields_SIZE12__projection #"system.ads" 1 0 0# "model_trace:.25604" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE12__projection
 
 meta "inline : no" function __split_fields_SIZE12__projection
 
 function __split_fields_ELEMENTS12__projection #"railsystems.ads" 28 0 0# "model_trace:.25611" 
   (a : __split_fields) : Array__Int__Railsystems__list_trains__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS12__projection
 
 meta "inline : no" function __split_fields_ELEMENTS12__projection
 
 function __split_fields_HEAD12__projection #"railsystems.ads" 28 0 0# "model_trace:.25639" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD12__projection
 
 meta "inline : no" function __split_fields_HEAD12__projection
 
 type __split_fields__ref #"railsystems.ads" 28 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_39__projection #"railsystems.ads" 28 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_39__projection
 
 meta "inline : no" function __split_fields__ref_39__projection
 
 val __split_fields__havoc #"railsystems.ads" 28 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t9s #"railsystems.ads" 28 0 0# =
  { __split_discrs "model_trace:" : Railsystems__list_trains__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t9s_3__projection #"railsystems.ads" 28 0 0# 
   (a : t9s) : Railsystems__list_trains__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t9s_3__projection
 
 meta "inline : no" function t9s_3__projection
 
 function t9s_4__projection #"railsystems.ads" 28 0 0# 
   (a : t9s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t9s_4__projection
 
 meta "inline : no" function t9s_4__projection
 
 function to_base #"railsystems.ads" 28 0 0# 
   (a : t9s) : Railsystems__list_trains__list_ptr.list_ptr =
  { Railsystems__list_trains__list_ptr.__split_discrs = a.__split_discrs; Railsystems__list_trains__list_ptr.__split_fields = { Railsystems__list_trains__list_ptr.rec__size = a.__split_fields.rec__size; Railsystems__list_trains__list_ptr.rec__elements = (Railsystems__list_trains__list_ptr__T4s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T9s__TT10sP1.first Railsystems__railsystem__T9s__TT10sP1.last); Railsystems__list_trains__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 28 0 0# 
   (r : Railsystems__list_trains__list_ptr.list_ptr) : t9s =
  { __split_discrs = r.Railsystems__list_trains__list_ptr.__split_discrs; __split_fields = { rec__size = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__size; rec__elements = (let temp___148 = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__elements in (
   (Railsystems__list_trains__list_ptr__T4s.to_array temp___148)))
  ; rec__head = r.Railsystems__list_trains__list_ptr.__split_fields.Railsystems__list_trains__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t9s)  =
  true
 
 val rec__size_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 28 0 0# 
   (a : t9s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Array__Int__Railsystems__list_trains__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 28 0 0# 
   (a : t9s)  =
  true
 
 val rec__head_ #"railsystems.ads" 28 0 0# 
   (a : t9s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 28 0 0# 
   (a : t9s) (b : t9s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Railsystems__list_trains__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T9s__T10s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 28 0 0# 
   (a : t9s) (b : t9s) : bool
 
 function value__size #"railsystems.ads" 28 0 0# 
   : int
 
 function object__size #"railsystems.ads" 28 0 0# 
   (a : t9s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t9s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 28 0 0# 
   (rec__max_size : int) (a : Railsystems__list_trains__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size a.Railsystems__list_trains__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 28 0 0# 
   : t9s
 
 type t9s__ref #"railsystems.ads" 28 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref_2__projection #"railsystems.ads" 28 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref_2__projection
 
 meta "inline : no" function t9s__ref_2__projection
 
 val t9s__havoc #"railsystems.ads" 28 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT12sP1" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s__TT12sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT12sP1 #"railsystems.ads" 29 0 0# 
 
 function first #"railsystems.ads" 29 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 29 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 29 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT12sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT12sP1__ref #"railsystems.ads" 29 0 0# =
  { mutable tT12sP1__content "model_trace:" : tT12sP1 }
 
 function tT12sP1__ref_2__projection #"railsystems.ads" 29 0 0# 
   (a : tT12sP1__ref) : tT12sP1 =
  a.tT12sP1__content
 
 meta "model_projection" function tT12sP1__ref_2__projection
 
 meta "inline : no" function tT12sP1__ref_2__projection
 
 val tT12sP1__havoc #"railsystems.ads" 29 0 0# 
   (x : tT12sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type component_type #"railsystems.ads" 29 0 0# =
  Railsystems__list_stations__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Railsystems__list_stations__data.map, 
 function array_bool_eq = Array__Int__Railsystems__list_stations__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at railsystems.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Railsystems__list_stations__list_ptr__T8s
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__railsystem__T11s__TT12sP1
 use        Railsystems__railsystem__T11s__T12s
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.25667" : Standard__natural.natural; rec__elements "model_trace:.25674" : Array__Int__Railsystems__list_stations__data.map; rec__head "model_trace:.25702" : Standard__positive.positive }
 
 function __split_fields_SIZE13__projection #"system.ads" 1 0 0# "model_trace:.25667" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE13__projection
 
 meta "inline : no" function __split_fields_SIZE13__projection
 
 function __split_fields_ELEMENTS13__projection #"railsystems.ads" 29 0 0# "model_trace:.25674" 
   (a : __split_fields) : Array__Int__Railsystems__list_stations__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS13__projection
 
 meta "inline : no" function __split_fields_ELEMENTS13__projection
 
 function __split_fields_HEAD13__projection #"railsystems.ads" 29 0 0# "model_trace:.25702" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD13__projection
 
 meta "inline : no" function __split_fields_HEAD13__projection
 
 type __split_fields__ref #"railsystems.ads" 29 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_40__projection #"railsystems.ads" 29 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_40__projection
 
 meta "inline : no" function __split_fields__ref_40__projection
 
 val __split_fields__havoc #"railsystems.ads" 29 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t11s #"railsystems.ads" 29 0 0# =
  { __split_discrs "model_trace:" : Railsystems__list_stations__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t11s_3__projection #"railsystems.ads" 29 0 0# 
   (a : t11s) : Railsystems__list_stations__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t11s_3__projection
 
 meta "inline : no" function t11s_3__projection
 
 function t11s_4__projection #"railsystems.ads" 29 0 0# 
   (a : t11s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t11s_4__projection
 
 meta "inline : no" function t11s_4__projection
 
 function to_base #"railsystems.ads" 29 0 0# 
   (a : t11s) : Railsystems__list_stations__list_ptr.list_ptr =
  { Railsystems__list_stations__list_ptr.__split_discrs = a.__split_discrs; Railsystems__list_stations__list_ptr.__split_fields = { Railsystems__list_stations__list_ptr.rec__size = a.__split_fields.rec__size; Railsystems__list_stations__list_ptr.rec__elements = (Railsystems__list_stations__list_ptr__T8s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T11s__TT12sP1.first Railsystems__railsystem__T11s__TT12sP1.last); Railsystems__list_stations__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 29 0 0# 
   (r : Railsystems__list_stations__list_ptr.list_ptr) : t11s =
  { __split_discrs = r.Railsystems__list_stations__list_ptr.__split_discrs; __split_fields = { rec__size = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__size; rec__elements = (let temp___149 = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__elements in (
   (Railsystems__list_stations__list_ptr__T8s.to_array temp___149)))
  ; rec__head = r.Railsystems__list_stations__list_ptr.__split_fields.Railsystems__list_stations__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t11s)  =
  true
 
 val rec__size_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 29 0 0# 
   (a : t11s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Array__Int__Railsystems__list_stations__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 29 0 0# 
   (a : t11s)  =
  true
 
 val rec__head_ #"railsystems.ads" 29 0 0# 
   (a : t11s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 29 0 0# 
   (a : t11s) (b : t11s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Railsystems__list_stations__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T11s__T12s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 29 0 0# 
   (a : t11s) (b : t11s) : bool
 
 function value__size #"railsystems.ads" 29 0 0# 
   : int
 
 function object__size #"railsystems.ads" 29 0 0# 
   (a : t11s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t11s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 29 0 0# 
   (rec__max_size : int) (a : Railsystems__list_stations__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size a.Railsystems__list_stations__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 29 0 0# 
   : t11s
 
 type t11s__ref #"railsystems.ads" 29 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref_2__projection #"railsystems.ads" 29 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref_2__projection
 
 meta "inline : no" function t11s__ref_2__projection
 
 val t11s__havoc #"railsystems.ads" 29 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TT14sP1" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s__TT14sP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tT14sP1 #"railsystems.ads" 30 0 0# 
 
 function first #"railsystems.ads" 30 0 0# 
   : int =
  1
 
 function last #"railsystems.ads" 30 0 0# 
   : int =
  100
 
 predicate in_range #"railsystems.ads" 30 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tT14sP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tT14sP1__ref #"railsystems.ads" 30 0 0# =
  { mutable tT14sP1__content "model_trace:" : tT14sP1 }
 
 function tT14sP1__ref___projection #"railsystems.ads" 30 0 0# 
   (a : tT14sP1__ref) : tT14sP1 =
  a.tT14sP1__content
 
 meta "model_projection" function tT14sP1__ref___projection
 
 meta "inline : no" function tT14sP1__ref___projection
 
 val tT14sP1__havoc #"railsystems.ads" 30 0 0# 
   (x : tT14sP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T14s" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s__T14s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type component_type #"railsystems.ads" 30 0 0# =
  Stations__list_tracks__data.data
 
 function first #"list.ads" 90 0 0# 
   : int =
  1
 
 function last #"list.ads" 90 0 0# 
   : int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Stations__list_tracks__data.map, 
 function array_bool_eq = Array__Int__Stations__list_tracks__data.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13s" defined at railsystems.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem__T13s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr
 use        Railsystems__railsystem__T13s__TT14sP1
 use        Railsystems__railsystem__T13s__T14s
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data

 type __split_fields #"list.ads" 90 0 0# =
  { rec__size "model_trace:.25730" : Standard__natural.natural; rec__elements "model_trace:.25737" : Array__Int__Stations__list_tracks__data.map; rec__head "model_trace:.25765" : Standard__positive.positive }
 
 function __split_fields_SIZE14__projection #"system.ads" 1 0 0# "model_trace:.25730" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__size
 
 meta "model_projection" function __split_fields_SIZE14__projection
 
 meta "inline : no" function __split_fields_SIZE14__projection
 
 function __split_fields_ELEMENTS14__projection #"railsystems.ads" 30 0 0# "model_trace:.25737" 
   (a : __split_fields) : Array__Int__Stations__list_tracks__data.map =
  a.rec__elements
 
 meta "model_projection" function __split_fields_ELEMENTS14__projection
 
 meta "inline : no" function __split_fields_ELEMENTS14__projection
 
 function __split_fields_HEAD14__projection #"railsystems.ads" 30 0 0# "model_trace:.25765" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__head
 
 meta "model_projection" function __split_fields_HEAD14__projection
 
 meta "inline : no" function __split_fields_HEAD14__projection
 
 type __split_fields__ref #"railsystems.ads" 30 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_41__projection #"railsystems.ads" 30 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_41__projection
 
 meta "inline : no" function __split_fields__ref_41__projection
 
 val __split_fields__havoc #"railsystems.ads" 30 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type t13s #"railsystems.ads" 30 0 0# =
  { __split_discrs "model_trace:" : Stations__list_tracks__list_ptr.__split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function t13s___projection #"railsystems.ads" 30 0 0# 
   (a : t13s) : Stations__list_tracks__list_ptr.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function t13s___projection
 
 meta "inline : no" function t13s___projection
 
 function t13s_2__projection #"railsystems.ads" 30 0 0# 
   (a : t13s) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function t13s_2__projection
 
 meta "inline : no" function t13s_2__projection
 
 function to_base #"railsystems.ads" 30 0 0# 
   (a : t13s) : Stations__list_tracks__list_ptr.list_ptr =
  { Stations__list_tracks__list_ptr.__split_discrs = a.__split_discrs; Stations__list_tracks__list_ptr.__split_fields = { Stations__list_tracks__list_ptr.rec__size = a.__split_fields.rec__size; Stations__list_tracks__list_ptr.rec__elements = (Stations__list_tracks__list_ptr__T4s.of_array a.__split_fields.rec__elements Railsystems__railsystem__T13s__TT14sP1.first Railsystems__railsystem__T13s__TT14sP1.last); Stations__list_tracks__list_ptr.rec__head = a.__split_fields.rec__head } }
 
 function of_base #"railsystems.ads" 30 0 0# 
   (r : Stations__list_tracks__list_ptr.list_ptr) : t13s =
  { __split_discrs = r.Stations__list_tracks__list_ptr.__split_discrs; __split_fields = { rec__size = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__size; rec__elements = (let temp___150 = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__elements in (
   (Stations__list_tracks__list_ptr__T4s.to_array temp___150)))
  ; rec__head = r.Stations__list_tracks__list_ptr.__split_fields.Stations__list_tracks__list_ptr.rec__head } }
 
 val rec__max_size_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__positive.positive
  requires { true }
  ensures { (result = a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) }
 
 predicate size__pred #"list.ads" 99 0 0# 
   (a : t13s)  =
  true
 
 val rec__size_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__natural.natural
  requires { (size__pred a) }
  ensures { (result = a.__split_fields.rec__size) }
 
 predicate elements__pred #"railsystems.ads" 30 0 0# 
   (a : t13s)  =
  true
 
 val rec__elements_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Array__Int__Stations__list_tracks__data.map
  requires { (elements__pred a) }
  ensures { (result = a.__split_fields.rec__elements) }
 
 predicate head__pred #"railsystems.ads" 30 0 0# 
   (a : t13s)  =
  true
 
 val rec__head_ #"railsystems.ads" 30 0 0# 
   (a : t13s) : Standard__positive.positive
  requires { (head__pred a) }
  ensures { (result = a.__split_fields.rec__head) }
 
 function bool_eq #"railsystems.ads" 30 0 0# 
   (a : t13s) (b : t13s) : bool =
  (if (( ( ( ((Standard__positive.to_rep a.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size) = (Standard__positive.to_rep b.__split_discrs.Stations__list_tracks__list_ptr.rec__max_size)) /\ ( (size__pred a) -> ((Standard__natural.to_rep a.__split_fields.rec__size) = (Standard__natural.to_rep b.__split_fields.rec__size)) ) ) /\ ( (elements__pred a) -> ((Railsystems__railsystem__T13s__T14s.bool_eq a.__split_fields.rec__elements b.__split_fields.rec__elements) = True) ) ) /\ ( (head__pred a) -> ((Standard__positive.to_rep a.__split_fields.rec__head) = (Standard__positive.to_rep b.__split_fields.rec__head)) ) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 30 0 0# 
   (a : t13s) (b : t13s) : bool
 
 function value__size #"railsystems.ads" 30 0 0# 
   : int
 
 function object__size #"railsystems.ads" 30 0 0# 
   (a : t13s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : t13s.
   ((object__size a) >= 0))
 
 predicate in_range #"railsystems.ads" 30 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr)  =
  (rec__max_size = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size a.Stations__list_tracks__list_ptr.__split_discrs)))
 
 val range_check_ #"list.ads" 99 0 0# 
   (rec__max_size : int) (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__list_ptr.list_ptr
  requires { (in_range rec__max_size a) }
  ensures { (result = a) }
 
 function dummy #"railsystems.ads" 30 0 0# 
   : t13s
 
 type t13s__ref #"railsystems.ads" 30 0 0# =
  { mutable t13s__content "model_trace:" : t13s }
 
 function t13s__ref___projection #"railsystems.ads" 30 0 0# 
   (a : t13s__ref) : t13s =
  a.t13s__content
 
 meta "model_projection" function t13s__ref___projection
 
 meta "inline : no" function t13s__ref___projection
 
 val t13s__havoc #"railsystems.ads" 30 0 0# 
   (x : t13s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "railsystem" defined at railsystems.ads:26, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__railsystem
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem__T13s

 type __split_fields #"railsystems.ads" 30 0 0# =
  { rec__all_trains "model_trace:.8141" : Railsystems__railsystem__T9s.t9s; rec__all_stations "model_trace:.8158" : Railsystems__railsystem__T11s.t11s; rec__all_tracks "model_trace:.8175" : Railsystems__railsystem__T13s.t13s }
 
 function __split_fields_All_Trains__projection #"railsystems.ads" 30 0 0# "model_trace:.8141" 
   (a : __split_fields) : Railsystems__railsystem__T9s.t9s =
  a.rec__all_trains
 
 meta "model_projection" function __split_fields_All_Trains__projection
 
 meta "inline : no" function __split_fields_All_Trains__projection
 
 function __split_fields_All_Stations__projection #"railsystems.ads" 26 0 0# "model_trace:.8158" 
   (a : __split_fields) : Railsystems__railsystem__T11s.t11s =
  a.rec__all_stations
 
 meta "model_projection" function __split_fields_All_Stations__projection
 
 meta "inline : no" function __split_fields_All_Stations__projection
 
 function __split_fields_All_Tracks__projection #"railsystems.ads" 26 0 0# "model_trace:.8175" 
   (a : __split_fields) : Railsystems__railsystem__T13s.t13s =
  a.rec__all_tracks
 
 meta "model_projection" function __split_fields_All_Tracks__projection
 
 meta "inline : no" function __split_fields_All_Tracks__projection
 
 type __split_fields__ref #"railsystems.ads" 26 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_42__projection #"railsystems.ads" 26 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_42__projection
 
 meta "inline : no" function __split_fields__ref_42__projection
 
 val __split_fields__havoc #"railsystems.ads" 26 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type railsystem #"railsystems.ads" 26 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function railsystem___projection #"railsystems.ads" 26 0 0# 
   (a : railsystem) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function railsystem___projection
 
 meta "inline : no" function railsystem___projection
 
 predicate all_trains__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_trains_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T9s.t9s
  requires { (all_trains__pred a) }
  ensures { (result = a.__split_fields.rec__all_trains) }
 
 predicate all_stations__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_stations_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T11s.t11s
  requires { (all_stations__pred a) }
  ensures { (result = a.__split_fields.rec__all_stations) }
 
 predicate all_tracks__pred #"railsystems.ads" 26 0 0# 
   (a : railsystem)  =
  true
 
 val rec__all_tracks_ #"railsystems.ads" 26 0 0# 
   (a : railsystem) : Railsystems__railsystem__T13s.t13s
  requires { (all_tracks__pred a) }
  ensures { (result = a.__split_fields.rec__all_tracks) }
 
 function bool_eq #"railsystems.ads" 26 0 0# 
   (a : railsystem) (b : railsystem) : bool =
  (if (( ( ((Railsystems__railsystem__T9s.bool_eq a.__split_fields.rec__all_trains b.__split_fields.rec__all_trains) = True) /\ ((Railsystems__railsystem__T11s.bool_eq a.__split_fields.rec__all_stations b.__split_fields.rec__all_stations) = True) ) /\ ((Railsystems__railsystem__T13s.bool_eq a.__split_fields.rec__all_tracks b.__split_fields.rec__all_tracks) = True) )) then (
   True) else (
   False))
 
 function user_eq #"railsystems.ads" 26 0 0# 
   (a : railsystem) (b : railsystem) : bool
 
 function value__size #"railsystems.ads" 26 0 0# 
   : int
 
 function object__size #"railsystems.ads" 26 0 0# 
   (a : railsystem) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : railsystem.
   ((object__size a) >= 0))
 
 function dummy #"railsystems.ads" 26 0 0# 
   : railsystem
 
 type railsystem__ref #"railsystems.ads" 26 0 0# =
  { mutable railsystem__content "model_trace:" : railsystem }
 
 function railsystem__ref___projection #"railsystems.ads" 26 0 0# 
   (a : railsystem__ref) : railsystem =
  a.railsystem__content
 
 meta "model_projection" function railsystem__ref___projection
 
 meta "inline : no" function railsystem__ref___projection
 
 val railsystem__havoc #"railsystems.ads" 26 0 0# 
   (x : railsystem__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrain__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 36 0 0# "model" "model_trace:8230" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T30s" defined at railsystems.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrain__L29s__T30s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t30s #"railsystems.ads" 42 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrain__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t30s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t30s__ref #"railsystems.ads" 42 0 0# =
  { mutable t30s__content "model_trace:" : t30s }
 
 function t30s__ref___projection #"railsystems.ads" 42 0 0# 
   (a : t30s__ref) : t30s =
  a.t30s__content
 
 meta "model_projection" function t30s__ref___projection
 
 meta "inline : no" function t30s__ref___projection
 
 val t30s__havoc #"railsystems.ads" 42 0 0# 
   (x : t30s__ref) : unit
  writes {x}

end

(* Module for defining the constant "id" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 46 0 0# "model" "model_trace:8326" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 46 0 0# "model" "model_trace:8335" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 46 0 0# "model" "model_trace:8346" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lineorigin" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__lineorigin
 use import "_gnatprove_standard".Main

 function lineorigin #"railsystems.ads" 46 0 0# "model" "model_trace:8357" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "lineorigin" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__lineorigin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "linedestination" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addtrack__linedestination
 use import "_gnatprove_standard".Main

 function linedestination #"railsystems.ads" 46 0 0# "model" "model_trace:8368" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "linedestination" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__linedestination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T32s" defined at railsystems.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addtrack__L31s__T32s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t32s #"railsystems.ads" 58 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addtrack__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t32s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t32s__ref #"railsystems.ads" 58 0 0# =
  { mutable t32s__content "model_trace:" : t32s }
 
 function t32s__ref___projection #"railsystems.ads" 58 0 0# 
   (a : t32s__ref) : t32s =
  a.t32s__content
 
 meta "model_projection" function t32s__ref___projection
 
 meta "inline : no" function t32s__ref___projection
 
 val t32s__havoc #"railsystems.ads" 58 0 0# 
   (x : t32s__ref) : unit
  writes {x}

end

(* Module for defining the constant "stationid" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__stationid
 use import "_gnatprove_standard".Main

 function stationid #"railsystems.ads" 67 0 0# "model" "model_trace:8494" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationid" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__stationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__addstation__location
 use import "_gnatprove_standard".Main

 function location #"railsystems.ads" 67 0 0# "model" "model_trace:8503" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "location" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T34s" defined at railsystems.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__addstation__L33s__T34s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Railsystems__railsystem

 type t34s #"railsystems.ads" 73 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__addstation__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t34s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t34s__ref #"railsystems.ads" 73 0 0# =
  { mutable t34s__content "model_trace:" : t34s }
 
 function t34s__ref___projection #"railsystems.ads" 73 0 0# 
   (a : t34s__ref) : t34s =
  a.t34s__content
 
 meta "model_projection" function t34s__ref___projection
 
 meta "inline : no" function t34s__ref___projection
 
 val t34s__havoc #"railsystems.ads" 73 0 0# 
   (x : t34s__ref) : unit
  writes {x}

end

(* Module for defining the constant "stationid" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__stationid
 use import "_gnatprove_standard".Main

 function stationid #"railsystems.ads" 79 0 0# "model" "model_trace:8591" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationid" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__stationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "station" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacestation__station
 use import "_gnatprove_standard".Main
 use        Stations__station

 function station #"railsystems.ads" 79 0 0# "model_projected" "model_trace:8600" 
   : Stations__station.station
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "station" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trainid" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__trainid
 use import "_gnatprove_standard".Main

 function trainid #"railsystems.ads" 85 0 0# "model" "model_trace:8646" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trainid" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__trainid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "train" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 function train #"railsystems.ads" 85 0 0# "model_projected" "model_trace:8655" 
   : Trains__train.train
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trackid" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__trackid
 use import "_gnatprove_standard".Main

 function trackid #"railsystems.ads" 91 0 0# "model" "model_trace:8705" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trackid" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__trackid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "track" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__replacetrack__track
 use import "_gnatprove_standard".Main
 use        Tracks__track

 function track #"railsystems.ads" 91 0 0# "model_projected" "model_trace:8714" 
   : Tracks__track.track
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "track" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r_system" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 98 0 0# "model_projected" "model_trace:8769" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "locationname" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__locationname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function locationname #"railsystems.ads" 98 0 0# "model_projected" "model_trace:8789" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "locationname" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__locationname__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "locationid" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__settrainlocation__locationid
 use import "_gnatprove_standard".Main

 function locationid #"railsystems.ads" 98 0 0# "model" "model_trace:8798" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "locationid" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__locationid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T35s" defined at railsystems.ads:101, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__settrainlocation__T35s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "count" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__go__count
 use import "_gnatprove_standard".Main

 function count #"railsystems.ads" 106 0 0# "model" "model_trace:8884" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T39s" defined at railsystems.ads:113, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__T39s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T38s" defined at railsystems.ads:114, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__go__L37s__T38s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Trains__train
 use        Railsystems__railsystem

 type t38s #"railsystems.ads" 114 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   (railsystems__go__train__fields : Trains__train.__split_fields) (railsystems__go__r_system__fields : Railsystems__railsystem.__split_fields) : int
 
 predicate dynamic_property #"railsystems.ads" 26 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t38s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t38s__ref #"railsystems.ads" 114 0 0# =
  { mutable t38s__content "model_trace:" : t38s }
 
 function t38s__ref___projection #"railsystems.ads" 114 0 0# 
   (a : t38s__ref) : t38s =
  a.t38s__content
 
 meta "model_projection" function t38s__ref___projection
 
 meta "inline : no" function t38s__ref___projection
 
 val t38s__havoc #"railsystems.ads" 114 0 0# 
   (x : t38s__ref) : unit
  writes {x}

end

(* Module for defining the constant "r_system" defined at railsystems.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 152 0 0# "model_projected" "model_trace:9328" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at railsystems.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 152 0 0# "model" "model_trace:9337" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrackbyname__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 152 0 0# "model" "model_trace:9348" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrackbyname__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrackbyname" defined at railsystems.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrackbyname
 use import "_gnatprove_standard".Main
 use        Tracks__track
 use        Railsystems__railsystem

 function gettrackbyname #"railsystems.ads" 152 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track

end

(* Module for defining the constant "origin" defined at railsystems.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__origin
 use import "_gnatprove_standard".Main

 function origin #"railsystems.ads" 134 0 0# "model" "model_trace:9184" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at railsystems.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "destination" defined at railsystems.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__destination
 use import "_gnatprove_standard".Main

 function destination #"railsystems.ads" 134 0 0# "model" "model_trace:9195" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "destination" defined at railsystems.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__destination__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "starttime" defined at railsystems.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__preparetrain__starttime
 use import "_gnatprove_standard".Main

 function starttime #"railsystems.ads" 134 0 0# "model" "model_trace:9206" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "starttime" defined at railsystems.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__starttime__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r_system" defined at railsystems.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 147 0 0# "model_projected" "model_trace:9287" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stationlocation" defined at railsystems.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__getstationbyname__stationlocation
 use import "_gnatprove_standard".Main

 function stationlocation #"railsystems.ads" 147 0 0# "model" "model_trace:9296" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stationlocation" defined at railsystems.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__getstationbyname__stationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getstationbyname" defined at railsystems.ads:147, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__getstationbyname
 use import "_gnatprove_standard".Main
 use        Stations__station
 use        Railsystems__railsystem

 function getstationbyname #"railsystems.ads" 147 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station

end

(* Module for defining the constant "r_system" defined at railsystems.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 function r_system #"railsystems.ads" 157 0 0# "model_projected" "model_trace:9386" 
   : Railsystems__railsystem.railsystem
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:157, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at railsystems.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__gettrainbyid__id
 use import "_gnatprove_standard".Main

 function id #"railsystems.ads" 157 0 0# "model" "model_trace:9395" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at railsystems.ads:157, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__gettrainbyid__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "gettrainbyid" defined at railsystems.ads:157, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__gettrainbyid
 use import "_gnatprove_standard".Main
 use        Trains__train
 use        Railsystems__railsystem

 function gettrainbyid #"railsystems.ads" 157 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train

end

(* Module for axiomatizing type "tc" defined at railsystems-test.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__test__tc
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test

 type __split_fields #"trains.ads" 17 0 0# =
  { rec__anc__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_27__projection #"trains.ads" 17 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__anc__
 
 meta "model_projection" function __split_fields_27__projection
 
 meta "inline : no" function __split_fields_27__projection
 
 function __split_fields_28__projection #"trains.ads" 17 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_28__projection
 
 meta "inline : no" function __split_fields_28__projection
 
 type __split_fields__ref #"trains.ads" 17 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_43__projection #"trains.ads" 17 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_43__projection
 
 meta "inline : no" function __split_fields__ref_43__projection
 
 val __split_fields__havoc #"trains.ads" 17 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type tc #"railsystems-test.ads" 7 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function tc___projection #"railsystems-test.ads" 7 0 0# 
   (a : tc) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function tc___projection
 
 meta "inline : no" function tc___projection
 
 function tc_2__projection #"railsystems-test.ads" 7 0 0# 
   (a : tc) : int =
  a.attr__tag
 
 meta "model_projection" function tc_2__projection
 
 meta "inline : no" function tc_2__projection
 
 function hide_anc__ #"railsystems-test.ads" 7 0 0# 
   (rec__ext__ : Main.__private) : Main.__private
 
 function hide_ext__ #"railsystems-test.ads" 7 0 0# 
   (rec__ext__ : Main.__private) (rec__anc__ : Main.__private) : Main.__private
 
 function extract__ext__ #"railsystems-test.ads" 7 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"railsystems-test.ads" 7 0 0# 
   (a : tc) : Aunit__tests__test.test =
  { Aunit__tests__test.__split_fields = { Aunit__tests__test.rec__ext__ = (hide_ext__ a.__split_fields.rec__ext__ a.__split_fields.rec__anc__) }; Aunit__tests__test.attr__tag = a.attr__tag }
 
 function of_base #"aunit-tests.ads" 43 0 0# 
   (r : Aunit__tests__test.test) : tc =
  { __split_fields = { rec__ext__ = (extract__ext__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__anc__ = (hide_anc__ (Aunit__tests__test.__split_fields r).Aunit__tests__test.rec__ext__) }; attr__tag = r.Aunit__tests__test.attr__tag }
 
 function user_eq #"railsystems-test.ads" 7 0 0# 
   (a : tc) (b : tc) : bool
 
 function __tag #"railsystems-test.ads" 7 0 0# 
   : int
 
 function value__size #"railsystems-test.ads" 7 0 0# 
   : int
 
 function object__size #"railsystems-test.ads" 7 0 0# 
   (a : tc) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : tc.
   ((object__size a) >= 0))
 
 function dummy #"railsystems-test.ads" 7 0 0# 
   : tc
 
 type tc__ref #"railsystems-test.ads" 7 0 0# =
  { mutable tc__content "model_trace:" : tc }
 
 function tc__ref___projection #"railsystems-test.ads" 7 0 0# 
   (a : tc__ref) : tc =
  a.tc__content
 
 meta "model_projection" function tc__ref___projection
 
 meta "inline : no" function tc__ref___projection
 
 val tc__havoc #"railsystems-test.ads" 7 0 0# 
   (x : tc__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TtcC" defined at railsystems-test.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Railsystems__test__TtcC
 use export Railsystems__test__tc
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "t" defined at railsystems-test.ads:17, created in Gnat2Why.Decls.Translate_Constant *)
module Railsystems__test__name__2__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 function t #"railsystems-test.ads" 17 0 0# "model_projected" "model_trace:11016" 
   : Railsystems__test__tc.tc
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:17, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__name__2__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__test_lists__list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"railsystems-test.ads" 7 0 0# =
  { rec__main__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_29__projection #"railsystems-test.ads" 7 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_29__projection
 
 meta "inline : no" function __split_fields_29__projection
 
 function __split_fields_30__projection #"railsystems-test.ads" 7 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_30__projection
 
 meta "inline : no" function __split_fields_30__projection
 
 type __split_fields__ref #"railsystems-test.ads" 7 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_44__projection #"railsystems-test.ads" 7 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_44__projection
 
 meta "inline : no" function __split_fields__ref_44__projection
 
 val __split_fields__havoc #"railsystems-test.ads" 7 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type list #"ada_containers-aunit_lists.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function list_9__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function list_9__projection
 
 meta "inline : no" function list_9__projection
 
 function list_10__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int =
  a.attr__tag
 
 meta "model_projection" function list_10__projection
 
 meta "inline : no" function list_10__projection
 
 function user_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __dispatch_eq #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) (b : list) : bool
 
 function __tag #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function value__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : list.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 51 0 0# 
   : list
 
 type list__ref #"ada_containers-aunit_lists.ads" 51 0 0# =
  { mutable list__content "model_trace:" : list }
 
 function list__ref_5__projection #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : list__ref) : list =
  a.list__content
 
 meta "model_projection" function list__ref_5__projection
 
 meta "inline : no" function list__ref_5__projection
 
 val list__havoc #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : list__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test_suite" defined at aunit-test_suites.ads:82, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__test_suite
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_suites__test_lists__list

 type __split_fields #"ada_containers-aunit_lists.ads" 51 0 0# =
  { rec__tests "model_trace:.2814" : Aunit__test_suites__test_lists__list.list; rec__anc__ "model_trace:" : Main.__private; rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields_Tests__projection #"ada_containers-aunit_lists.ads" 51 0 0# "model_trace:.2814" 
   (a : __split_fields) : Aunit__test_suites__test_lists__list.list =
  a.rec__tests
 
 meta "model_projection" function __split_fields_Tests__projection
 
 meta "inline : no" function __split_fields_Tests__projection
 
 function __split_fields_31__projection #"aunit-test_suites.ads" 82 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__anc__
 
 meta "model_projection" function __split_fields_31__projection
 
 meta "inline : no" function __split_fields_31__projection
 
 function __split_fields_32__projection #"aunit-test_suites.ads" 82 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields_32__projection
 
 meta "inline : no" function __split_fields_32__projection
 
 type __split_fields__ref #"aunit-test_suites.ads" 82 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_45__projection #"aunit-test_suites.ads" 82 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_45__projection
 
 meta "inline : no" function __split_fields__ref_45__projection
 
 val __split_fields__havoc #"aunit-test_suites.ads" 82 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type test_suite #"aunit-test_suites.ads" 82 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function test_suite___projection #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function test_suite___projection
 
 meta "inline : no" function test_suite___projection
 
 function test_suite_2__projection #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite) : int =
  a.attr__tag
 
 meta "model_projection" function test_suite_2__projection
 
 meta "inline : no" function test_suite_2__projection
 
 function hide_anc__ #"aunit-test_suites.ads" 82 0 0# 
   (rec__ext__ : Main.__private) : Main.__private
 
 function hide_ext__ #"aunit-test_suites.ads" 82 0 0# 
   (tests : Aunit__test_suites__test_lists__list.list) (rec__ext__ : Main.__private) (rec__anc__ : Main.__private) : Main.__private
 
 function extract__tests #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : Main.__private) : Aunit__test_suites__test_lists__list.list
 
 axiom extract__tests__conv :
  (forall tests : Aunit__test_suites__test_lists__list.list.
  (forall rec__ext__ rec__anc__ : Main.__private.
   ((extract__tests (hide_ext__ tests rec__ext__ rec__anc__)) = tests)))
 
 function extract__ext__ #"ada_containers-aunit_lists.ads" 51 0 0# 
   (x : Main.__private) : Main.__private
 
 function to_base #"ada_containers-aunit_lists.ads" 51 0 0# 
   (a : test_suite) : Aunit__tests__test.test =
  { Aunit__tests__test.__split_fields = { Aunit__tests__test.rec__ext__ = (hide_ext__ a.__split_fields.rec__tests a.__split_fields.rec__ext__ a.__split_fields.rec__anc__) }; Aunit__tests__test.attr__tag = a.attr__tag }
 
 function of_base #"aunit-test_suites.ads" 82 0 0# 
   (r : Aunit__tests__test.test) : test_suite =
  { __split_fields = { rec__tests = (extract__tests r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__ext__ = (extract__ext__ r.Aunit__tests__test.__split_fields.Aunit__tests__test.rec__ext__); rec__anc__ = (hide_anc__ (Aunit__tests__test.__split_fields r).Aunit__tests__test.rec__ext__) }; attr__tag = r.Aunit__tests__test.attr__tag }
 
 predicate tests__pred #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite)  =
  true
 
 val rec__tests_ #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite) : Aunit__test_suites__test_lists__list.list
  requires { (tests__pred a) }
  ensures { (result = a.__split_fields.rec__tests) }
 
 function user_eq #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite) (b : test_suite) : bool
 
 function __tag #"aunit-test_suites.ads" 82 0 0# 
   : int
 
 function value__size #"aunit-test_suites.ads" 82 0 0# 
   : int
 
 function object__size #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : test_suite.
   ((object__size a) >= 0))
 
 function dummy #"aunit-test_suites.ads" 82 0 0# 
   : test_suite
 
 type test_suite__ref #"aunit-test_suites.ads" 82 0 0# =
  { mutable test_suite__content "model_trace:" : test_suite }
 
 function test_suite__ref___projection #"aunit-test_suites.ads" 82 0 0# 
   (a : test_suite__ref) : test_suite =
  a.test_suite__content
 
 meta "model_projection" function test_suite__ref___projection
 
 meta "inline : no" function test_suite__ref___projection
 
 val test_suite__havoc #"aunit-test_suites.ads" 82 0 0# 
   (x : test_suite__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "test_suite_elt_kind" defined at aunit-test_suites.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__test_suite_elt_kind
 use import "_gnatprove_standard".Main
 use import "int".Int

 type test_suite_elt_kind #"aunit-test_suites.ads" 63 0 0# 
 
 function first #"aunit-test_suites.ads" 63 0 0# 
   : int =
  0
 
 function last #"aunit-test_suites.ads" 63 0 0# 
   : int =
  1
 
 predicate in_range #"aunit-test_suites.ads" 63 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = test_suite_elt_kind, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type test_suite_elt_kind__ref #"aunit-test_suites.ads" 63 0 0# =
  { mutable test_suite_elt_kind__content "model_trace:" : test_suite_elt_kind }
 
 function test_suite_elt_kind__ref___projection #"aunit-test_suites.ads" 63 0 0# 
   (a : test_suite_elt_kind__ref) : test_suite_elt_kind =
  a.test_suite_elt_kind__content
 
 meta "model_projection" function test_suite_elt_kind__ref___projection
 
 meta "inline : no" function test_suite_elt_kind__ref___projection
 
 val test_suite_elt_kind__havoc #"aunit-test_suites.ads" 63 0 0# 
   (x : test_suite_elt_kind__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__test_lists__cursor
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type __split_fields #"aunit-test_suites.ads" 63 0 0# =
  { rec__main__ "model_trace:" : Main.__private }
 
 function __split_fields_33__projection #"aunit-test_suites.ads" 63 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__main__
 
 meta "model_projection" function __split_fields_33__projection
 
 meta "inline : no" function __split_fields_33__projection
 
 type __split_fields__ref #"aunit-test_suites.ads" 63 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_46__projection #"aunit-test_suites.ads" 63 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_46__projection
 
 meta "inline : no" function __split_fields__ref_46__projection
 
 val __split_fields__havoc #"aunit-test_suites.ads" 63 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type cursor #"ada_containers-aunit_lists.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function cursor_5__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function cursor_5__projection
 
 meta "inline : no" function cursor_5__projection
 
 function bool_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool =
  (if ((a.__split_fields.rec__main__ = b.__split_fields.rec__main__)) then (
   True) else (
   False))
 
 function user_eq #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) (b : cursor) : bool
 
 function value__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int
 
 function object__size #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : cursor.
   ((object__size a) >= 0))
 
 function dummy #"ada_containers-aunit_lists.ads" 53 0 0# 
   : cursor
 
 type cursor__ref #"ada_containers-aunit_lists.ads" 53 0 0# =
  { mutable cursor__content "model_trace:" : cursor }
 
 function cursor__ref_5__projection #"ada_containers-aunit_lists.ads" 53 0 0# 
   (a : cursor__ref) : cursor =
  a.cursor__content
 
 meta "model_projection" function cursor__ref_5__projection
 
 meta "inline : no" function cursor__ref_5__projection
 
 val cursor__havoc #"ada_containers-aunit_lists.ads" 53 0 0# 
   (x : cursor__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__no_element
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function no_element #"ada_containers-aunit_lists.ads" 57 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "no_element" defined at ada_containers-aunit_lists.ads:57 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__no_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__Oeq__2__left
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function left #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:27148" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__Oeq__2__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__Oeq__2__right
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function right #"ada_containers-aunit_lists.ads" 59 0 0# "model_projected" "model_trace:27157" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__Oeq__2__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__Oeq__2
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_suites__test_lists__list.list) (right : Aunit__test_suites__test_lists__list.list) : bool
 
 namespace Dispatch
  function oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_suites__test_lists__list.list) (right : Aunit__test_suites__test_lists__list.list) : bool

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__length__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 61 0 0# "model_projected" "model_trace:27176" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__length__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__length
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : int
 
 namespace Dispatch
  function length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : int

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__is_empty__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 63 0 0# "model_projected" "model_trace:27195" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__is_empty__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__is_empty
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : bool
 
 namespace Dispatch
  function is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : bool

 end

end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 67 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:67 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__replace_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 71 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:71 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__replace_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 89 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:89 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 91 0 0# "model" "model_trace:27341" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:91 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 95 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:95 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__2__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 98 0 0# "model" "model_trace:27396" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:98 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 102 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:102 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__insert__3__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 104 0 0# "model" "model_trace:27442" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:104 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__3__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__prepend__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 109 0 0# "model" "model_trace:27479" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:109 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__prepend__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__append__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 114 0 0# "model" "model_trace:27516" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:114 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__append__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__delete__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 119 0 0# "model" "model_trace:27553" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:119 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__delete_first__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 123 0 0# "model" "model_trace:27581" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:123 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete_first__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__delete_last__count
 use import "_gnatprove_standard".Main

 function count #"ada_containers-aunit_lists.ads" 127 0 0# "model" "model_trace:27609" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at ada_containers-aunit_lists.ads:127 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete_last__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__swap__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__swap__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 133 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:133 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__swap_links__i
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function i #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap_links__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__swap_links__j
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function j #"ada_containers-aunit_lists.ads" 137 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at ada_containers-aunit_lists.ads:137 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap_links__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__splice__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 141 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:141 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__splice__2__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 146 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:146 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__2__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__splice__3__before
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function before #"ada_containers-aunit_lists.ads" 152 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "before" defined at ada_containers-aunit_lists.ads:152 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__3__before__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__splice__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 153 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:153 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 155 0 0# "model_projected" "model_trace:27835" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__first
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__cursor

 function first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
 
 namespace Dispatch
  function first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__first_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 157 0 0# "model_projected" "model_trace:27854" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:157 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__first_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 159 0 0# "model_projected" "model_trace:27873" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__last
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__cursor

 function last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
 
 namespace Dispatch
  function last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor

 end

end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__last_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 161 0 0# "model_projected" "model_trace:27892" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:161 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__last_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__next__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 163 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__next__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__previous__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 167 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__previous__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 172 0 0# "model_projected" "model_trace:27985" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:172 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 174 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:174 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__reverse_find__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 177 0 0# "model_projected" "model_trace:28023" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:177 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__reverse_find__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__reverse_find__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 179 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:179 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__reverse_find__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__contains__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 182 0 0# "model_projected" "model_trace:28061" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:182 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__contains__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__has_element__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function position #"ada_containers-aunit_lists.ads" 185 0 0# 
   : Aunit__test_suites__test_lists__cursor.cursor
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__has_element__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Aunit__test_suites__test_lists__iterate__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 function container #"ada_containers-aunit_lists.ads" 190 0 0# "model_projected" "model_trace:28126" 
   : Aunit__test_suites__test_lists__list.list
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:190 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__iterate__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__test_lists__TlistC
 use export Aunit__test_suites__test_lists__list
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttest_suiteC" defined at aunit-test_suites.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Aunit__test_suites__Ttest_suiteC
 use export Aunit__test_suites__test_suite
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:28875" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type address #"system.ads" 108 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 108 0 0# 
   : BV32.t
 
 function first #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"system.ads" 108 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 108 0 0# 
   : int =
  4294967295
 
 predicate in_range #"system.ads" 108 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"system.ads" 108 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 108 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 108 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 108 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_address #"system.ads" 69 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 77 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 78 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 79 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 80 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 81 0 0# 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:29224" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 97 0 0# "model" "model_trace:29240" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 98 0 0# "model" "model_trace:29250" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 100 0 0# 
 
 function first #"system.ads" 100 0 0# 
   : int =
  0
 
 function last #"system.ads" 100 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 100 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 100 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 100 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 100 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 101 0 0# 
 
 function first #"system.ads" 101 0 0# 
   : int =
  0
 
 function last #"system.ads" 101 0 0# 
   : int =
  30
 
 predicate in_range #"system.ads" 101 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 101 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 101 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 101 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 102 0 0# 
 
 function first #"system.ads" 102 0 0# 
   : int =
  31
 
 function last #"system.ads" 102 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 102 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 102 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 102 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 102 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 104 0 0# "model" "model_trace:29302" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 101 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 121 0 0# "model" "model_trace:29332" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 121 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 122 0 0# "model" "model_trace:29342" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 122 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 123 0 0# "model" "model_trace:29352" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 123 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 124 0 0# "model" "model_trace:29362" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 125 0 0# "model" "model_trace:29372" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 126 0 0# "model" "model_trace:29382" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 126 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 127 0 0# "model" "model_trace:29392" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 127 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 128 0 0# "model" "model_trace:29402" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 128 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 129 0 0# "model" "model_trace:29412" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 129 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 130 0 0# "model" "model_trace:29422" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 130 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 131 0 0# "model" "model_trace:29432" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 131 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 132 0 0# "model" "model_trace:29442" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 132 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 133 0 0# "model" "model_trace:29452" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 133 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 134 0 0# "model" "model_trace:29462" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 135 0 0# "model" "model_trace:29472" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 135 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 136 0 0# "model" "model_trace:29482" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 136 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 137 0 0# "model" "model_trace:29492" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 137 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 138 0 0# "model" "model_trace:29502" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 138 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 139 0 0# "model" "model_trace:29512" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 139 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 140 0 0# "model" "model_trace:29522" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 140 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 141 0 0# "model" "model_trace:29532" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 141 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 142 0 0# "model" "model_trace:29542" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 143 0 0# "model" "model_trace:29552" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 143 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 144 0 0# "model" "model_trace:29562" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 144 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 145 0 0# "model" "model_trace:29572" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 145 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 146 0 0# "model" "model_trace:29582" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 146 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "Tpriorities_mappingB" defined at system.ads:161, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 function index_I1_one #"system.ads" 146 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 146 0 0# =
  Standard__integer.integer
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__integer.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__Tpriorities_mappingB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        System__any_priority
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 1 0 0# =
  Standard__integer.integer
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__any_priority.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpriorities_mappingB #"system.ads" 161 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpriorities_mappingB__ref #"system.ads" 161 0 0# =
  { mutable tpriorities_mappingB__content "model_trace:" : tpriorities_mappingB }
 
 function tpriorities_mappingB__ref___projection #"system.ads" 161 0 0# 
   (a : tpriorities_mappingB__ref) : tpriorities_mappingB =
  a.tpriorities_mappingB__content
 
 meta "model_projection" function tpriorities_mappingB__ref___projection
 
 meta "inline : no" function tpriorities_mappingB__ref___projection
 
 val tpriorities_mappingB__havoc #"system.ads" 161 0 0# 
   (x : tpriorities_mappingB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__priorities_mapping
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 161 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"system.ads" 166 0 0# 
 
 function first #"system.ads" 166 0 0# 
   : int =
  0
 
 function last #"system.ads" 166 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 166 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t3s__ref #"system.ads" 166 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_5__projection #"system.ads" 166 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_5__projection
 
 meta "inline : no" function t3s__ref_5__projection
 
 val t3s__havoc #"system.ads" 166 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 166 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__underlying_priorities
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer

 function underlying_priorities #"system.ads" 165 0 0# "model_projected" "model_trace:29608" 
   : Array__Int__Standard__integer.map
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end
(* Module for defining a ref holding the value of variable "msg" defined at aunit.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__message_free__msg
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val msg #"aunit.ads" 46 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "msg" defined at aunit.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__message_free__msg__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "filter" defined at aunit-test_filters.ads:52, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_filters__set_name__filter
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 val filter__split_fields #"aunit-test_filters.ads" 52 0 0# "model_projected" "model_trace:4448"  : Aunit__test_filters__name_filter.__split_fields__ref 
 
 function filter__attr__tag #"aunit-test_filters.ads" 52 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_filters.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filter" defined at aunit-test_filters.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_filters__set_name__filter__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Ada__calendar__clock_time
 use import "_gnatprove_standard".Main

 val clock_time #"a-calend.ads" 38 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "clock_time" defined at a-calend.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__clock_time__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "year" defined at a-calend.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__year
 use import "_gnatprove_standard".Main

 val year #"a-calend.ads" 73 0 0# "model" "model_trace:6801"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "year" defined at a-calend.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__year__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "month" defined at a-calend.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__month
 use import "_gnatprove_standard".Main

 val month #"a-calend.ads" 74 0 0# "model" "model_trace:6810"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "month" defined at a-calend.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__month__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "day" defined at a-calend.ads:75, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__day
 use import "_gnatprove_standard".Main

 val day #"a-calend.ads" 75 0 0# "model" "model_trace:6819"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "day" defined at a-calend.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__day__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "seconds" defined at a-calend.ads:76, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__calendar__split__seconds
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 val seconds #"a-calend.ads" 76 0 0# "model_projected" "model_trace:6828"  : Ada__calendar__day_duration.day_duration__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-calend.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "seconds" defined at a-calend.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__calendar__split__seconds__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-time_measure.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__time_measure__start_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 val t__split_fields #"aunit-time_measure.ads" 46 0 0# "model_projected" "model_trace:6409"  : Aunit__time_measure__time.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__start_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-time_measure.ads:49, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__time_measure__stop_measure__t
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 val t__split_fields #"aunit-time_measure.ads" 49 0 0# "model_projected" "model_trace:6427"  : Aunit__time_measure__time.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-time_measure.ads" 36 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-time_measure.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__time_measure__stop_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:13976"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:14013"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:14049"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:14058"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:14076"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:14122"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:14177"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:14223"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:14260"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:14297"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:14334"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:14362"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:14390"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:14408"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:14444"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:14480"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:14498"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:14516"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:14534"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:14561"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__result_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__test_results__result_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__result_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:77, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_error__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 77 0 0# "model_projected" "model_trace:5824"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 77 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_error__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:85, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_failure__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 85 0 0# "model_projected" "model_trace:5878"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_failure__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__add_success__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 93 0 0# "model_projected" "model_trace:5932"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 93 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 93 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__add_success__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__set_elapsed__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 99 0 0# "model_projected" "model_trace:5977"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 99 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__set_elapsed__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:105, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__errors__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 105 0 0# "model_projected" "model_trace:6023"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 105 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__errors__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "e" defined at aunit-test_results.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__errors__e
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val e__split_fields #"aunit-test_results.ads" 106 0 0# "model_projected" "model_trace:6032"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function e__attr__tag #"aunit-test_results.ads" 106 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 106 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at aunit-test_results.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__errors__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__failures__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 112 0 0# "model_projected" "model_trace:6071"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failures__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "f" defined at aunit-test_results.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__failures__f
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val f__split_fields #"aunit-test_results.ads" 112 0 0# "model_projected" "model_trace:6080"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function f__attr__tag #"aunit-test_results.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "f" defined at aunit-test_results.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__failures__f__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:118, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__start_test__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 118 0 0# "model_projected" "model_trace:6119"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 118 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 118 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__start_test__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__successes__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 124 0 0# "model_projected" "model_trace:6165"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 124 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successes__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at aunit-test_results.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__successes__s
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 val s__split_fields #"aunit-test_results.ads" 124 0 0# "model_projected" "model_trace:6174"  : Aunit__test_results__result_lists__list.__split_fields__ref 
 
 function s__attr__tag #"aunit-test_results.ads" 124 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at aunit-test_results.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__successes__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_results.ads:133, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_results__clear__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_results.ads" 133 0 0# "model_projected" "model_trace:6234"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_results.ads" 133 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_results.ads" 133 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_results.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_results__clear__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-assertions.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__init_test__t
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 val t__split_fields #"aunit-assertions.ads" 101 0 0# "model_projected" "model_trace:5124"  : Aunit__assertions__test.__split_fields__ref 
 
 function t__attr__tag #"aunit-assertions.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-assertions.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__init_test__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "i" defined at aunit-assertions.ads:117, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__next__i
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter

 val i__split_fields #"aunit-assertions.ads" 117 0 0#  : Aunit__assertions__failure_iter.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 149 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at aunit-assertions.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__next__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "to" defined at aunit-assertions.ads:125, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__copy_id__to
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 val to____split_fields #"aunit-assertions.ads" 125 0 0# "model_projected" "model_trace:5305"  : Aunit__assertions__test.__split_fields__ref 
 
 function to____attr__tag #"aunit-assertions.ads" 125 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-assertions.ads" 125 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at aunit-assertions.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__copy_id__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:15721"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:15758"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:15794"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:15803"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:15821"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:15867"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:15922"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:15968"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:16005"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:16042"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:16079"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:16107"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:16135"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:16153"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:16189"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:16225"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:16243"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:16261"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:16279"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:16306"  : Aunit__assertions__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__assertions__failure_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__assertions__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__assertions__failure_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-simple_test_cases.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__simple_test_cases__run_test__test
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 val test__split_fields #"aunit-simple_test_cases.ads" 54 0 0# "model_projected" "model_trace:4691"  : Aunit__simple_test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-simple_test_cases.ads" 54 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-simple_test_cases.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__run_test__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-simple_test_cases.ads:57, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__simple_test_cases__set_up__test
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 val test__split_fields #"aunit-simple_test_cases.ads" 57 0 0# "model_projected" "model_trace:4709"  : Aunit__simple_test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-simple_test_cases.ads" 57 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 57 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-simple_test_cases.ads:57, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__set_up__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-simple_test_cases.ads:60, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__simple_test_cases__tear_down__test
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 val test__split_fields #"aunit-simple_test_cases.ads" 60 0 0# "model_projected" "model_trace:4727"  : Aunit__simple_test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-simple_test_cases.ads" 60 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-simple_test_cases.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__tear_down__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-simple_test_cases.ads:69, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__simple_test_cases__run__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-simple_test_cases.ads" 69 0 0# "model_projected" "model_trace:4768"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-simple_test_cases.ads" 69 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-simple_test_cases.ads" 69 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-simple_test_cases.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__run__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outcome" defined at aunit-simple_test_cases.ads:70, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__simple_test_cases__run__outcome
 use import "_gnatprove_standard".Main

 val outcome #"aunit-simple_test_cases.ads" 70 0 0# "model" "model_trace:4779"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outcome" defined at aunit-simple_test_cases.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__simple_test_cases__run__outcome__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at aunit-test_cases.ads:52, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__add_routine__t
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val t__split_fields #"aunit-test_cases.ads" 52 0 0# "model_projected" "model_trace:11158"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function t__attr__tag #"aunit-test_cases.ads" 52 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at aunit-test_cases.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__add_routine__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-test_cases.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__register_tests__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val test__split_fields #"aunit-test_cases.ads" 54 0 0# "model_projected" "model_trace:11187"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-test_cases.ads" 54 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__register_tests__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-test_cases.ads:57, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__set_up_case__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val test__split_fields #"aunit-test_cases.ads" 57 0 0# "model_projected" "model_trace:11205"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-test_cases.ads" 57 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 57 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:57, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__set_up_case__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-test_cases.ads:60, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__tear_down_case__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val test__split_fields #"aunit-test_cases.ads" 60 0 0# "model_projected" "model_trace:11223"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-test_cases.ads" 60 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__tear_down_case__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-test_cases.ads:66, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__registration__register_routine__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val test__split_fields #"aunit-test_cases.ads" 66 0 0# "model_projected" "model_trace:11250"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-test_cases.ads" 66 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__registration__register_routine__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_cases.ads:94, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__run__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_cases.ads" 94 0 0# "model_projected" "model_trace:11415"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_cases.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_cases.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__run__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outcome" defined at aunit-test_cases.ads:95, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__run__outcome
 use import "_gnatprove_standard".Main

 val outcome #"aunit-test_cases.ads" 95 0 0# "model" "model_trace:11426"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outcome" defined at aunit-test_cases.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__run__outcome__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "test" defined at aunit-test_cases.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__run_test__test
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 val test__split_fields #"aunit-test_cases.ads" 98 0 0# "model_projected" "model_trace:11444"  : Aunit__test_cases__test_case.__split_fields__ref 
 
 function test__attr__tag #"aunit-test_cases.ads" 98 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_cases.ads" 98 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "test" defined at aunit-test_cases.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__run_test__test__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:18666"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:18703"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:18739"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:18748"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:18766"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:18812"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:18867"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:18913"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:18950"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:18987"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:19024"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:19052"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:19080"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:19098"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:19134"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:19170"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:19188"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:19206"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:19224"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:19251"  : Aunit__test_cases__routine_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__routine_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__test_cases__routine_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__routine_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:20331"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:20368"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:20404"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:20413"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:20431"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:20477"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:20532"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:20578"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:20615"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:20652"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:20689"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:20717"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:20745"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:20763"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:20799"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:20835"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:20853"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:20871"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:20889"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:20916"  : Aunit__test_cases__failure_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_cases__failure_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__test_cases__failure_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_cases__failure_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "od" defined at types.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Types__od
 use import "_gnatprove_standard".Main
 use        Types__odrecord

 val od__split_fields #"types.ads" 20 0 0# "model_projected" "model_trace:9938"  : Types__odrecord.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"types.ads" 16 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "od" defined at types.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__od__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__append__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__delete_all__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__replace__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Variable *)
module Types__list_od__init__a
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Types__list_od__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Types__list_od__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Types__list_od__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tk" defined at stations.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__tk
 use import "_gnatprove_standard".Main
 use        Tracks__track

 val tk__split_fields #"stations.ads" 8 0 0# "model_projected" "model_trace:10592"  : Tracks__track.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"tracks.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tk" defined at stations.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__tk__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__append__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__delete_all__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__replace__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__list_tracks__init__a
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Stations__list_tracks__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__list_tracks__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at stations.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__TintracksS

 val intracks__split_fields #"stations.ads" 14 0 0#  : Stations__TintracksS.__split_fields__ref 
 
 function intracks__split_discrs #"stations.ads" 14 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at stations.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at stations.ads:15, created in Gnat2Why.Decls.Translate_Variable *)
module Stations__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__TouttracksS

 val outtracks__split_fields #"stations.ads" 15 0 0#  : Stations__TouttracksS.__split_fields__ref 
 
 function outtracks__split_discrs #"stations.ads" 15 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 15 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at stations.ads:15, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Stations__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "intracks" defined at trains.ads:7, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__intracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Trains__TintracksS

 val intracks__split_fields #"trains.ads" 7 0 0#  : Trains__TintracksS.__split_fields__ref 
 
 function intracks__split_discrs #"trains.ads" 7 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 7 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "intracks" defined at trains.ads:7, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__intracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outtracks" defined at trains.ads:8, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__outtracks
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Trains__TouttracksS

 val outtracks__split_fields #"trains.ads" 8 0 0#  : Trains__TouttracksS.__split_fields__ref 
 
 function outtracks__split_discrs #"trains.ads" 8 0 0# 
   : Stations__list_tracks__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 8 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outtracks" defined at trains.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__outtracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tn" defined at railsystems.ads:13, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__tn
 use import "_gnatprove_standard".Main
 use        Trains__train

 val tn__split_fields #"railsystems.ads" 13 0 0# "model_projected" "model_trace:8067"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tn" defined at railsystems.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__tn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_trains__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Railsystems__list_trains__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Railsystems__list_trains__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_trains__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "sn" defined at railsystems.ads:19, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__sn
 use import "_gnatprove_standard".Main
 use        Stations__station

 val sn__split_fields #"railsystems.ads" 19 0 0# "model_projected" "model_trace:8099"  : Stations__station.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"stations.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sn" defined at railsystems.ads:19, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__sn__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__append__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 64 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 64 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__append__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__delete_all__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 70 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 70 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__delete_all__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 78 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 78 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__replace_by_id__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 82 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 82 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__replace_by_id__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__list_stations__init__a
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr

 val a__split_fields #"list.ads" 86 0 0#  : Railsystems__list_stations__list_ptr.__split_fields__ref 
 
 function a__split_discrs #"list.ads" 86 0 0# 
   : Railsystems__list_stations__list_ptr.__split_discrs
 
 function attr__ATTRIBUTE_ADDRESS #"list.ads" 99 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__list_stations__init__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:35, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__init__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 35 0 0# "model_projected" "model_trace:8203"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__init__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:36, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 36 0 0# "model_projected" "model_trace:8221"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addtrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 46 0 0# "model_projected" "model_trace:8317"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addtrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:67, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 67 0 0# "model_projected" "model_trace:8485"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:79, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacestation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 79 0 0# "model_projected" "model_trace:8582"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacestation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:85, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 85 0 0# "model_projected" "model_trace:8637"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:91, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__replacetrack__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 91 0 0# "model_projected" "model_trace:8696"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__replacetrack__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:97, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 97 0 0# "model_projected" "model_trace:8751"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__addincomingoutgoingtracksforeachstation__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__settrainlocation__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 98 0 0# "model_projected" "model_trace:8778"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__settrainlocation__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 106 0 0# "model_projected" "model_trace:8864"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__go__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 106 0 0# "model_projected" "model_trace:8873"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__go__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_system" defined at railsystems.ads:134, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__r_system
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem

 val r_system__split_fields #"railsystems.ads" 134 0 0# "model_projected" "model_trace:9164"  : Railsystems__railsystem.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems.ads" 26 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_system" defined at railsystems.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__r_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "train" defined at railsystems.ads:134, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__preparetrain__train
 use import "_gnatprove_standard".Main
 use        Trains__train

 val train__split_fields #"railsystems.ads" 134 0 0# "model_projected" "model_trace:9173"  : Trains__train.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"trains.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "train" defined at railsystems.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__preparetrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at railsystems-test.ads:9, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__test__set_up_case__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 val t__split_fields #"railsystems-test.ads" 9 0 0# "model_projected" "model_trace:10926"  : Railsystems__test__tc.__split_fields__ref 
 
 function t__attr__tag #"railsystems-test.ads" 9 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 9 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:9, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__set_up_case__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at railsystems-test.ads:11, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__test__set_up__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 val t__split_fields #"railsystems-test.ads" 11 0 0# "model_projected" "model_trace:10944"  : Railsystems__test__tc.__split_fields__ref 
 
 function t__attr__tag #"railsystems-test.ads" 11 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:11, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__set_up__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at railsystems-test.ads:12, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__test__tear_down__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 val t__split_fields #"railsystems-test.ads" 12 0 0# "model_projected" "model_trace:10962"  : Railsystems__test__tc.__split_fields__ref 
 
 function t__attr__tag #"railsystems-test.ads" 12 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 12 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:12, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__tear_down__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at railsystems-test.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__test__tear_down_case__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 val t__split_fields #"railsystems-test.ads" 14 0 0# "model_projected" "model_trace:10980"  : Railsystems__test__tc.__split_fields__ref 
 
 function t__attr__tag #"railsystems-test.ads" 14 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__tear_down_case__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "t" defined at railsystems-test.ads:16, created in Gnat2Why.Decls.Translate_Variable *)
module Railsystems__test__register_tests__2__t
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 val t__split_fields #"railsystems-test.ads" 16 0 0# "model_projected" "model_trace:10998"  : Railsystems__test__tc.__split_fields__ref 
 
 function t__attr__tag #"railsystems-test.ads" 16 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"railsystems-test.ads" 16 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at railsystems-test.ads:16, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railsystems__test__register_tests__2__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at aunit-test_suites.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__run__r
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 val r__split_fields #"aunit-test_suites.ads" 54 0 0# "model_projected" "model_trace:2672"  : Aunit__test_results__result.__split_fields__ref 
 
 function r__attr__tag #"aunit-test_suites.ads" 54 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"aunit-test_suites.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at aunit-test_suites.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__run__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "outcome" defined at aunit-test_suites.ads:55, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__run__outcome
 use import "_gnatprove_standard".Main

 val outcome #"aunit-test_suites.ads" 55 0 0# "model" "model_trace:2683"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"aunit.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "outcome" defined at aunit-test_suites.ads:55, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__run__outcome__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__clear__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 65 0 0# "model_projected" "model_trace:27214"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__clear__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__replace_element__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 70 0 0# "model_projected" "model_trace:27251"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 70 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:70 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__replace_element__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__move__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 84 0 0# "model_projected" "model_trace:27287"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:84 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__move__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__move__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 85 0 0# "model_projected" "model_trace:27296"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 85 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:85 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__move__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__insert__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 88 0 0# "model_projected" "model_trace:27314"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 88 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:88 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__insert__2__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 94 0 0# "model_projected" "model_trace:27360"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:94 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__2__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__insert__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 97 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:97 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__insert__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 101 0 0# "model_projected" "model_trace:27415"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 101 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:101 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__insert__3__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 103 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:103 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__insert__3__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__prepend__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 107 0 0# "model_projected" "model_trace:27461"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 107 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:107 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__prepend__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__append__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 112 0 0# "model_projected" "model_trace:27498"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 112 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:112 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__append__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__delete__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 117 0 0# "model_projected" "model_trace:27535"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:117 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__delete__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 118 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:118 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__delete_first__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 122 0 0# "model_projected" "model_trace:27572"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:122 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete_first__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__delete_last__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 126 0 0# "model_projected" "model_trace:27600"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:126 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__delete_last__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__reverse_elements__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 129 0 0# "model_projected" "model_trace:27628"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 129 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__reverse_elements__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__swap__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 132 0 0# "model_projected" "model_trace:27646"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:132 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__swap_links__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 136 0 0# "model_projected" "model_trace:27682"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 136 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:136 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__swap_links__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 140 0 0# "model_projected" "model_trace:27718"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 140 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:140 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 142 0 0# "model_projected" "model_trace:27736"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 142 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:142 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__2__target
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val target__split_fields #"ada_containers-aunit_lists.ads" 145 0 0# "model_projected" "model_trace:27754"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function target__attr__tag #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 145 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at ada_containers-aunit_lists.ads:145 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__2__target__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__2__source
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val source__split_fields #"ada_containers-aunit_lists.ads" 147 0 0# "model_projected" "model_trace:27772"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function source__attr__tag #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 147 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at ada_containers-aunit_lists.ads:147 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__2__source__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 148 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:148 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__splice__3__container
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 val container__split_fields #"ada_containers-aunit_lists.ads" 151 0 0# "model_projected" "model_trace:27799"  : Aunit__test_suites__test_lists__list.__split_fields__ref 
 
 function container__attr__tag #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 151 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "container" defined at ada_containers-aunit_lists.ads:151 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__splice__3__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__next__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 165 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__next__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Aunit__test_suites__test_lists__previous__2__position
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 val position #"ada_containers-aunit_lists.ads" 169 0 0#  : Aunit__test_suites__test_lists__cursor.cursor__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"ada_containers-aunit_lists.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "position" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Aunit__test_suites__test_lists__previous__2__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__e_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__e_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e_count #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__e_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__e_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__f_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__f_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val f_count #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__f_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__f_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__s_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__s_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s_count #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__s_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__s_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failures," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failures
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val failures #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failures", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failures__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__current_id," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__current_id
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val current_id #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__current_id", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__current_id__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__the_current_test," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__the_current_test
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val the_current_test #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__the_current_test", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__the_current_test__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__gettrackbyname__temp," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrackbyname__temp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__gettrackbyname__temp", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrackbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__getstationbyname__temp," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__getstationbyname__temp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__getstationbyname__temp", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__getstationbyname__temp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__rail_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__rail_system
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rail_system #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__rail_system", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__rail_system__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__format__ptr," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__format__ptr
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ptr #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__format__ptr", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__format__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__message_alloc__ret," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__message_alloc__ret
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ret #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__message_alloc__ret", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__message_alloc__ret__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__clear_failures__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__clear_failures__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__clear_failures__n," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__n
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val n #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__clear_failures__n", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__clear_failures__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__first_failure__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__first_failure__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__first_failure__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__first_failure__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__next__id," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__id
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val id #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__next__id", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__next__id__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__simple_test_cases__run__old," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__old
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val old__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__simple_test_cases__run__old", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__simple_test_cases__run__old__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__registration__register_routine__formatted_name," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__registration__register_routine__formatted_name
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val formatted_name #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__registration__register_routine__formatted_name", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__registration__register_routine__formatted_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__registration__register_routine__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__registration__register_routine__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__registration__register_routine__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__registration__register_routine__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__run__result," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__run__result
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val result__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__run__result", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__run__result__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__run__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__run__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__run__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__run__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_error__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_error__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_error__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_error__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_failure__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_failure__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_failure__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_failure__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__add_success__val," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_success__val
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val val__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__add_success__val", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__add_success__val__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__run__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__run__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__run__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__run__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__run__result," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__run__result
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val result__ #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__run__result", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__run__result__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__new_suite__ret," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__new_suite__ret
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ret #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__new_suite__ret", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__new_suite__ret__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__new_suite__obj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__new_suite__obj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val obj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__new_suite__obj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__new_suite__obj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__Oeq__2__l," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__Oeq__2__l
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val l #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__Oeq__2__l", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__Oeq__2__l__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__Oeq__2__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__Oeq__2__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__Oeq__2__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__Oeq__2__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__clear__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__clear__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__clear__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__clear__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__insert__position," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__position
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val position #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__insert__position", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__position__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__insert__2__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__2__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__insert__2__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__2__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__insert__3__new_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__3__new_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val new_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__insert__3__new_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__insert__3__new_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__delete__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__delete__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__delete_first__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete_first__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__delete_first__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete_first__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__delete_last__x," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete_last__x
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val x #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__delete_last__x", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__delete_last__x__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__i," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__i
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__i", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__i__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_elements__j," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__j
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_elements__j", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_elements__j__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__swap__B_20__ei_copy," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap__B_20__ei_copy
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ei_copy #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__swap__B_20__ei_copy", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap__B_20__ei_copy__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__swap_links__B_21__i_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap_links__B_21__i_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val i_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__swap_links__B_21__i_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap_links__B_21__i_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__swap_links__B_21__B_22__j_next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap_links__B_21__B_22__j_next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val j_next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__swap_links__B_21__B_22__j_next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__swap_links__B_21__B_22__j_next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__next__B_16__next_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__next__B_16__next_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__next__B_16__next_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__next__B_16__next_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__previous__B_17__prev_node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__previous__B_17__prev_node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev_node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__previous__B_17__prev_node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__previous__B_17__prev_node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__reverse_find__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_find__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__reverse_find__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__reverse_find__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_suites__test_lists__iterate__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__iterate__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_suites__test_lists__iterate__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_suites__test_lists__iterate__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_trains__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_trains__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_stations__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_stations__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrain__train," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrain__train
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val train #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrain__train", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrain__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrack__track," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__track
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val track #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrack__track", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addtrack__sizetracks," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__sizetracks
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val sizetracks #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addtrack__sizetracks", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addtrack__sizetracks__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__station_t," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__station_t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station_t #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__station_t", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__station_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addstation__tempstation2," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation2
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation2 #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addstation__tempstation2", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addstation__tempstation2__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__od_record," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val od_record #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__od_record", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__od_record__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__addincomingoutgoingtracksforeachstation__found," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__found
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val found #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__addincomingoutgoingtracksforeachstation__found", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__addincomingoutgoingtracksforeachstation__found__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__settrainlocation__location," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__location
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val location #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__settrainlocation__location", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__settrainlocation__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__tempstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__tempstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__tempstationlocation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstationlocation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val tempstationlocation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__tempstationlocation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__tempstationlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__station_count," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__station_count
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station_count #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__station_count", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__station_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__go__temptrack," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__temptrack
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temptrack #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__go__temptrack", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__go__temptrack__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__temporiginstation," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__temporiginstation
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val temporiginstation #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__temporiginstation", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__temporiginstation__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__od_record," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__od_record
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val od_record #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__od_record", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__od_record__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__preparetrain__check1," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__check1
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val check1 #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__preparetrain__check1", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__preparetrain__check1__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__gettrainbyid__train," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrainbyid__train
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val train #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__gettrainbyid__train", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__gettrainbyid__train__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems_suite__suite__ts_ptr," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems_suite__suite__ts_ptr
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ts_ptr #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems_suite__suite__ts_ptr", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems_suite__suite__ts_ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__contains__size," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val size #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__contains__size", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__contains__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_trains__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_trains__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_trains__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__list_stations__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__list_stations__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__list_stations__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "types__list_od__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "types__list_od__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Types__list_od__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "stations__list_tracks__get_element_record__d," created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_record__d
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val d #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "stations__list_tracks__get_element_record__d", created in Gnat2Why.Decls.Translate_External_Object *)
module Stations__list_tracks__get_element_record__d__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_addtrain__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_addtrain__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_addtrain__trainb," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__trainb
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainb #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_addtrain__trainb", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__trainb__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_addtrain__trainc," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__trainc
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainc #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_addtrain__trainc", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_addtrain__trainc__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_get_train_by_id_id_out_of_range_less_1_exception__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_train_by_id_id_out_of_range_less_1_exception__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_get_train_by_id_id_out_of_range_less_1_exception__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_train_by_id_id_out_of_range_less_1_exception__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_get_train_by_id_id_out_of_range_great_train_size_exception__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_train_by_id_id_out_of_range_great_train_size_exception__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_get_train_by_id_id_out_of_range_great_train_size_exception__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_train_by_id_id_out_of_range_great_train_size_exception__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_set_train_location_locationid_out_of_range_exception_less_1__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationid_out_of_range_exception_less_1__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_set_train_location_locationid_out_of_range_exception_less_1__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationid_out_of_range_exception_less_1__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_set_train_location_locationid_out_of_range_exception_great_trains_size__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationid_out_of_range_exception_great_trains_size__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_set_train_location_locationid_out_of_range_exception_great_trains_size__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationid_out_of_range_exception_great_trains_size__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_set_train_location_locationname_incorrect_exception__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationname_incorrect_exception__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_set_train_location_locationname_incorrect_exception__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_set_train_location_locationname_incorrect_exception__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_origin_should_not_equals_no__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_should_not_equals_no__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_origin_should_not_equals_no__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_should_not_equals_no__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_destionation_should_not_equals_no__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_destionation_should_not_equals_no__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_destionation_should_not_equals_no__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_destionation_should_not_equals_no__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_origin_should_not_equals_destionation__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_should_not_equals_destionation__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_origin_should_not_equals_destionation__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_should_not_equals_destionation__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__trainb," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__trainb
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainb #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__trainb", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__trainb__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__station," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__station
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__station", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_already_train_at_station__test_raising_exception__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_preparetrain_origin_station_destionation_station_not_same_route_line__test_raising_exception__trainb," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_station_destionation_station_not_same_route_line__test_raising_exception__trainb
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainb #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_preparetrain_origin_station_destionation_station_not_same_route_line__test_raising_exception__trainb", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_preparetrain_origin_station_destionation_station_not_same_route_line__test_raising_exception__trainb__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_get_station_by_name__station," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_station_by_name__station
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val station #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_get_station_by_name__station", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_station_by_name__station__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_get_track_by_name__track," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_track_by_name__track
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val track #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_get_track_by_name__track", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_get_track_by_name__track__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_go__traina," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_go__traina
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val traina #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_go__traina", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_go__traina__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "railsystems__test__test_go__trainb," created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_go__trainb
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val trainb #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "railsystems__test__test_go__trainb", created in Gnat2Why.Decls.Translate_External_Object *)
module Railsystems__test__test_go__trainb__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__assertions__failure_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__assertions__failure_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__assertions__failure_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__result_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__result_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__result_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__gen_extract__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__gen_extract__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__gen_extract__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__gen_extract__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__gen_extract__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__errors__extractGP8143__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__errors__extractGP8143__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__errors__extractGP8143__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__failures__extractGP8681__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__failures__extractGP8681__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__failures__extractGP8681__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__r," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__r
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val r #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__r", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__r__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__e
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val e #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__e__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__c," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__c
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val c #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__c", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_results__successes__extractGP9601__extractR__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_results__successes__extractGP9601__extractR__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_results__successes__extractGP9601__extractR__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__h," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__h
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val h #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__h", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__h__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__m," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__m
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val m #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__m", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__m__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__s," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__s
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__s", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__t," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val t #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__t", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure__force," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__force
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val force #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure__force", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure__force__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure_in_seconds__s," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__s
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure_in_seconds__s", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__time_measure__gen_put_measure_in_seconds__t," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__t
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val t #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__time_measure__gen_put_measure_in_seconds__t", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__time_measure__gen_put_measure_in_seconds__t__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__insert_internal__container," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert_internal__container
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val container #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__insert_internal__container", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__insert_internal__container__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__is_sorted__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__is_sorted__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__is_sorted__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__is_sorted__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__merge__li," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__li
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val li #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__merge__li", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__li__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__merge__ri," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__ri
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ri #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__merge__ri", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__ri__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__merge__B_9__rj," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__B_9__rj
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rj #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__merge__B_9__rj", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__merge__B_9__rj__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__sort__partition__node," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__node
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val node #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__sort__partition__node", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__node__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__prev," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__prev
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val prev #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__prev", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__prev__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__next," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__next
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val next #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__next", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__partition__B_11__next__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__generic_sorting__sort__sort__pivot," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__sort__pivot
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val pivot #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__generic_sorting__sort__sort__pivot", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__generic_sorting__sort__sort__pivot__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__swap__ln," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__ln
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ln #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__swap__ln", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__ln__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__swap__lp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__lp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val lp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__swap__lp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__lp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__swap__rn," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__rn
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rn #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__swap__rn", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__rn__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__routine_lists__reverse_elements__swap__rp," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__rp
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val rp #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__routine_lists__reverse_elements__swap__rp", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__routine_lists__reverse_elements__swap__rp__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "aunit__test_cases__failure_lists__new_node_type__2__res," created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__new_node_type__2__res
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val res #"ada_containers-aunit_lists.ads" 53 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "aunit__test_cases__failure_lists__new_node_type__2__res", created in Gnat2Why.Decls.Translate_External_Object *)
module Aunit__test_cases__failure_lists__new_node_type__2__res__axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "set_name" defined at aunit-test_filters.ads:51, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__set_name
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_active__2" defined at aunit-test_filters.ads:64, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_filters__is_active__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__name_filter

 function is_active__2 #"aunit-test_filters.ads" 64 0 0# 
   (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) (__HEAP : Main.__type_of_heap) : bool
 
 namespace Dispatch
  function is_active__2 #"aunit-test_filters.ads" 64 0 0# 
    (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) (__HEAP : Main.__type_of_heap) : bool

 end

end

(* Module for possibly declaring a logic function for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__clock
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time

 function clock #"a-calend.ads" 58 0 0# 
   (ada__calendar__clock_time : Main.__private) : Ada__calendar__time.time

end

(* Module for possibly declaring a logic function for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__calendar__split
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "start_measure" defined at aunit-time_measure.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__start_measure
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "stop_measure" defined at aunit-time_measure.ads:49, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__time_measure__stop_measure
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_results__result_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_results__result_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__result_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "set_elapsed" defined at aunit-test_results.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__set_elapsed
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "error_count" defined at aunit-test_results.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__error_count
 use        Aunit__test_results__e_count
 use        Aunit__test_results__e_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function error_count #"aunit-test_results.ads" 102 0 0# 
   (r : Aunit__test_results__result.result__) (aunit__test_results__e_count : Main.__private) (__HEAP : Main.__type_of_heap) : int
 
 namespace Dispatch
  function error_count #"aunit-test_results.ads" 102 0 0# 
    (r : Aunit__test_results__result.result__) (aunit__test_results__e_count : Main.__private) (__HEAP : Main.__type_of_heap) : int

 end

end

(* Module for possibly declaring a logic function for "errors" defined at aunit-test_results.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__errors
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "failure_count" defined at aunit-test_results.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__failure_count
 use        Aunit__test_results__f_count
 use        Aunit__test_results__f_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function failure_count #"aunit-test_results.ads" 109 0 0# 
   (r : Aunit__test_results__result.result__) (aunit__test_results__f_count : Main.__private) (__HEAP : Main.__type_of_heap) : int
 
 namespace Dispatch
  function failure_count #"aunit-test_results.ads" 109 0 0# 
    (r : Aunit__test_results__result.result__) (aunit__test_results__f_count : Main.__private) (__HEAP : Main.__type_of_heap) : int

 end

end

(* Module for possibly declaring a logic function for "failures" defined at aunit-test_results.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__failures
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "start_test" defined at aunit-test_results.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__start_test
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "success_count" defined at aunit-test_results.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__success_count
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function success_count #"aunit-test_results.ads" 121 0 0# 
   (r : Aunit__test_results__result.result__) (aunit__test_results__s_count : Main.__private) (__HEAP : Main.__type_of_heap) : int
 
 namespace Dispatch
  function success_count #"aunit-test_results.ads" 121 0 0# 
    (r : Aunit__test_results__result.result__) (aunit__test_results__s_count : Main.__private) (__HEAP : Main.__type_of_heap) : int

 end

end

(* Module for possibly declaring a logic function for "successes" defined at aunit-test_results.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__successes
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "successful" defined at aunit-test_results.ads:127, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__successful
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result

 function successful #"aunit-test_results.ads" 127 0 0# 
   (r : Aunit__test_results__result.result__) (aunit__test_results__s_count : Main.__private) (__HEAP : Main.__type_of_heap) : bool
 
 namespace Dispatch
  function successful #"aunit-test_results.ads" 127 0 0# 
    (r : Aunit__test_results__result.result__) (aunit__test_results__s_count : Main.__private) (__HEAP : Main.__type_of_heap) : bool

 end

end

(* Module for possibly declaring a logic function for "clear" defined at aunit-test_results.ads:133, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_results__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "assert" defined at aunit-assertions.ads:48, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__assert
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "assert__2" defined at aunit-assertions.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__assert__2
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__string

 function assert__2 #"aunit-assertions.ads" 57 0 0# 
   (condition : bool) (message : Standard__string.string) (source : Standard__string.string) (line : int) (aunit__assertions__failures : Main.__private) (aunit__assertions__the_current_test : Main.__private) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "assert__3" defined at aunit-assertions.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__assert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init_test" defined at aunit-assertions.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__init_test
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear_failures" defined at aunit-assertions.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__clear_failures
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_failures" defined at aunit-assertions.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__has_failures
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__test

 function has_failures #"aunit-assertions.ads" 107 0 0# 
   (t : Aunit__assertions__test.test) (aunit__assertions__failures : Main.__private) (__HEAP : Main.__type_of_heap) : bool
 
 namespace Dispatch
  function has_failures #"aunit-assertions.ads" 107 0 0# 
    (t : Aunit__assertions__test.test) (aunit__assertions__failures : Main.__private) (__HEAP : Main.__type_of_heap) : bool

 end

end

(* Module for possibly declaring a logic function for "first_failure" defined at aunit-assertions.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__first_failure
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__failure_iter

 function first_failure #"aunit-assertions.ads" 113 0 0# 
   (t : Aunit__assertions__test.test) (aunit__assertions__failures : Main.__private) (__HEAP : Main.__type_of_heap) : Aunit__assertions__failure_iter.failure_iter
 
 namespace Dispatch
  function first_failure #"aunit-assertions.ads" 113 0 0# 
    (t : Aunit__assertions__test.test) (aunit__assertions__failures : Main.__private) (__HEAP : Main.__type_of_heap) : Aunit__assertions__failure_iter.failure_iter

 end

end

(* Module for possibly declaring a logic function for "has_failure" defined at aunit-assertions.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__has_failure
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter

 function has_failure #"aunit-assertions.ads" 114 0 0# 
   (i : Aunit__assertions__failure_iter.failure_iter) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "next" defined at aunit-assertions.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__next
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "copy_id" defined at aunit-assertions.ads:125, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__copy_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__assertions__failure_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__assertions__failure_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__assertions__failure_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "run_test" defined at aunit-simple_test_cases.ads:53, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__simple_test_cases__run_test
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_up" defined at aunit-simple_test_cases.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__simple_test_cases__set_up
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tear_down" defined at aunit-simple_test_cases.ads:60, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__simple_test_cases__tear_down
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "register_tests" defined at aunit-test_cases.ads:54, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__register_tests
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_up_case" defined at aunit-test_cases.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__set_up_case
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tear_down_case" defined at aunit-test_cases.ads:60, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__tear_down_case
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "run_test" defined at aunit-test_cases.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__run_test
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_cases__routine_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_cases__routine_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__routine_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_cases__failure_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_cases__failure_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_cases__failure_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Types__list_od__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stations__list_tracks__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_natural
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_train_state
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Sprint__print_station_locations
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_trains__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "append" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__append
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__delete_all
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__replace
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__replace_by_id
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__list_stations__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at railsystems.ads:35, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrain" defined at railsystems.ads:36, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addtrack" defined at railsystems.ads:46, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addtrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addstation" defined at railsystems.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacestation" defined at railsystems.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacestation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrain" defined at railsystems.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "replacetrack" defined at railsystems.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__replacetrack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__addincomingoutgoingtracksforeachstation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "settrainlocation" defined at railsystems.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__settrainlocation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "go" defined at railsystems.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__go
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "preparetrain" defined at railsystems.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__preparetrain
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_up_case" defined at railsystems-test.ads:9, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__test__set_up_case
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_up" defined at railsystems-test.ads:11, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__test__set_up
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tear_down" defined at railsystems-test.ads:12, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__test__tear_down
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tear_down_case" defined at railsystems-test.ads:14, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__test__tear_down_case
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "register_tests__2" defined at railsystems-test.ads:16, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railsystems__test__register_tests__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__move
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__insert__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__delete_first
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__delete_last
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__reverse_elements
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__swap
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__swap_links
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__splice
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__splice__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__splice__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__next
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_suites__test_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__next__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__previous
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : Aunit__test_suites__test_lists__cursor.cursor

end

(* Module for possibly declaring a logic function for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__previous__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Aunit__test_suites__test_lists__has_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 function has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) (__HEAP : Main.__type_of_heap) : bool

end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:28885" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:28896" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:28907" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:28920" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:28935" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:28945" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:28955" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:29006" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:29015" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:29024" 
   : int

end

(* Module for defining the value of the aggregate at system.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__underlying_priorities__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 function system__underlying_priorities__aggregate_def #"system.ads" 166 0 0# 
   (temp___152 : int) (temp___153 : int) (temp___154 : int) (temp___155 : int) (temp___156 : int) (temp___157 : int) (temp___158 : int) (temp___159 : int) (temp___160 : int) (temp___161 : int) (temp___162 : int) (temp___163 : int) (temp___164 : int) (temp___165 : int) (temp___166 : int) (temp___167 : int) : Array__Int__Standard__integer.map
 
 axiom def_axiom :
  (forall temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 temp___158 temp___159 temp___160 temp___161 temp___162 temp___163 temp___164 temp___165 temp___166 temp___167 : int.
   (let temp___151 = (system__underlying_priorities__aggregate_def temp___152 temp___153 temp___154 temp___155 temp___156 temp___157 temp___158 temp___159 temp___160 temp___161 temp___162 temp___163 temp___164 temp___165 temp___166 temp___167) in (
    (forall temp___168 : int.
     (if (( (31 <= temp___168) /\ (temp___168 <= 31) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___167))) else if (( (21 <= temp___168) /\ (temp___168 <= 30) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___166)))  else if ((temp___168 = 20)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___165)))  else if ((temp___168 = 19)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___164)))  else if ((temp___168 = 18)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___163)))  else if ((temp___168 = 17)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___162)))  else if ((temp___168 = 16)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___161)))  else if ((temp___168 = 15)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___160)))  else if ((temp___168 = 14)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___159)))  else if ((temp___168 = 13)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___158)))  else if ((temp___168 = 12)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___157)))  else if ((temp___168 = 11)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___156)))  else if ((temp___168 = 10)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___155)))  else if ((temp___168 = 9)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___154)))  else if ((temp___168 = 8)) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___153)))  else if (( (0 <= temp___168) /\ (temp___168 <= 7) )) then (
      ((Array__Int__Standard__integer.get temp___151 temp___168) = (Standard__integer.of_rep temp___152))) else (
      true)))))
  )

end

(* Module giving axioms for type "status" defined at aunit.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__status__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__status

 predicate dynamic_invariant #"system.ads" 167 0 0# "inline" 
   (temp___expr_172 : int) (temp___is_init_169 : bool) (temp___do_constant_170 : bool) (temp___do_toplevel_171 : bool)  =
  (if (( temp___is_init_169 \/ (Aunit__status.first <= Aunit__status.last) )) then (
   (Aunit__status.dynamic_property Aunit__status.first Aunit__status.last temp___expr_172)) else true)
 
 predicate default_initial_assumption #"aunit.ads" 40 0 0# "inline" 
   (temp___173 : int) (temp___174 : bool)  =
  true

end

(* Module giving axioms for type "hash_type" defined at ada_containers.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__hash_type__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada_containers__hash_type

 predicate dynamic_invariant #"aunit.ads" 40 0 0# "inline" 
   (temp___expr_178 : BV32.t) (temp___is_init_175 : bool) (temp___do_constant_176 : bool) (temp___do_toplevel_177 : bool)  =
  (if (( temp___is_init_175 \/ (BV32.ule Ada_containers__hash_type.first Ada_containers__hash_type.last) )) then (
   (Ada_containers__hash_type.dynamic_property Ada_containers__hash_type.first Ada_containers__hash_type.last temp___expr_178)) else true)
 
 predicate default_initial_assumption #"ada_containers.ads" 19 0 0# "inline" 
   (temp___179 : BV32.t) (temp___180 : bool)  =
  true

end

(* Module giving axioms for type "Tcount_typeB" defined at ada_containers.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__Tcount_typeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "count_type" defined at ada_containers.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada_containers__count_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada_containers__count_type

 predicate dynamic_invariant #"ada_containers.ads" 19 0 0# "inline" 
   (temp___expr_184 : int) (temp___is_init_181 : bool) (temp___do_constant_182 : bool) (temp___do_toplevel_183 : bool)  =
  (if (( temp___is_init_181 \/ (Ada_containers__count_type.first <= Ada_containers__count_type.last) )) then (
   (Ada_containers__count_type.dynamic_property Ada_containers__count_type.first Ada_containers__count_type.last temp___expr_184)) else true)
 
 predicate default_initial_assumption #"ada_containers.ads" 20 0 0# "inline" 
   (temp___185 : int) (temp___186 : bool)  =
  true

end

(* Module giving axioms for type "test" defined at aunit-tests.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__tests__test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 predicate dynamic_invariant #"ada_containers.ads" 20 0 0# "inline" 
   (temp___expr_190 : Aunit__tests__test.test) (temp___is_init_187 : bool) (temp___do_constant_188 : bool) (temp___do_toplevel_189 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___191 : Aunit__tests__test.test) (temp___192 : bool)  =
  ((Aunit__tests__test.attr__tag temp___191) = Aunit__tests__test.__tag)

end

(* Module giving axioms for type "TtestC" defined at aunit-tests.ads:38, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__tests__TtestC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test

 predicate dynamic_invariant #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___expr_196 : Aunit__tests__test.test) (temp___is_init_193 : bool) (temp___do_constant_194 : bool) (temp___do_toplevel_195 : bool)  =
  true

end

(* Module giving axioms for type "test_filter" defined at aunit-test_filters.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__test_filter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 predicate dynamic_invariant #"aunit-tests.ads" 43 0 0# "inline" 
   (temp___expr_200 : Aunit__test_filters__test_filter.test_filter) (temp___is_init_197 : bool) (temp___do_constant_198 : bool) (temp___do_toplevel_199 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___201 : Aunit__test_filters__test_filter.test_filter) (temp___202 : bool)  =
  ((Aunit__test_filters__test_filter.attr__tag temp___201) = Aunit__test_filters__test_filter.__tag)

end

(* Module giving axioms for type "name_filter" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__name_filter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___expr_206 : Aunit__test_filters__name_filter.name_filter) (temp___is_init_203 : bool) (temp___do_constant_204 : bool) (temp___do_toplevel_205 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___207 : Aunit__test_filters__name_filter.name_filter) (temp___208 : bool)  =
  ((Aunit__test_filters__name_filter.attr__tag temp___207) = Aunit__test_filters__name_filter.__tag)

end

(* Module giving axioms for type "Ttest_filterC" defined at aunit-test_filters.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__Ttest_filterC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__test_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___expr_212 : Aunit__test_filters__test_filter.test_filter) (temp___is_init_209 : bool) (temp___do_constant_210 : bool) (temp___do_toplevel_211 : bool)  =
  true

end

(* Module giving axioms for type "Tname_filterC" defined at aunit-test_filters.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_filters__Tname_filterC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_filters__name_filter

 predicate dynamic_invariant #"aunit-test_filters.ads" 70 0 0# "inline" 
   (temp___expr_216 : Aunit__test_filters__name_filter.name_filter) (temp___is_init_213 : bool) (temp___do_constant_214 : bool) (temp___do_toplevel_215 : bool)  =
  true

end

(* Module giving axioms for type "time" defined at a-calend.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__time__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time

 predicate dynamic_invariant #"aunit-test_filters.ads" 48 0 0# "inline" 
   (temp___expr_220 : Ada__calendar__time.time) (temp___is_init_217 : bool) (temp___do_constant_218 : bool) (temp___do_toplevel_219 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 44 0 0# "inline" 
   (temp___221 : Ada__calendar__time.time) (temp___222 : bool)  =
  true

end

(* Module giving axioms for type "year_number" defined at a-calend.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__year_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__year_number

 predicate dynamic_invariant #"a-calend.ads" 44 0 0# "inline" 
   (temp___expr_226 : int) (temp___is_init_223 : bool) (temp___do_constant_224 : bool) (temp___do_toplevel_225 : bool)  =
  (if (( temp___is_init_223 \/ (Ada__calendar__year_number.first <= Ada__calendar__year_number.last) )) then (
   (Ada__calendar__year_number.dynamic_property Ada__calendar__year_number.first Ada__calendar__year_number.last temp___expr_226)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 50 0 0# "inline" 
   (temp___227 : int) (temp___228 : bool)  =
  true

end

(* Module giving axioms for type "month_number" defined at a-calend.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__month_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__month_number

 predicate dynamic_invariant #"a-calend.ads" 50 0 0# "inline" 
   (temp___expr_232 : int) (temp___is_init_229 : bool) (temp___do_constant_230 : bool) (temp___do_toplevel_231 : bool)  =
  (if (( temp___is_init_229 \/ (Ada__calendar__month_number.first <= Ada__calendar__month_number.last) )) then (
   (Ada__calendar__month_number.dynamic_property Ada__calendar__month_number.first Ada__calendar__month_number.last temp___expr_232)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 51 0 0# "inline" 
   (temp___233 : int) (temp___234 : bool)  =
  true

end

(* Module giving axioms for type "day_number" defined at a-calend.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_number__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__day_number

 predicate dynamic_invariant #"a-calend.ads" 51 0 0# "inline" 
   (temp___expr_238 : int) (temp___is_init_235 : bool) (temp___do_constant_236 : bool) (temp___do_toplevel_237 : bool)  =
  (if (( temp___is_init_235 \/ (Ada__calendar__day_number.first <= Ada__calendar__day_number.last) )) then (
   (Ada__calendar__day_number.dynamic_property Ada__calendar__day_number.first Ada__calendar__day_number.last temp___expr_238)) else true)
 
 predicate default_initial_assumption #"a-calend.ads" 52 0 0# "inline" 
   (temp___239 : int) (temp___240 : bool)  =
  true

end

(* Module giving axioms for type "day_duration" defined at a-calend.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__calendar__day_duration__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__day_duration

 predicate dynamic_invariant #"a-calend.ads" 52 0 0# "inline" 
   (temp___expr_244 : Ada__calendar__day_duration.day_duration) (temp___is_init_241 : bool) (temp___do_constant_242 : bool) (temp___do_toplevel_243 : bool)  =
  true
 
 predicate default_initial_assumption #"a-calend.ads" 56 0 0# "inline" 
   (temp___245 : Ada__calendar__day_duration.day_duration) (temp___246 : bool)  =
  true

end

(* Module giving axioms for type "time" defined at aunit-time_measure.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__time__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time

 predicate dynamic_invariant #"a-calend.ads" 56 0 0# "inline" 
   (temp___expr_250 : Aunit__time_measure__time.time) (temp___is_init_247 : bool) (temp___do_constant_248 : bool) (temp___do_toplevel_249 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-time_measure.ads" 36 0 0# "inline" 
   (temp___251 : Aunit__time_measure__time.time) (temp___252 : bool)  =
  true

end

(* Module giving axioms for type "Taunit_durationB" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__Taunit_durationB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "aunit_duration" defined at aunit-time_measure.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__time_measure__aunit_duration__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__aunit_duration

 predicate dynamic_invariant #"aunit-time_measure.ads" 36 0 0# "inline" 
   (temp___expr_258 : Aunit__time_measure__aunit_duration.aunit_duration) (temp___is_init_255 : bool) (temp___do_constant_256 : bool) (temp___do_toplevel_257 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-time_measure.ads" 70 0 0# "inline" 
   (temp___259 : Aunit__time_measure__aunit_duration.aunit_duration) (temp___260 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 predicate dynamic_invariant #"aunit-time_measure.ads" 70 0 0# "inline" 
   (temp___expr_264 : Aunit__test_results__result_lists__list.list) (temp___is_init_261 : bool) (temp___do_constant_262 : bool) (temp___do_toplevel_263 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___265 : Aunit__test_results__result_lists__list.list) (temp___266 : bool)  =
  ((Aunit__test_results__result_lists__list.attr__tag temp___265) = Aunit__test_results__result_lists__list.__tag)

end

(* Module giving axioms for type "result" defined at aunit-test_results.ads:140, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada_containers__count_type
 use        Aunit__time_measure__time
 use        Aunit__time_measure__null_time
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_270 : Aunit__test_results__result.result__) (temp___is_init_267 : bool) (temp___do_constant_268 : bool) (temp___do_toplevel_269 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_results.ads" 140 0 0# "inline" 
   (temp___271 : Aunit__test_results__result.result__) (temp___272 : bool)  =
  ( ( ( ((Aunit__test_results__result.attr__tag temp___271) = Aunit__test_results__result.__tag) /\ (if ((Aunit__test_results__result.tests_run__pred temp___271)) then (
   ((Ada_containers__count_type.to_rep (Aunit__test_results__result.rec__tests_run (Aunit__test_results__result.__split_fields temp___271))) = 0)) else true) ) /\ (if ((Aunit__test_results__result.result_list__pred temp___271)) then (
   (let temp___273 = (Aunit__test_results__result.rec__result_list (Aunit__test_results__result.__split_fields temp___271)) in (
    ((Aunit__test_results__result_lists__list.attr__tag temp___273) = Aunit__test_results__result_lists__list.__tag)))
  ) else true) ) /\ (if ((Aunit__test_results__result.elapsed_time__pred temp___271)) then (
   ((Aunit__test_results__result.rec__elapsed_time (Aunit__test_results__result.__split_fields temp___271)) = Aunit__time_measure__null_time.null_time)) else true) )

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor

 predicate dynamic_invariant #"aunit-time_measure.ads" 43 0 0# "inline" 
   (temp___expr_277 : Aunit__test_results__result_lists__cursor.cursor) (temp___is_init_274 : bool) (temp___do_constant_275 : bool) (temp___do_toplevel_276 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___278 : Aunit__test_results__result_lists__cursor.cursor) (temp___279 : bool)  =
  true

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__result_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_283 : Aunit__test_results__result_lists__list.list) (temp___is_init_280 : bool) (temp___do_constant_281 : bool) (temp___do_toplevel_282 : bool)  =
  true

end

(* Module giving axioms for type "TresultC" defined at aunit-test_results.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_results__TresultC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_287 : Aunit__test_results__result.result__) (temp___is_init_284 : bool) (temp___do_constant_285 : bool) (temp___do_toplevel_286 : bool)  =
  true

end

(* Module giving axioms for type "Ttest_idB" defined at aunit-assertions.ads:137, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__Ttest_idB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "test_id" defined at aunit-assertions.ads:137, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__test_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__assertions__test_id

 predicate dynamic_invariant #"aunit-test_results.ads" 140 0 0# "inline" 
   (temp___expr_291 : int) (temp___is_init_288 : bool) (temp___do_constant_289 : bool) (temp___do_toplevel_290 : bool)  =
  (if (( temp___is_init_288 \/ (Aunit__assertions__test_id.first <= Aunit__assertions__test_id.last) )) then (
   (Aunit__assertions__test_id.dynamic_property Aunit__assertions__test_id.first Aunit__assertions__test_id.last temp___expr_291)) else true)
 
 predicate default_initial_assumption #"aunit-assertions.ads" 137 0 0# "inline" 
   (temp___292 : int) (temp___293 : bool)  =
  true

end

(* Module giving axioms for type "test" defined at aunit-assertions.ads:151, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__test__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__assertions__test_id
 use        Aunit__assertions__test

 predicate dynamic_invariant #"aunit-assertions.ads" 137 0 0# "inline" 
   (temp___expr_297 : Aunit__assertions__test.test) (temp___is_init_294 : bool) (temp___do_constant_295 : bool) (temp___do_toplevel_296 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-assertions.ads" 151 0 0# "inline" 
   (temp___298 : Aunit__assertions__test.test) (temp___299 : bool)  =
  ( ((Aunit__assertions__test.attr__tag temp___298) = Aunit__assertions__test.__tag) /\ (if ((Aunit__assertions__test.id__pred temp___298)) then (
   ((Aunit__assertions__test_id.to_rep (Aunit__assertions__test.rec__id (Aunit__assertions__test.__split_fields temp___298))) = 0)) else true) )

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__failure_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor

 predicate dynamic_invariant #"aunit-assertions.ads" 151 0 0# "inline" 
   (temp___expr_303 : Aunit__assertions__failure_lists__cursor.cursor) (temp___is_init_300 : bool) (temp___do_constant_301 : bool) (temp___do_toplevel_302 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___304 : Aunit__assertions__failure_lists__cursor.cursor) (temp___305 : bool)  =
  true

end

(* Module giving axioms for type "failure_iter" defined at aunit-assertions.ads:149, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__failure_iter__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_309 : Aunit__assertions__failure_iter.failure_iter) (temp___is_init_306 : bool) (temp___do_constant_307 : bool) (temp___do_toplevel_308 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-assertions.ads" 149 0 0# "inline" 
   (temp___310 : Aunit__assertions__failure_iter.failure_iter) (temp___311 : bool)  =
  true

end

(* Module giving axioms for type "TtestC" defined at aunit-assertions.ads:96, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__TtestC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test

 predicate dynamic_invariant #"aunit-assertions.ads" 149 0 0# "inline" 
   (temp___expr_315 : Aunit__assertions__test.test) (temp___is_init_312 : bool) (temp___do_constant_313 : bool) (temp___do_toplevel_314 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__failure_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 predicate dynamic_invariant #"aunit-assertions.ads" 151 0 0# "inline" 
   (temp___expr_319 : Aunit__assertions__failure_lists__list.list) (temp___is_init_316 : bool) (temp___do_constant_317 : bool) (temp___do_toplevel_318 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___320 : Aunit__assertions__failure_lists__list.list) (temp___321 : bool)  =
  ((Aunit__assertions__failure_lists__list.attr__tag temp___320) = Aunit__assertions__failure_lists__list.__tag)

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__assertions__failure_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_325 : Aunit__assertions__failure_lists__list.list) (temp___is_init_322 : bool) (temp___do_constant_323 : bool) (temp___do_toplevel_324 : bool)  =
  true

end

(* Module giving axioms for type "test_case" defined at aunit-simple_test_cases.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__simple_test_cases__test_case__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_329 : Aunit__simple_test_cases__test_case.test_case) (temp___is_init_326 : bool) (temp___do_constant_327 : bool) (temp___do_toplevel_328 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-simple_test_cases.ads" 75 0 0# "inline" 
   (temp___330 : Aunit__simple_test_cases__test_case.test_case) (temp___331 : bool)  =
  ((Aunit__simple_test_cases__test_case.attr__tag temp___330) = Aunit__simple_test_cases__test_case.__tag)

end

(* Module giving axioms for type "Ttest_caseC" defined at aunit-simple_test_cases.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__simple_test_cases__Ttest_caseC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case

 predicate dynamic_invariant #"aunit-simple_test_cases.ads" 75 0 0# "inline" 
   (temp___expr_335 : Aunit__simple_test_cases__test_case.test_case) (temp___is_init_332 : bool) (temp___do_constant_333 : bool) (temp___do_toplevel_334 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__routine_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 predicate dynamic_invariant #"aunit-simple_test_cases.ads" 75 0 0# "inline" 
   (temp___expr_339 : Aunit__test_cases__routine_lists__list.list) (temp___is_init_336 : bool) (temp___do_constant_337 : bool) (temp___do_toplevel_338 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___340 : Aunit__test_cases__routine_lists__list.list) (temp___341 : bool)  =
  ((Aunit__test_cases__routine_lists__list.attr__tag temp___340) = Aunit__test_cases__routine_lists__list.__tag)

end

(* Module giving axioms for type "test_case" defined at aunit-test_cases.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__test_case__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_345 : Aunit__test_cases__test_case.test_case) (temp___is_init_342 : bool) (temp___do_constant_343 : bool) (temp___do_toplevel_344 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_cases.ads" 41 0 0# "inline" 
   (temp___346 : Aunit__test_cases__test_case.test_case) (temp___347 : bool)  =
  ((Aunit__test_cases__test_case.attr__tag temp___346) = Aunit__test_cases__test_case.__tag)

end

(* Module giving axioms for type "Ttest_caseC" defined at aunit-test_cases.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__Ttest_caseC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case

 predicate dynamic_invariant #"aunit-test_cases.ads" 41 0 0# "inline" 
   (temp___expr_351 : Aunit__test_cases__test_case.test_case) (temp___is_init_348 : bool) (temp___do_constant_349 : bool) (temp___do_toplevel_350 : bool)  =
  true

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__routine_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor

 predicate dynamic_invariant #"aunit-test_cases.ads" 41 0 0# "inline" 
   (temp___expr_355 : Aunit__test_cases__routine_lists__cursor.cursor) (temp___is_init_352 : bool) (temp___do_constant_353 : bool) (temp___do_toplevel_354 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___356 : Aunit__test_cases__routine_lists__cursor.cursor) (temp___357 : bool)  =
  true

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__routine_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_361 : Aunit__test_cases__routine_lists__list.list) (temp___is_init_358 : bool) (temp___do_constant_359 : bool) (temp___do_toplevel_360 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__failure_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_365 : Aunit__test_cases__failure_lists__list.list) (temp___is_init_362 : bool) (temp___do_constant_363 : bool) (temp___do_toplevel_364 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___366 : Aunit__test_cases__failure_lists__list.list) (temp___367 : bool)  =
  ((Aunit__test_cases__failure_lists__list.attr__tag temp___366) = Aunit__test_cases__failure_lists__list.__tag)

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__failure_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_371 : Aunit__test_cases__failure_lists__cursor.cursor) (temp___is_init_368 : bool) (temp___do_constant_369 : bool) (temp___do_toplevel_370 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___372 : Aunit__test_cases__failure_lists__cursor.cursor) (temp___373 : bool)  =
  true

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_cases__failure_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_377 : Aunit__test_cases__failure_lists__list.list) (temp___is_init_374 : bool) (temp___do_constant_375 : bool) (temp___do_toplevel_376 : bool)  =
  true

end

(* Module giving axioms for type "Tmax_sizeB" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__Tmax_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "max_size" defined at types.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__max_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__max_size

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_381 : int) (temp___is_init_378 : bool) (temp___do_constant_379 : bool) (temp___do_toplevel_380 : bool)  =
  (if (( temp___is_init_378 \/ (Types__max_size.first <= Types__max_size.last) )) then (
   (Types__max_size.dynamic_property Types__max_size.first Types__max_size.last temp___expr_381)) else true)
 
 predicate default_initial_assumption #"types.ads" 3 0 0# "inline" 
   (temp___382 : int) (temp___383 : bool)  =
  true

end

(* Module giving axioms for type "train_state" defined at types.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__train_state__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__train_state

 predicate dynamic_invariant #"types.ads" 3 0 0# "inline" 
   (temp___expr_387 : int) (temp___is_init_384 : bool) (temp___do_constant_385 : bool) (temp___do_toplevel_386 : bool)  =
  (if (( temp___is_init_384 \/ (Types__train_state.first <= Types__train_state.last) )) then (
   (Types__train_state.dynamic_property Types__train_state.first Types__train_state.last temp___expr_387)) else true)
 
 predicate default_initial_assumption #"types.ads" 8 0 0# "inline" 
   (temp___388 : int) (temp___389 : bool)  =
  true

end

(* Module giving axioms for type "station_locations" defined at types.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__station_locations__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations

 predicate dynamic_invariant #"types.ads" 8 0 0# "inline" 
   (temp___expr_393 : int) (temp___is_init_390 : bool) (temp___do_constant_391 : bool) (temp___do_toplevel_392 : bool)  =
  (if (( temp___is_init_390 \/ (Types__station_locations.first <= Types__station_locations.last) )) then (
   (Types__station_locations.dynamic_property Types__station_locations.first Types__station_locations.last temp___expr_393)) else true)
 
 predicate default_initial_assumption #"types.ads" 11 0 0# "inline" 
   (temp___394 : int) (temp___395 : bool)  =
  true

end

(* Module giving axioms for type "timetable" defined at types.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__timetable__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__timetable

 predicate dynamic_invariant #"types.ads" 11 0 0# "inline" 
   (temp___expr_399 : int) (temp___is_init_396 : bool) (temp___do_constant_397 : bool) (temp___do_toplevel_398 : bool)  =
  (if (( temp___is_init_396 \/ (Types__timetable.first <= Types__timetable.last) )) then (
   (Types__timetable.dynamic_property Types__timetable.first Types__timetable.last temp___expr_399)) else true)
 
 predicate default_initial_assumption #"types.ads" 14 0 0# "inline" 
   (temp___400 : int) (temp___401 : bool)  =
  true

end

(* Module giving axioms for type "odrecord" defined at types.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__odrecord__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__odrecord

 predicate dynamic_invariant #"types.ads" 14 0 0# "inline" 
   (temp___expr_405 : Types__odrecord.odrecord) (temp___is_init_402 : bool) (temp___do_constant_403 : bool) (temp___do_toplevel_404 : bool)  =
  true
 
 predicate default_initial_assumption #"types.ads" 16 0 0# "inline" 
   (temp___406 : Types__odrecord.odrecord) (temp___407 : bool)  =
  ( (if ((Types__odrecord.origin__pred temp___406)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__origin (Types__odrecord.__split_fields temp___406))) = 0)) else true) /\ (if ((Types__odrecord.destination__pred temp___406)) then (
   ((Types__station_locations.to_rep (Types__odrecord.rec__destination (Types__odrecord.__split_fields temp___406))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Types__list_od__data_type

 predicate dynamic_invariant #"types.ads" 16 0 0# "inline" 
   (temp___expr_411 : Types__list_od__data_type.data_type) (temp___is_init_408 : bool) (temp___do_constant_409 : bool) (temp___do_toplevel_410 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___412 : Types__list_od__data_type.data_type) (temp___413 : bool)  =
  ( (if ((Types__list_od__data_type.origin__pred temp___412)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___412))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___412)) then (
   ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___412))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_417 : Types__list_od__data.data) (temp___is_init_414 : bool) (temp___do_constant_415 : bool) (temp___do_toplevel_416 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___418 : Types__list_od__data.data) (temp___419 : bool)  =
  ( (if ((Types__list_od__data.data__pred temp___418)) then (
   (let temp___420 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___418)) in (
    ( (if ((Types__list_od__data_type.origin__pred temp___420)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___420))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___420)) then (
     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___420))) = 0)) else true) )))
  ) else true) /\ (if ((Types__list_od__data.id__pred temp___418)) then (
   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___418))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Types__list_od__list_array

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_424 : Types__list_od__list_array.list_array) (temp___is_init_421 : bool) (temp___do_constant_422 : bool) (temp___do_toplevel_423 : bool)  =
  (if (temp___do_constant_422) then (
   true) else (
   (Types__list_od__list_array.dynamic_property Standard__positive.first Standard__positive.last (Types__list_od__list_array.first temp___expr_424) (Types__list_od__list_array.last temp___expr_424))))

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at types.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Types__list_od__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr__T4s
 use        Types__list_od__list_ptr

 predicate dynamic_invariant #"list.ads" 98 0 0# "inline" 
   (temp___expr_429 : Types__list_od__list_ptr.list_ptr) (temp___is_init_426 : bool) (temp___do_constant_427 : bool) (temp___do_toplevel_428 : bool)  =
  (let temp___430 = (Types__list_od__list_ptr.rec__max_size (Types__list_od__list_ptr.__split_discrs temp___expr_429)) in (
   (if ((Types__list_od__list_ptr.elements__pred temp___expr_429)) then (
    (if (False) then (
     true) else (
     ( (Types__list_od__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___430) (Types__list_od__list_ptr__T4s.first (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_429))) (Types__list_od__list_ptr__T4s.last (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_429)))) /\ ( ((Types__list_od__list_ptr__T4s.first (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_429))) = 1) /\ ((Types__list_od__list_ptr__T4s.last (Types__list_od__list_ptr.rec__elements (Types__list_od__list_ptr.__split_fields temp___expr_429))) = (Standard__positive.to_rep temp___430)) ) )))) else true)))


end

(* Module giving axioms for type "track" defined at tracks.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Tracks__track__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Tracks__track

 predicate dynamic_invariant #"list.ads" 39 0 0# "inline" 
   (temp___expr_435 : Tracks__track.track) (temp___is_init_432 : bool) (temp___do_constant_433 : bool) (temp___do_toplevel_434 : bool)  =
  true
 
 predicate default_initial_assumption #"tracks.ads" 7 0 0# "inline" 
   (temp___436 : Tracks__track.track) (temp___437 : bool)  =
  ( ( ( ( ( (if ((Tracks__track.id__pred temp___436)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___436))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___436)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___436))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___436)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___436))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___436)) then (
   ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___436))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___436)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___436))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___436)) then (
   ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___436))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type

 predicate dynamic_invariant #"tracks.ads" 7 0 0# "inline" 
   (temp___expr_441 : Stations__list_tracks__data_type.data_type) (temp___is_init_438 : bool) (temp___do_constant_439 : bool) (temp___do_toplevel_440 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___442 : Stations__list_tracks__data_type.data_type) (temp___443 : bool)  =
  ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___442)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___442)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___442)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___442)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___442)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___442)) then (
   ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___442))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__station_locations
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_447 : Stations__list_tracks__data.data) (temp___is_init_444 : bool) (temp___do_constant_445 : bool) (temp___do_toplevel_446 : bool)  =
  true
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___448 : Stations__list_tracks__data.data) (temp___449 : bool)  =
  ( (if ((Stations__list_tracks__data.data__pred temp___448)) then (
   (let temp___450 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___448)) in (
    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___450)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___450)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___450)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___450)) then (
     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___450)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___450)) then (
     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___450))) = 0)) else true) )))
  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___448)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___448))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_array__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Stations__list_tracks__list_array

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_454 : Stations__list_tracks__list_array.list_array) (temp___is_init_451 : bool) (temp___do_constant_452 : bool) (temp___do_toplevel_453 : bool)  =
  (if (temp___do_constant_452) then (
   true) else (
   (Stations__list_tracks__list_array.dynamic_property Standard__positive.first Standard__positive.last (Stations__list_tracks__list_array.first temp___expr_454) (Stations__list_tracks__list_array.last temp___expr_454))))

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at stations.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__list_tracks__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Stations__list_tracks__list_ptr__T4s
 use        Stations__list_tracks__list_ptr

 predicate dynamic_invariant #"list.ads" 98 0 0# "inline" 
   (temp___expr_459 : Stations__list_tracks__list_ptr.list_ptr) (temp___is_init_456 : bool) (temp___do_constant_457 : bool) (temp___do_toplevel_458 : bool)  =
  (let temp___460 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__list_tracks__list_ptr.__split_discrs temp___expr_459)) in (
   (if ((Stations__list_tracks__list_ptr.elements__pred temp___expr_459)) then (
    (if (False) then (
     true) else (
     ( (Stations__list_tracks__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___460) (Stations__list_tracks__list_ptr__T4s.first (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_459))) (Stations__list_tracks__list_ptr__T4s.last (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_459)))) /\ ( ((Stations__list_tracks__list_ptr__T4s.first (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_459))) = 1) /\ ((Stations__list_tracks__list_ptr__T4s.last (Stations__list_tracks__list_ptr.rec__elements (Stations__list_tracks__list_ptr.__split_fields temp___expr_459))) = (Standard__positive.to_rep temp___460)) ) )))) else true)))


end

(* Module giving axioms for type "TT5sP1" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__TT5sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TintracksS" defined at stations.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TintracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT6sP1" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__TT6sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TouttracksS" defined at stations.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__TouttracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT8sP1" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__TT8sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at stations.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT10sP1" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__TT10sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at stations.ads:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT12sP1" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__TT12sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__T12s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at stations.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__T11s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "station" defined at stations.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stations__station__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 39 0 0# "inline" 
   (temp___expr_465 : Stations__station.station) (temp___is_init_462 : bool) (temp___do_constant_463 : bool) (temp___do_toplevel_464 : bool)  =
  ( ( (if ((Stations__station.incoming__pred temp___expr_465)) then (
   (let temp___466 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields temp___expr_465)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields temp___expr_465))))))))
  ) else true) /\ (if ((Stations__station.outgoing__pred temp___expr_465)) then (
   (let temp___468 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields temp___expr_465)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields temp___expr_465))))))))
  ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___expr_465)) then (
   (let temp___470 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___expr_465)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___expr_465))))))))
  ) else true) )
 
 predicate default_initial_assumption #"stations.ads" 17 0 0# "inline" 
   (temp___472 : Stations__station.station) (temp___473 : bool)  =
  ( ( ( ( ( (if ((Stations__station.id__pred temp___472)) then (
   ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___472))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___472)) then (
   ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___472))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___472)) then (
   ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___472))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___472)) then (
   (let temp___474 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___472)) in (
   (let temp___475 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___474))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___474))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___474)) then (
     ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___474))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___474)) then (
     (let temp___476 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___474)) in (
      (forall temp___477 : int.
       (if (( (Stations__station__T7s__TT8sP1.first <= temp___477) /\ (temp___477 <= Stations__station__T7s__TT8sP1.last) )) then (
        (let temp___478 = (Array__Int__Stations__list_tracks__data.get temp___476 temp___477) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___478)) then (
          (let temp___479 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___478)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___479)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___479)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___479)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___479)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___479)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___479)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___479))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___478)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___478))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___474)) then (
     ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___474))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___472)) then (
   (let temp___480 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___472)) in (
   (let temp___481 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___480))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___480))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___480)) then (
     ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___480))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___480)) then (
     (let temp___482 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___480)) in (
      (forall temp___483 : int.
       (if (( (Stations__station__T9s__TT10sP1.first <= temp___483) /\ (temp___483 <= Stations__station__T9s__TT10sP1.last) )) then (
        (let temp___484 = (Array__Int__Stations__list_tracks__data.get temp___482 temp___483) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___484)) then (
          (let temp___485 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___484)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___485)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___485)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___485)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___485)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___485)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___485)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___485))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___484)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___484))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___480)) then (
     ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___480))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___472)) then (
   (let temp___486 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___472)) in (
   (let temp___487 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___486))) in (
    ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___486))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___486)) then (
     ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___486))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___486)) then (
     (let temp___488 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___486)) in (
      (forall temp___489 : int.
       (if (( (Stations__station__T11s__TT12sP1.first <= temp___489) /\ (temp___489 <= Stations__station__T11s__TT12sP1.last) )) then (
        (let temp___490 = (Array__Int__Types__list_od__data.get temp___488 temp___489) in (
         ( (if ((Types__list_od__data.data__pred temp___490)) then (
          (let temp___491 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___490)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___491)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___491))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___491)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___491))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___490)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___490))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___486)) then (
     ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___486))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "TT1sP1" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__TT1sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1s" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TintracksS" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TintracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT2sP1" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__TT2sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__T2s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TouttracksS" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TouttracksS__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T5s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T6s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at trains.ads:11, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___506
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___506 #"trains.ads" 11 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at trains.ads:12, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___507
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___507 #"trains.ads" 12 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "train_location" defined at trains.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train_location__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Array__Int__Standard__character
 use        Temp___506
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Temp___507
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 12 0 0# "inline" 
   (temp___expr_495 : Trains__train_location.train_location) (temp___is_init_492 : bool) (temp___do_constant_493 : bool) (temp___do_toplevel_494 : bool)  =
  (if ((Trains__train_location.station__pred temp___expr_495)) then (
   ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))) then (
    (let temp___498 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495))))))))))
   ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))) then (
    (let temp___500 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495))))))))))
   ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))) then (
    (let temp___502 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___expr_495))))))))))
   ) else true) )) else true)
 
 predicate default_initial_assumption #"trains.ads" 9 0 0# "inline" 
   (temp___504 : Trains__train_location.train_location) (temp___505 : bool)  =
  ( ( ( (if ((Trains__train_location.currentlocation__pred temp___504)) then (
   ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___504)) = Temp___506.temp___506)) else true) /\ (if ((Trains__train_location.none__pred temp___504)) then (
   ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___504)) = Temp___507.temp___507)) else true) ) /\ (if ((Trains__train_location.track__pred temp___504)) then (
   (let temp___508 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___504)) in (
    ( ( ( ( ( (if ((Tracks__track.id__pred temp___508)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___508))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___508)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___508))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___508)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___508))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___508)) then (
     ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___508))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___508)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___508))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___508)) then (
     ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___508))) = 0)) else true) )))
  ) else true) ) /\ (if ((Trains__train_location.station__pred temp___504)) then (
   (let temp___509 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___504)) in (
    ( ( ( ( ( (if ((Stations__station.id__pred temp___509)) then (
     ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___509))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___509)) then (
     ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___509))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___509)) then (
     ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___509))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___509)) then (
     (let temp___510 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___509)) in (
     (let temp___511 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___510))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___510))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___510)) then (
       ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___510))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___510)) then (
       (let temp___512 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___510)) in (
        (forall temp___513 : int.
         (if (( (Stations__station__T7s__TT8sP1.first <= temp___513) /\ (temp___513 <= Stations__station__T7s__TT8sP1.last) )) then (
          (let temp___514 = (Array__Int__Stations__list_tracks__data.get temp___512 temp___513) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___514)) then (
            (let temp___515 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___514)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___515)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___515)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___515)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___515)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___515)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___515)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___515))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___514)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___514))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___510)) then (
       ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___510))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___509)) then (
     (let temp___516 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___509)) in (
     (let temp___517 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___516))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___516))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___516)) then (
       ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___516))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___516)) then (
       (let temp___518 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___516)) in (
        (forall temp___519 : int.
         (if (( (Stations__station__T9s__TT10sP1.first <= temp___519) /\ (temp___519 <= Stations__station__T9s__TT10sP1.last) )) then (
          (let temp___520 = (Array__Int__Stations__list_tracks__data.get temp___518 temp___519) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___520)) then (
            (let temp___521 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___520)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___521)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___521)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___521)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___521)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___521)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___521)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___521))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___520)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___520))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___516)) then (
       ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___516))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___509)) then (
     (let temp___522 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___509)) in (
     (let temp___523 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___522))) in (
      ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___522))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___522)) then (
       ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___522))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___522)) then (
       (let temp___524 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___522)) in (
        (forall temp___525 : int.
         (if (( (Stations__station__T11s__TT12sP1.first <= temp___525) /\ (temp___525 <= Stations__station__T11s__TT12sP1.last) )) then (
          (let temp___526 = (Array__Int__Types__list_od__data.get temp___524 temp___525) in (
           ( (if ((Types__list_od__data.data__pred temp___526)) then (
            (let temp___527 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___526)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___527)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___527))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___527)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___527))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___526)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___526))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___522)) then (
       ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___522))) = 1)) else true) )))
     ))
    ) else true) )))
  ) else true) )

end

(* Module giving axioms for type "train" defined at trains.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__train__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Temp___506
 use        Temp___507
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"stations.ads" 24 0 0# "inline" 
   (temp___expr_531 : Trains__train.train) (temp___is_init_528 : bool) (temp___do_constant_529 : bool) (temp___do_toplevel_530 : bool)  =
  (if ((Trains__train.location__pred temp___expr_531)) then (
   (if ((Trains__train_location.station__pred (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))) then (
    ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))) then (
     (let temp___534 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531))))))))))))
    ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))) then (
     (let temp___536 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531))))))))))))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))) then (
     (let temp___538 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields temp___expr_531))))))))))))
    ) else true) )) else true)) else true)
 
 predicate default_initial_assumption #"trains.ads" 17 0 0# "inline" 
   (temp___540 : Trains__train.train) (temp___541 : bool)  =
  ( ( ( ( ( (if ((Trains__train.id__pred temp___540)) then (
   ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields temp___540))) = 0)) else true) /\ (if ((Trains__train.location__pred temp___540)) then (
   (let temp___542 = (Trains__train.rec__location (Trains__train.__split_fields temp___540)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___542)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___542)) = Temp___506.temp___506)) else true) /\ (if ((Trains__train_location.none__pred temp___542)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___542)) = Temp___507.temp___507)) else true) ) /\ (if ((Trains__train_location.track__pred temp___542)) then (
     (let temp___543 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___542)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___543)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___543))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___543)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___543))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___543)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___543))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___543)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___543))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___543)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___543))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___543)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___543))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___542)) then (
     (let temp___544 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___542)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___544)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___544))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___544)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___544))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___544)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___544))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___544)) then (
       (let temp___545 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___544)) in (
       (let temp___546 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___545))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___545))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___545)) then (
         ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___545))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___545)) then (
         (let temp___547 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___545)) in (
          (forall temp___548 : int.
           (if (( (Stations__station__T7s__TT8sP1.first <= temp___548) /\ (temp___548 <= Stations__station__T7s__TT8sP1.last) )) then (
            (let temp___549 = (Array__Int__Stations__list_tracks__data.get temp___547 temp___548) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___549)) then (
              (let temp___550 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___549)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___550)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___550)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___550)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___550)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___550)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___550)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___550))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___549)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___549))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___545)) then (
         ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___545))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___544)) then (
       (let temp___551 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___544)) in (
       (let temp___552 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___551))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___551))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___551)) then (
         ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___551))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___551)) then (
         (let temp___553 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___551)) in (
          (forall temp___554 : int.
           (if (( (Stations__station__T9s__TT10sP1.first <= temp___554) /\ (temp___554 <= Stations__station__T9s__TT10sP1.last) )) then (
            (let temp___555 = (Array__Int__Stations__list_tracks__data.get temp___553 temp___554) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___555)) then (
              (let temp___556 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___555)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___556)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___556)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___556)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___556)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___556)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___556)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___556))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___555)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___555))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___551)) then (
         ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___551))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___544)) then (
       (let temp___557 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___544)) in (
       (let temp___558 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___557))) in (
        ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___557))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___557)) then (
         ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___557))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___557)) then (
         (let temp___559 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___557)) in (
          (forall temp___560 : int.
           (if (( (Stations__station__T11s__TT12sP1.first <= temp___560) /\ (temp___560 <= Stations__station__T11s__TT12sP1.last) )) then (
            (let temp___561 = (Array__Int__Types__list_od__data.get temp___559 temp___560) in (
             ( (if ((Types__list_od__data.data__pred temp___561)) then (
              (let temp___562 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___561)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___562)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___562))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___562)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___562))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___561)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___561))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___557)) then (
         ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___557))) = 1)) else true) )))
       ))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Trains__train.origin__pred temp___540)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields temp___540))) = 0)) else true) ) /\ (if ((Trains__train.destination__pred temp___540)) then (
   ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields temp___540))) = 0)) else true) ) /\ (if ((Trains__train.state__pred temp___540)) then (
   ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields temp___540))) = 3)) else true) ) /\ (if ((Trains__train.start_run_time__pred temp___540)) then (
   ((Types__timetable.to_rep (Trains__train.rec__start_run_time (Trains__train.__split_fields temp___540))) = 0)) else true) )

end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Temp___506
 use        Temp___507
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"trains.ads" 17 0 0# "inline" 
   (temp___expr_566 : Railsystems__list_trains__data_type.data_type) (temp___is_init_563 : bool) (temp___do_constant_564 : bool) (temp___do_toplevel_565 : bool)  =
  (if ((Railsystems__list_trains__data_type.location__pred temp___expr_566)) then (
   (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))) then (
    ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))) then (
     (let temp___569 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566))))))))))))
    ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))) then (
     (let temp___571 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566))))))))))))
    ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))) then (
     (let temp___573 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566)))))))) in (
      (if (False) then (
       true) else (
       (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___expr_566))))))))))))
    ) else true) )) else true)) else true)
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___575 : Railsystems__list_trains__data_type.data_type) (temp___576 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___575)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___575))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___575)) then (
   (let temp___577 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___575)) in (
    ( ( ( (if ((Trains__train_location.currentlocation__pred temp___577)) then (
     ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___577)) = Temp___506.temp___506)) else true) /\ (if ((Trains__train_location.none__pred temp___577)) then (
     ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___577)) = Temp___507.temp___507)) else true) ) /\ (if ((Trains__train_location.track__pred temp___577)) then (
     (let temp___578 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___577)) in (
      ( ( ( ( ( (if ((Tracks__track.id__pred temp___578)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___578))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___578)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___578))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___578)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___578))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___578)) then (
       ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___578))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___578)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___578))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___578)) then (
       ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___578))) = 0)) else true) )))
    ) else true) ) /\ (if ((Trains__train_location.station__pred temp___577)) then (
     (let temp___579 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___577)) in (
      ( ( ( ( ( (if ((Stations__station.id__pred temp___579)) then (
       ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___579))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___579)) then (
       ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___579))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___579)) then (
       ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___579))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___579)) then (
       (let temp___580 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___579)) in (
       (let temp___581 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___580))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___580))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___580)) then (
         ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___580))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___580)) then (
         (let temp___582 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___580)) in (
          (forall temp___583 : int.
           (if (( (Stations__station__T7s__TT8sP1.first <= temp___583) /\ (temp___583 <= Stations__station__T7s__TT8sP1.last) )) then (
            (let temp___584 = (Array__Int__Stations__list_tracks__data.get temp___582 temp___583) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___584)) then (
              (let temp___585 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___584)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___585)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___585)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___585)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___585)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___585)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___585)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___585))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___584)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___584))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___580)) then (
         ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___580))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___579)) then (
       (let temp___586 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___579)) in (
       (let temp___587 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___586))) in (
        ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___586))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___586)) then (
         ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___586))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___586)) then (
         (let temp___588 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___586)) in (
          (forall temp___589 : int.
           (if (( (Stations__station__T9s__TT10sP1.first <= temp___589) /\ (temp___589 <= Stations__station__T9s__TT10sP1.last) )) then (
            (let temp___590 = (Array__Int__Stations__list_tracks__data.get temp___588 temp___589) in (
             ( (if ((Stations__list_tracks__data.data__pred temp___590)) then (
              (let temp___591 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___590)) in (
               ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___591)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___591)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___591)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___591)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___591)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___591)) then (
                ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___591))) = 0)) else true) )))
             ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___590)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___590))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___586)) then (
         ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___586))) = 1)) else true) )))
       ))
      ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___579)) then (
       (let temp___592 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___579)) in (
       (let temp___593 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___592))) in (
        ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___592))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___592)) then (
         ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___592))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___592)) then (
         (let temp___594 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___592)) in (
          (forall temp___595 : int.
           (if (( (Stations__station__T11s__TT12sP1.first <= temp___595) /\ (temp___595 <= Stations__station__T11s__TT12sP1.last) )) then (
            (let temp___596 = (Array__Int__Types__list_od__data.get temp___594 temp___595) in (
             ( (if ((Types__list_od__data.data__pred temp___596)) then (
              (let temp___597 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___596)) in (
               ( (if ((Types__list_od__data_type.origin__pred temp___597)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___597))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___597)) then (
                ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___597))) = 0)) else true) )))
             ) else true) /\ (if ((Types__list_od__data.id__pred temp___596)) then (
              ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___596))) = 0)) else true) )))
           ) else true))))
        ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___592)) then (
         ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___592))) = 1)) else true) )))
       ))
      ) else true) )))
    ) else true) )))
  ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___575)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___575))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___575)) then (
   ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___575))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___575)) then (
   ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___575))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___575)) then (
   ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___575))) = 0)) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Temp___506
 use        Temp___507
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 21 0 0# "inline" 
   (temp___expr_601 : Railsystems__list_trains__data.data) (temp___is_init_598 : bool) (temp___do_constant_599 : bool) (temp___do_toplevel_600 : bool)  =
  (if ((Railsystems__list_trains__data.data__pred temp___expr_601)) then (
   (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))) then (
    (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))) then (
     ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))) then (
      (let temp___604 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601))))))))))))))
     ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))) then (
      (let temp___606 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601))))))))))))))
     ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))) then (
      (let temp___608 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601)))))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___expr_601))))))))))))))
     ) else true) )) else true)) else true)) else true)
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___610 : Railsystems__list_trains__data.data) (temp___611 : bool)  =
  ( (if ((Railsystems__list_trains__data.data__pred temp___610)) then (
   (let temp___612 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___610)) in (
    ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___612)) then (
     ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___612))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___612)) then (
     (let temp___613 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___612)) in (
      ( ( ( (if ((Trains__train_location.currentlocation__pred temp___613)) then (
       ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___613)) = Temp___506.temp___506)) else true) /\ (if ((Trains__train_location.none__pred temp___613)) then (
       ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___613)) = Temp___507.temp___507)) else true) ) /\ (if ((Trains__train_location.track__pred temp___613)) then (
       (let temp___614 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___613)) in (
        ( ( ( ( ( (if ((Tracks__track.id__pred temp___614)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___614))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___614)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___614))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___614)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___614))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___614)) then (
         ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___614))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___614)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___614))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___614)) then (
         ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___614))) = 0)) else true) )))
      ) else true) ) /\ (if ((Trains__train_location.station__pred temp___613)) then (
       (let temp___615 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___613)) in (
        ( ( ( ( ( (if ((Stations__station.id__pred temp___615)) then (
         ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___615))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___615)) then (
         ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___615))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___615)) then (
         ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___615))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___615)) then (
         (let temp___616 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___615)) in (
         (let temp___617 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___616))) in (
          ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___616))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___616)) then (
           ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___616))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___616)) then (
           (let temp___618 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___616)) in (
            (forall temp___619 : int.
             (if (( (Stations__station__T7s__TT8sP1.first <= temp___619) /\ (temp___619 <= Stations__station__T7s__TT8sP1.last) )) then (
              (let temp___620 = (Array__Int__Stations__list_tracks__data.get temp___618 temp___619) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___620)) then (
                (let temp___621 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___620)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___621)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___621)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___621)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___621)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___621)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___621)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___621))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___620)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___620))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___616)) then (
           ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___616))) = 1)) else true) )))
         ))
        ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___615)) then (
         (let temp___622 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___615)) in (
         (let temp___623 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___622))) in (
          ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___622))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___622)) then (
           ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___622))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___622)) then (
           (let temp___624 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___622)) in (
            (forall temp___625 : int.
             (if (( (Stations__station__T9s__TT10sP1.first <= temp___625) /\ (temp___625 <= Stations__station__T9s__TT10sP1.last) )) then (
              (let temp___626 = (Array__Int__Stations__list_tracks__data.get temp___624 temp___625) in (
               ( (if ((Stations__list_tracks__data.data__pred temp___626)) then (
                (let temp___627 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___626)) in (
                 ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___627)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___627)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___627)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___627)) then (
                  ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___627)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___627)) then (
                  ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___627))) = 0)) else true) )))
               ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___626)) then (
                ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___626))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___622)) then (
           ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___622))) = 1)) else true) )))
         ))
        ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___615)) then (
         (let temp___628 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___615)) in (
         (let temp___629 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___628))) in (
          ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___628))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___628)) then (
           ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___628))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___628)) then (
           (let temp___630 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___628)) in (
            (forall temp___631 : int.
             (if (( (Stations__station__T11s__TT12sP1.first <= temp___631) /\ (temp___631 <= Stations__station__T11s__TT12sP1.last) )) then (
              (let temp___632 = (Array__Int__Types__list_od__data.get temp___630 temp___631) in (
               ( (if ((Types__list_od__data.data__pred temp___632)) then (
                (let temp___633 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___632)) in (
                 ( (if ((Types__list_od__data_type.origin__pred temp___633)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___633))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___633)) then (
                  ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___633))) = 0)) else true) )))
               ) else true) /\ (if ((Types__list_od__data.id__pred temp___632)) then (
                ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___632))) = 0)) else true) )))
             ) else true))))
          ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___628)) then (
           ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___628))) = 1)) else true) )))
         ))
        ) else true) )))
      ) else true) )))
    ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___612)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___612))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___612)) then (
     ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___612))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___612)) then (
     ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___612))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___612)) then (
     ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___612))) = 0)) else true) )))
  ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___610)) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___610))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_array__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_array
 use        Array__Int__Railsystems__list_trains__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_637 : Railsystems__list_trains__list_array.list_array) (temp___is_init_634 : bool) (temp___do_constant_635 : bool) (temp___do_toplevel_636 : bool)  =
  ( (if (temp___do_constant_635) then (
   true) else (
   (Railsystems__list_trains__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_trains__list_array.first temp___expr_637) (Railsystems__list_trains__list_array.last temp___expr_637)))) /\ (forall temp___638 : int.
   (if (( ((Railsystems__list_trains__list_array.first temp___expr_637) <= temp___638) /\ (temp___638 <= (Railsystems__list_trains__list_array.last temp___expr_637)) )) then (
    (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))) then (
     (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))) then (
      (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))) then (
       ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))) then (
        (let temp___641 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638)))))))))))))))
       ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))) then (
        (let temp___643 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638)))))))))))))))
       ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))) then (
        (let temp___645 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638))))))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_array.to_array temp___expr_637) temp___638)))))))))))))))
       ) else true) )) else true)) else true)) else true)) else true)) )

end

(* Module giving axioms for type "T3s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at list.ads:102 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_trains__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr__T4s
 use        Railsystems__list_trains__list_ptr
 use        Array__Int__Railsystems__list_trains__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_650 : Railsystems__list_trains__list_ptr.list_ptr) (temp___is_init_647 : bool) (temp___do_constant_648 : bool) (temp___do_toplevel_649 : bool)  =
  (let temp___651 = (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__list_trains__list_ptr.__split_discrs temp___expr_650)) in (
   (if ((Railsystems__list_trains__list_ptr.elements__pred temp___expr_650)) then (
    ( (if (False) then (
     true) else (
     ( (Railsystems__list_trains__list_ptr__T4s.dynamic_property 1 (Standard__positive.to_rep temp___651) (Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) (Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650)))) /\ ( ((Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) = 1) /\ ((Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) = (Standard__positive.to_rep temp___651)) ) ))) /\ (forall temp___652 : int.
     (if (( ((Railsystems__list_trains__list_ptr__T4s.first (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) <= temp___652) /\ (temp___652 <= (Railsystems__list_trains__list_ptr__T4s.last (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650)))) )) then (
      (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))) then (
       (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))) then (
        (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))) then (
         ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))) then (
          (let temp___655 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652)))))))))))))))
         ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))) then (
          (let temp___657 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652)))))))))))))))
         ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))) then (
          (let temp___659 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652))))))))))) in (
           (if (False) then (
            true) else (
            (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__list_trains__list_ptr__T4s.to_array (Railsystems__list_trains__list_ptr.rec__elements (Railsystems__list_trains__list_ptr.__split_fields temp___expr_650))) temp___652)))))))))))))))
         ) else true) )) else true)) else true)) else true)) else true)) )) else true)))


end

(* Module giving axioms for type "data_type" defined at list.ads:21 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data_type__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"list.ads" 99 0 0# "inline" 
   (temp___expr_664 : Railsystems__list_stations__data_type.data_type) (temp___is_init_661 : bool) (temp___do_constant_662 : bool) (temp___do_toplevel_663 : bool)  =
  ( ( (if ((Railsystems__list_stations__data_type.incoming__pred temp___expr_664)) then (
   (let temp___665 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___expr_664)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___expr_664))))))))
  ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___expr_664)) then (
   (let temp___667 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___expr_664)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___expr_664))))))))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___expr_664)) then (
   (let temp___669 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___expr_664)))) in (
    (if (False) then (
     true) else (
     (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___expr_664))))))))
  ) else true) )
 
 predicate default_initial_assumption #"list.ads" 21 0 0# "inline" 
   (temp___671 : Railsystems__list_stations__data_type.data_type) (temp___672 : bool)  =
  ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___671)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___671))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___671)) then (
   ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___671)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___671))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___671)) then (
   (let temp___673 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___671)) in (
   (let temp___674 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___673))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___673))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___673)) then (
     ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___673))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___673)) then (
     (let temp___675 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___673)) in (
      (forall temp___676 : int.
       (if (( (Stations__station__T7s__TT8sP1.first <= temp___676) /\ (temp___676 <= Stations__station__T7s__TT8sP1.last) )) then (
        (let temp___677 = (Array__Int__Stations__list_tracks__data.get temp___675 temp___676) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___677)) then (
          (let temp___678 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___677)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___678)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___678)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___678)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___678)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___678)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___678)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___678))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___677)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___677))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___673)) then (
     ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___673))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___671)) then (
   (let temp___679 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___671)) in (
   (let temp___680 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___679))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___679))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___679)) then (
     ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___679))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___679)) then (
     (let temp___681 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___679)) in (
      (forall temp___682 : int.
       (if (( (Stations__station__T9s__TT10sP1.first <= temp___682) /\ (temp___682 <= Stations__station__T9s__TT10sP1.last) )) then (
        (let temp___683 = (Array__Int__Stations__list_tracks__data.get temp___681 temp___682) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___683)) then (
          (let temp___684 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___683)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___684)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___684)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___684)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___684)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___684)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___684)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___684))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___683)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___683))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___679)) then (
     ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___679))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___671)) then (
   (let temp___685 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___671)) in (
   (let temp___686 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___685))) in (
    ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___685))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___685)) then (
     ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___685))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___685)) then (
     (let temp___687 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___685)) in (
      (forall temp___688 : int.
       (if (( (Stations__station__T11s__TT12sP1.first <= temp___688) /\ (temp___688 <= Stations__station__T11s__TT12sP1.last) )) then (
        (let temp___689 = (Array__Int__Types__list_od__data.get temp___687 temp___688) in (
         ( (if ((Types__list_od__data.data__pred temp___689)) then (
          (let temp___690 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___689)) in (
           ( (if ((Types__list_od__data_type.origin__pred temp___690)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___690))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___690)) then (
            ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___690))) = 0)) else true) )))
         ) else true) /\ (if ((Types__list_od__data.id__pred temp___689)) then (
          ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___689))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___685)) then (
     ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___685))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "data" defined at list.ads:90 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__data__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__station_locations
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data

 predicate dynamic_invariant #"stations.ads" 24 0 0# "inline" 
   (temp___expr_694 : Railsystems__list_stations__data.data) (temp___is_init_691 : bool) (temp___do_constant_692 : bool) (temp___do_toplevel_693 : bool)  =
  (if ((Railsystems__list_stations__data.data__pred temp___expr_694)) then (
   ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))) then (
    (let temp___695 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694))))))))))
   ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))) then (
    (let temp___697 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694))))))))))
   ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))) then (
    (let temp___699 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694)))))) in (
     (if (False) then (
      true) else (
      (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___expr_694))))))))))
   ) else true) )) else true)
 
 predicate default_initial_assumption #"list.ads" 90 0 0# "inline" 
   (temp___701 : Railsystems__list_stations__data.data) (temp___702 : bool)  =
  ( (if ((Railsystems__list_stations__data.data__pred temp___701)) then (
   (let temp___703 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___701)) in (
    ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___703)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___703))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___703)) then (
     ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___703))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___703)) then (
     ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___703))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___703)) then (
     (let temp___704 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___703)) in (
     (let temp___705 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___704))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___704))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___704)) then (
       ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___704))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___704)) then (
       (let temp___706 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___704)) in (
        (forall temp___707 : int.
         (if (( (Stations__station__T7s__TT8sP1.first <= temp___707) /\ (temp___707 <= Stations__station__T7s__TT8sP1.last) )) then (
          (let temp___708 = (Array__Int__Stations__list_tracks__data.get temp___706 temp___707) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___708)) then (
            (let temp___709 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___708)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___709)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___709)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___709)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___709)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___709)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___709)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___709))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___708)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___708))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___704)) then (
       ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___704))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___703)) then (
     (let temp___710 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___703)) in (
     (let temp___711 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___710))) in (
      ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___710))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___710)) then (
       ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___710))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___710)) then (
       (let temp___712 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___710)) in (
        (forall temp___713 : int.
         (if (( (Stations__station__T9s__TT10sP1.first <= temp___713) /\ (temp___713 <= Stations__station__T9s__TT10sP1.last) )) then (
          (let temp___714 = (Array__Int__Stations__list_tracks__data.get temp___712 temp___713) in (
           ( (if ((Stations__list_tracks__data.data__pred temp___714)) then (
            (let temp___715 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___714)) in (
             ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___715)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___715)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___715)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___715)) then (
              ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___715)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___715)) then (
              ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___715))) = 0)) else true) )))
           ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___714)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___714))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___710)) then (
       ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___710))) = 1)) else true) )))
     ))
    ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___703)) then (
     (let temp___716 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___703)) in (
     (let temp___717 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___716))) in (
      ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___716))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___716)) then (
       ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___716))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___716)) then (
       (let temp___718 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___716)) in (
        (forall temp___719 : int.
         (if (( (Stations__station__T11s__TT12sP1.first <= temp___719) /\ (temp___719 <= Stations__station__T11s__TT12sP1.last) )) then (
          (let temp___720 = (Array__Int__Types__list_od__data.get temp___718 temp___719) in (
           ( (if ((Types__list_od__data.data__pred temp___720)) then (
            (let temp___721 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___720)) in (
             ( (if ((Types__list_od__data_type.origin__pred temp___721)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___721))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___721)) then (
              ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___721))) = 0)) else true) )))
           ) else true) /\ (if ((Types__list_od__data.id__pred temp___720)) then (
            ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___720))) = 0)) else true) )))
         ) else true))))
      ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___716)) then (
       ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___716))) = 1)) else true) )))
     ))
    ) else true) )))
  ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___701)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___701))) = 0)) else true) )

end

(* Module giving axioms for type "list_array" defined at list.ads:98 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_array__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_array
 use        Array__Int__Railsystems__list_stations__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_725 : Railsystems__list_stations__list_array.list_array) (temp___is_init_722 : bool) (temp___do_constant_723 : bool) (temp___do_toplevel_724 : bool)  =
  ( (if (temp___do_constant_723) then (
   true) else (
   (Railsystems__list_stations__list_array.dynamic_property Standard__positive.first Standard__positive.last (Railsystems__list_stations__list_array.first temp___expr_725) (Railsystems__list_stations__list_array.last temp___expr_725)))) /\ (forall temp___726 : int.
   (if (( ((Railsystems__list_stations__list_array.first temp___expr_725) <= temp___726) /\ (temp___726 <= (Railsystems__list_stations__list_array.last temp___expr_725)) )) then (
    (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))) then (
     ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))) then (
      (let temp___727 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726)))))))))))
     ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))) then (
      (let temp___729 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726)))))))))))
     ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))) then (
      (let temp___731 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726))))))) in (
       (if (False) then (
        true) else (
        (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_array.to_array temp___expr_725) temp___726)))))))))))
     ) else true) )) else true)) else true)) )

end

(* Module giving axioms for type "T7s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at list.ads:102 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "list_ptr" defined at list.ads:99 instantiated at railsystems.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__list_stations__list_ptr__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive
 use        Types__list_od__list_ptr
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s
 use        Stations__station__T9s
 use        Stations__station__T11s
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr__T8s
 use        Railsystems__list_stations__list_ptr
 use        Array__Int__Railsystems__list_stations__data

 predicate dynamic_invariant #"list.ads" 90 0 0# "inline" 
   (temp___expr_736 : Railsystems__list_stations__list_ptr.list_ptr) (temp___is_init_733 : bool) (temp___do_constant_734 : bool) (temp___do_toplevel_735 : bool)  =
  (let temp___737 = (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__list_stations__list_ptr.__split_discrs temp___expr_736)) in (
   (if ((Railsystems__list_stations__list_ptr.elements__pred temp___expr_736)) then (
    ( (if (False) then (
     true) else (
     ( (Railsystems__list_stations__list_ptr__T8s.dynamic_property 1 (Standard__positive.to_rep temp___737) (Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) (Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736)))) /\ ( ((Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) = 1) /\ ((Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) = (Standard__positive.to_rep temp___737)) ) ))) /\ (forall temp___738 : int.
     (if (( ((Railsystems__list_stations__list_ptr__T8s.first (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) <= temp___738) /\ (temp___738 <= (Railsystems__list_stations__list_ptr__T8s.last (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736)))) )) then (
      (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))) then (
       ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))) then (
        (let temp___739 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738)))))))))))
       ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))) then (
        (let temp___741 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738)))))))))))
       ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))) then (
        (let temp___743 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738))))))) in (
         (if (False) then (
          true) else (
          (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__list_stations__list_ptr__T8s.to_array (Railsystems__list_stations__list_ptr.rec__elements (Railsystems__list_stations__list_ptr.__split_fields temp___expr_736))) temp___738)))))))))))
       ) else true) )) else true)) else true)) )) else true)))


end

(* Module giving axioms for type "TT10sP1" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__TT10sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__T10s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at railsystems.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T9s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT12sP1" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__TT12sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__T12s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at railsystems.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T11s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TT14sP1" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__TT14sP1__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14s" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__T14s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13s" defined at railsystems.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__T13s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "railsystem" defined at railsystems.ads:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__railsystem__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__positive
 use        Types__train_state
 use        Types__station_locations
 use        Types__timetable
 use        Types__list_od__data_type
 use        Types__list_od__data
 use        Array__Int__Types__list_od__data
 use        Types__list_od__list_ptr
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__station__T7s__TT8sP1
 use        Stations__station__T7s
 use        Stations__station__T9s__TT10sP1
 use        Stations__station__T9s
 use        Stations__station__T11s__TT12sP1
 use        Stations__station__T11s
 use        Stations__station
 use        Trains__train_location
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__railsystem__T9s__TT10sP1
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem__T11s__TT12sP1
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem__T13s__TT14sP1
 use        Railsystems__railsystem__T13s
 use        Railsystems__railsystem
 use        Temp___506
 use        Temp___507
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Railsystems__list_trains__data
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Railsystems__list_stations__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Stations__list_tracks__data
 use        Array__Int__Types__list_od__data
 use        Array__Int__Stations__list_tracks__data

 predicate dynamic_invariant #"list.ads" 99 0 0# "inline" 
   (temp___expr_748 : Railsystems__railsystem.railsystem) (temp___is_init_745 : bool) (temp___do_constant_746 : bool) (temp___do_toplevel_747 : bool)  =
  ( ( (if ((Railsystems__railsystem.all_trains__pred temp___expr_748)) then (
   (let temp___749 = (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) in (
    ( (if (False) then (
     true) else (
     (Railsystems__railsystem__T9s.in_range 100 (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))))) /\ (if ((Railsystems__railsystem__T9s.elements__pred (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) then (
     (forall temp___750 : int.
      (if (( (Railsystems__railsystem__T9s__TT10sP1.first <= temp___750) /\ (temp___750 <= Railsystems__railsystem__T9s__TT10sP1.last) )) then (
       (if ((Railsystems__list_trains__data.data__pred (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))) then (
        (if ((Railsystems__list_trains__data_type.location__pred (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))) then (
         (if ((Trains__train_location.station__pred (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))) then (
          ( ( (if ((Stations__station.incoming__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))) then (
           (let temp___753 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Stations__station.rec__incoming (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750)))))))))))))))
          ) else true) /\ (if ((Stations__station.outgoing__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))) then (
           (let temp___755 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Stations__station.rec__outgoing (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750)))))))))))))))
          ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))) then (
           (let temp___757 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750))))))))))) in (
            (if (False) then (
             true) else (
             (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields (Array__Int__Railsystems__list_trains__data.get (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___750)))))))))))))))
          ) else true) )) else true)) else true)) else true)) else true))) else true) )))
  ) else true) /\ (if ((Railsystems__railsystem.all_stations__pred temp___expr_748)) then (
   (let temp___759 = (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) in (
    ( (if (False) then (
     true) else (
     (Railsystems__railsystem__T11s.in_range 100 (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))))) /\ (if ((Railsystems__railsystem__T11s.elements__pred (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) then (
     (forall temp___760 : int.
      (if (( (Railsystems__railsystem__T11s__TT12sP1.first <= temp___760) /\ (temp___760 <= Railsystems__railsystem__T11s__TT12sP1.last) )) then (
       (if ((Railsystems__list_stations__data.data__pred (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))) then (
        ( ( (if ((Railsystems__list_stations__data_type.incoming__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))) then (
         (let temp___761 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T7s.in_range 100 (Stations__station__T7s.to_base (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760)))))))))))
        ) else true) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))) then (
         (let temp___763 = (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T9s.in_range 100 (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760)))))))))))
        ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))) then (
         (let temp___765 = (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760))))))) in (
          (if (False) then (
           true) else (
           (Stations__station__T11s.in_range 100 (Stations__station__T11s.to_base (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields (Array__Int__Railsystems__list_stations__data.get (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___expr_748)))) temp___760)))))))))))
        ) else true) )) else true)) else true))) else true) )))
  ) else true) ) /\ (if ((Railsystems__railsystem.all_tracks__pred temp___expr_748)) then (
   (let temp___767 = (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___expr_748)))) in (
    (if (False) then (
     true) else (
     (Railsystems__railsystem__T13s.in_range 100 (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___expr_748))))))))
  ) else true) )
 
 predicate default_initial_assumption #"railsystems.ads" 26 0 0# "inline" 
   (temp___769 : Railsystems__railsystem.railsystem) (temp___770 : bool)  =
  ( ( (if ((Railsystems__railsystem.all_trains__pred temp___769)) then (
   (let temp___771 = (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields temp___769)) in (
   (let temp___772 = (Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs temp___771))) in (
    ( ( ( ((Standard__positive.to_rep (Railsystems__list_trains__list_ptr.rec__max_size (Railsystems__railsystem__T9s.__split_discrs temp___771))) = 100) /\ (if ((Railsystems__railsystem__T9s.size__pred temp___771)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T9s.rec__size (Railsystems__railsystem__T9s.__split_fields temp___771))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T9s.elements__pred temp___771)) then (
     (let temp___773 = (Railsystems__railsystem__T9s.rec__elements (Railsystems__railsystem__T9s.__split_fields temp___771)) in (
      (forall temp___774 : int.
       (if (( (Railsystems__railsystem__T9s__TT10sP1.first <= temp___774) /\ (temp___774 <= Railsystems__railsystem__T9s__TT10sP1.last) )) then (
        (let temp___775 = (Array__Int__Railsystems__list_trains__data.get temp___773 temp___774) in (
         ( (if ((Railsystems__list_trains__data.data__pred temp___775)) then (
          (let temp___776 = (Railsystems__list_trains__data.rec__data (Railsystems__list_trains__data.__split_fields temp___775)) in (
           ( ( ( ( ( (if ((Railsystems__list_trains__data_type.id__pred temp___776)) then (
            ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields temp___776))) = 0)) else true) /\ (if ((Railsystems__list_trains__data_type.location__pred temp___776)) then (
            (let temp___777 = (Railsystems__list_trains__data_type.rec__location (Railsystems__list_trains__data_type.__split_fields temp___776)) in (
             ( ( ( (if ((Trains__train_location.currentlocation__pred temp___777)) then (
              ((Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields temp___777)) = Temp___506.temp___506)) else true) /\ (if ((Trains__train_location.none__pred temp___777)) then (
              ((Trains__train_location.rec__none (Trains__train_location.__split_fields temp___777)) = Temp___507.temp___507)) else true) ) /\ (if ((Trains__train_location.track__pred temp___777)) then (
              (let temp___778 = (Trains__train_location.rec__track (Trains__train_location.__split_fields temp___777)) in (
               ( ( ( ( ( (if ((Tracks__track.id__pred temp___778)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields temp___778))) = 0)) else true) /\ (if ((Tracks__track.origin__pred temp___778)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__origin (Tracks__track.__split_fields temp___778))) = 0)) else true) ) /\ (if ((Tracks__track.destination__pred temp___778)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__destination (Tracks__track.__split_fields temp___778))) = 0)) else true) ) /\ (if ((Tracks__track.trainid__pred temp___778)) then (
                ((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields temp___778))) = 0)) else true) ) /\ (if ((Tracks__track.trackslineorigin__pred temp___778)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslineorigin (Tracks__track.__split_fields temp___778))) = 0)) else true) ) /\ (if ((Tracks__track.trackslinedestination__pred temp___778)) then (
                ((Types__station_locations.to_rep (Tracks__track.rec__trackslinedestination (Tracks__track.__split_fields temp___778))) = 0)) else true) )))
             ) else true) ) /\ (if ((Trains__train_location.station__pred temp___777)) then (
              (let temp___779 = (Trains__train_location.rec__station (Trains__train_location.__split_fields temp___777)) in (
               ( ( ( ( ( (if ((Stations__station.id__pred temp___779)) then (
                ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields temp___779))) = 0)) else true) /\ (if ((Stations__station.location__pred temp___779)) then (
                ((Types__station_locations.to_rep (Stations__station.rec__location (Stations__station.__split_fields temp___779))) = 0)) else true) ) /\ (if ((Stations__station.trainid__pred temp___779)) then (
                ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields temp___779))) = 0)) else true) ) /\ (if ((Stations__station.incoming__pred temp___779)) then (
                (let temp___780 = (Stations__station.rec__incoming (Stations__station.__split_fields temp___779)) in (
                (let temp___781 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___780))) in (
                 ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___780))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___780)) then (
                  ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___780))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___780)) then (
                  (let temp___782 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___780)) in (
                   (forall temp___783 : int.
                    (if (( (Stations__station__T7s__TT8sP1.first <= temp___783) /\ (temp___783 <= Stations__station__T7s__TT8sP1.last) )) then (
                     (let temp___784 = (Array__Int__Stations__list_tracks__data.get temp___782 temp___783) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___784)) then (
                       (let temp___785 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___784)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___785)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___785)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___785)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___785)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___785)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___785)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___785))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___784)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___784))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___780)) then (
                  ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___780))) = 1)) else true) )))
                ))
               ) else true) ) /\ (if ((Stations__station.outgoing__pred temp___779)) then (
                (let temp___786 = (Stations__station.rec__outgoing (Stations__station.__split_fields temp___779)) in (
                (let temp___787 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___786))) in (
                 ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___786))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___786)) then (
                  ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___786))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___786)) then (
                  (let temp___788 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___786)) in (
                   (forall temp___789 : int.
                    (if (( (Stations__station__T9s__TT10sP1.first <= temp___789) /\ (temp___789 <= Stations__station__T9s__TT10sP1.last) )) then (
                     (let temp___790 = (Array__Int__Stations__list_tracks__data.get temp___788 temp___789) in (
                      ( (if ((Stations__list_tracks__data.data__pred temp___790)) then (
                       (let temp___791 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___790)) in (
                        ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___791)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___791)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___791)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___791)) then (
                         ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___791)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___791)) then (
                         ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___791))) = 0)) else true) )))
                      ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___790)) then (
                       ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___790))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___786)) then (
                  ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___786))) = 1)) else true) )))
                ))
               ) else true) ) /\ (if ((Stations__station.trackslineoriginanddestination__pred temp___779)) then (
                (let temp___792 = (Stations__station.rec__trackslineoriginanddestination (Stations__station.__split_fields temp___779)) in (
                (let temp___793 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___792))) in (
                 ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___792))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___792)) then (
                  ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___792))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___792)) then (
                  (let temp___794 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___792)) in (
                   (forall temp___795 : int.
                    (if (( (Stations__station__T11s__TT12sP1.first <= temp___795) /\ (temp___795 <= Stations__station__T11s__TT12sP1.last) )) then (
                     (let temp___796 = (Array__Int__Types__list_od__data.get temp___794 temp___795) in (
                      ( (if ((Types__list_od__data.data__pred temp___796)) then (
                       (let temp___797 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___796)) in (
                        ( (if ((Types__list_od__data_type.origin__pred temp___797)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___797))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___797)) then (
                         ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___797))) = 0)) else true) )))
                      ) else true) /\ (if ((Types__list_od__data.id__pred temp___796)) then (
                       ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___796))) = 0)) else true) )))
                    ) else true))))
                 ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___792)) then (
                  ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___792))) = 1)) else true) )))
                ))
               ) else true) )))
             ) else true) )))
           ) else true) ) /\ (if ((Railsystems__list_trains__data_type.origin__pred temp___776)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__origin (Railsystems__list_trains__data_type.__split_fields temp___776))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.destination__pred temp___776)) then (
            ((Types__station_locations.to_rep (Railsystems__list_trains__data_type.rec__destination (Railsystems__list_trains__data_type.__split_fields temp___776))) = 0)) else true) ) /\ (if ((Railsystems__list_trains__data_type.state__pred temp___776)) then (
            ((Types__train_state.to_rep (Railsystems__list_trains__data_type.rec__state (Railsystems__list_trains__data_type.__split_fields temp___776))) = 3)) else true) ) /\ (if ((Railsystems__list_trains__data_type.start_run_time__pred temp___776)) then (
            ((Types__timetable.to_rep (Railsystems__list_trains__data_type.rec__start_run_time (Railsystems__list_trains__data_type.__split_fields temp___776))) = 0)) else true) )))
         ) else true) /\ (if ((Railsystems__list_trains__data.id__pred temp___775)) then (
          ((Standard__natural.to_rep (Railsystems__list_trains__data.rec__id (Railsystems__list_trains__data.__split_fields temp___775))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T9s.head__pred temp___771)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T9s.rec__head (Railsystems__railsystem__T9s.__split_fields temp___771))) = 1)) else true) )))
   ))
  ) else true) /\ (if ((Railsystems__railsystem.all_stations__pred temp___769)) then (
   (let temp___798 = (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields temp___769)) in (
   (let temp___799 = (Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs temp___798))) in (
    ( ( ( ((Standard__positive.to_rep (Railsystems__list_stations__list_ptr.rec__max_size (Railsystems__railsystem__T11s.__split_discrs temp___798))) = 100) /\ (if ((Railsystems__railsystem__T11s.size__pred temp___798)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T11s.rec__size (Railsystems__railsystem__T11s.__split_fields temp___798))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T11s.elements__pred temp___798)) then (
     (let temp___800 = (Railsystems__railsystem__T11s.rec__elements (Railsystems__railsystem__T11s.__split_fields temp___798)) in (
      (forall temp___801 : int.
       (if (( (Railsystems__railsystem__T11s__TT12sP1.first <= temp___801) /\ (temp___801 <= Railsystems__railsystem__T11s__TT12sP1.last) )) then (
        (let temp___802 = (Array__Int__Railsystems__list_stations__data.get temp___800 temp___801) in (
         ( (if ((Railsystems__list_stations__data.data__pred temp___802)) then (
          (let temp___803 = (Railsystems__list_stations__data.rec__data (Railsystems__list_stations__data.__split_fields temp___802)) in (
           ( ( ( ( ( (if ((Railsystems__list_stations__data_type.id__pred temp___803)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields temp___803))) = 0)) else true) /\ (if ((Railsystems__list_stations__data_type.location__pred temp___803)) then (
            ((Types__station_locations.to_rep (Railsystems__list_stations__data_type.rec__location (Railsystems__list_stations__data_type.__split_fields temp___803))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.trainid__pred temp___803)) then (
            ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__trainid (Railsystems__list_stations__data_type.__split_fields temp___803))) = 0)) else true) ) /\ (if ((Railsystems__list_stations__data_type.incoming__pred temp___803)) then (
            (let temp___804 = (Railsystems__list_stations__data_type.rec__incoming (Railsystems__list_stations__data_type.__split_fields temp___803)) in (
            (let temp___805 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___804))) in (
             ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T7s.__split_discrs temp___804))) = 100) /\ (if ((Stations__station__T7s.size__pred temp___804)) then (
              ((Standard__natural.to_rep (Stations__station__T7s.rec__size (Stations__station__T7s.__split_fields temp___804))) = 0)) else true) ) /\ (if ((Stations__station__T7s.elements__pred temp___804)) then (
              (let temp___806 = (Stations__station__T7s.rec__elements (Stations__station__T7s.__split_fields temp___804)) in (
               (forall temp___807 : int.
                (if (( (Stations__station__T7s__TT8sP1.first <= temp___807) /\ (temp___807 <= Stations__station__T7s__TT8sP1.last) )) then (
                 (let temp___808 = (Array__Int__Stations__list_tracks__data.get temp___806 temp___807) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___808)) then (
                   (let temp___809 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___808)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___809)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___809)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___809)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___809)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___809)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___809)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___809))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___808)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___808))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T7s.head__pred temp___804)) then (
              ((Standard__positive.to_rep (Stations__station__T7s.rec__head (Stations__station__T7s.__split_fields temp___804))) = 1)) else true) )))
            ))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.outgoing__pred temp___803)) then (
            (let temp___810 = (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields temp___803)) in (
            (let temp___811 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___810))) in (
             ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Stations__station__T9s.__split_discrs temp___810))) = 100) /\ (if ((Stations__station__T9s.size__pred temp___810)) then (
              ((Standard__natural.to_rep (Stations__station__T9s.rec__size (Stations__station__T9s.__split_fields temp___810))) = 0)) else true) ) /\ (if ((Stations__station__T9s.elements__pred temp___810)) then (
              (let temp___812 = (Stations__station__T9s.rec__elements (Stations__station__T9s.__split_fields temp___810)) in (
               (forall temp___813 : int.
                (if (( (Stations__station__T9s__TT10sP1.first <= temp___813) /\ (temp___813 <= Stations__station__T9s__TT10sP1.last) )) then (
                 (let temp___814 = (Array__Int__Stations__list_tracks__data.get temp___812 temp___813) in (
                  ( (if ((Stations__list_tracks__data.data__pred temp___814)) then (
                   (let temp___815 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___814)) in (
                    ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___815)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___815)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___815)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___815)) then (
                     ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___815)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___815)) then (
                     ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___815))) = 0)) else true) )))
                  ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___814)) then (
                   ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___814))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T9s.head__pred temp___810)) then (
              ((Standard__positive.to_rep (Stations__station__T9s.rec__head (Stations__station__T9s.__split_fields temp___810))) = 1)) else true) )))
            ))
           ) else true) ) /\ (if ((Railsystems__list_stations__data_type.trackslineoriginanddestination__pred temp___803)) then (
            (let temp___816 = (Railsystems__list_stations__data_type.rec__trackslineoriginanddestination (Railsystems__list_stations__data_type.__split_fields temp___803)) in (
            (let temp___817 = (Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___816))) in (
             ( ( ( ((Standard__positive.to_rep (Types__list_od__list_ptr.rec__max_size (Stations__station__T11s.__split_discrs temp___816))) = 100) /\ (if ((Stations__station__T11s.size__pred temp___816)) then (
              ((Standard__natural.to_rep (Stations__station__T11s.rec__size (Stations__station__T11s.__split_fields temp___816))) = 0)) else true) ) /\ (if ((Stations__station__T11s.elements__pred temp___816)) then (
              (let temp___818 = (Stations__station__T11s.rec__elements (Stations__station__T11s.__split_fields temp___816)) in (
               (forall temp___819 : int.
                (if (( (Stations__station__T11s__TT12sP1.first <= temp___819) /\ (temp___819 <= Stations__station__T11s__TT12sP1.last) )) then (
                 (let temp___820 = (Array__Int__Types__list_od__data.get temp___818 temp___819) in (
                  ( (if ((Types__list_od__data.data__pred temp___820)) then (
                   (let temp___821 = (Types__list_od__data.rec__data (Types__list_od__data.__split_fields temp___820)) in (
                    ( (if ((Types__list_od__data_type.origin__pred temp___821)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__origin (Types__list_od__data_type.__split_fields temp___821))) = 0)) else true) /\ (if ((Types__list_od__data_type.destination__pred temp___821)) then (
                     ((Types__station_locations.to_rep (Types__list_od__data_type.rec__destination (Types__list_od__data_type.__split_fields temp___821))) = 0)) else true) )))
                  ) else true) /\ (if ((Types__list_od__data.id__pred temp___820)) then (
                   ((Standard__natural.to_rep (Types__list_od__data.rec__id (Types__list_od__data.__split_fields temp___820))) = 0)) else true) )))
                ) else true))))
             ) else true) ) /\ (if ((Stations__station__T11s.head__pred temp___816)) then (
              ((Standard__positive.to_rep (Stations__station__T11s.rec__head (Stations__station__T11s.__split_fields temp___816))) = 1)) else true) )))
            ))
           ) else true) )))
         ) else true) /\ (if ((Railsystems__list_stations__data.id__pred temp___802)) then (
          ((Standard__natural.to_rep (Railsystems__list_stations__data.rec__id (Railsystems__list_stations__data.__split_fields temp___802))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T11s.head__pred temp___798)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T11s.rec__head (Railsystems__railsystem__T11s.__split_fields temp___798))) = 1)) else true) )))
   ))
  ) else true) ) /\ (if ((Railsystems__railsystem.all_tracks__pred temp___769)) then (
   (let temp___822 = (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields temp___769)) in (
   (let temp___823 = (Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs temp___822))) in (
    ( ( ( ((Standard__positive.to_rep (Stations__list_tracks__list_ptr.rec__max_size (Railsystems__railsystem__T13s.__split_discrs temp___822))) = 100) /\ (if ((Railsystems__railsystem__T13s.size__pred temp___822)) then (
     ((Standard__natural.to_rep (Railsystems__railsystem__T13s.rec__size (Railsystems__railsystem__T13s.__split_fields temp___822))) = 0)) else true) ) /\ (if ((Railsystems__railsystem__T13s.elements__pred temp___822)) then (
     (let temp___824 = (Railsystems__railsystem__T13s.rec__elements (Railsystems__railsystem__T13s.__split_fields temp___822)) in (
      (forall temp___825 : int.
       (if (( (Railsystems__railsystem__T13s__TT14sP1.first <= temp___825) /\ (temp___825 <= Railsystems__railsystem__T13s__TT14sP1.last) )) then (
        (let temp___826 = (Array__Int__Stations__list_tracks__data.get temp___824 temp___825) in (
         ( (if ((Stations__list_tracks__data.data__pred temp___826)) then (
          (let temp___827 = (Stations__list_tracks__data.rec__data (Stations__list_tracks__data.__split_fields temp___826)) in (
           ( ( ( ( ( (if ((Stations__list_tracks__data_type.id__pred temp___827)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) /\ (if ((Stations__list_tracks__data_type.origin__pred temp___827)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.destination__pred temp___827)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trainid__pred temp___827)) then (
            ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__trainid (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslineorigin__pred temp___827)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslineorigin (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) ) /\ (if ((Stations__list_tracks__data_type.trackslinedestination__pred temp___827)) then (
            ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields temp___827))) = 0)) else true) )))
         ) else true) /\ (if ((Stations__list_tracks__data.id__pred temp___826)) then (
          ((Standard__natural.to_rep (Stations__list_tracks__data.rec__id (Stations__list_tracks__data.__split_fields temp___826))) = 0)) else true) )))
       ) else true))))
    ) else true) ) /\ (if ((Railsystems__railsystem__T13s.head__pred temp___822)) then (
     ((Standard__positive.to_rep (Railsystems__railsystem__T13s.rec__head (Railsystems__railsystem__T13s.__split_fields temp___822))) = 1)) else true) )))
   ))
  ) else true) )

end

(* Module giving axioms for type "T30s" defined at railsystems.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrain__L29s__T30s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T32s" defined at railsystems.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addtrack__L31s__T32s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T34s" defined at railsystems.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__addstation__L33s__T34s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T35s" defined at railsystems.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__settrainlocation__T35s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at railsystems.ads:101, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___828
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___828 #"railsystems.ads" 101 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "T39s" defined at railsystems.ads:113, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__T39s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T38s" defined at railsystems.ads:114, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__go__L37s__T38s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at railsystems.ads:113, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___829
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___829 #"railsystems.ads" 113 0 0# 
   : Array__Int__Standard__character.map

end

(* Module giving axioms for type "tc" defined at railsystems-test.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__test__tc__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 predicate dynamic_invariant #"railsystems.ads" 113 0 0# "inline" 
   (temp___expr_834 : Railsystems__test__tc.tc) (temp___is_init_831 : bool) (temp___do_constant_832 : bool) (temp___do_toplevel_833 : bool)  =
  true
 
 predicate default_initial_assumption #"railsystems-test.ads" 7 0 0# "inline" 
   (temp___835 : Railsystems__test__tc.tc) (temp___836 : bool)  =
  ((Railsystems__test__tc.attr__tag temp___835) = Railsystems__test__tc.__tag)

end

(* Module giving axioms for type "TtcC" defined at railsystems-test.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railsystems__test__TtcC__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc

 predicate dynamic_invariant #"railsystems-test.ads" 7 0 0# "inline" 
   (temp___expr_840 : Railsystems__test__tc.tc) (temp___is_init_837 : bool) (temp___do_constant_838 : bool) (temp___do_toplevel_839 : bool)  =
  true

end

(* Module giving axioms for type "list" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__test_lists__list__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 predicate dynamic_invariant #"railsystems-test.ads" 7 0 0# "inline" 
   (temp___expr_844 : Aunit__test_suites__test_lists__list.list) (temp___is_init_841 : bool) (temp___do_constant_842 : bool) (temp___do_toplevel_843 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___845 : Aunit__test_suites__test_lists__list.list) (temp___846 : bool)  =
  ((Aunit__test_suites__test_lists__list.attr__tag temp___845) = Aunit__test_suites__test_lists__list.__tag)

end

(* Module giving axioms for type "test_suite" defined at aunit-test_suites.ads:82, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__test_suite__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_suite

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_850 : Aunit__test_suites__test_suite.test_suite) (temp___is_init_847 : bool) (temp___do_constant_848 : bool) (temp___do_toplevel_849 : bool)  =
  true
 
 predicate default_initial_assumption #"aunit-test_suites.ads" 82 0 0# "inline" 
   (temp___851 : Aunit__test_suites__test_suite.test_suite) (temp___852 : bool)  =
  ( ((Aunit__test_suites__test_suite.attr__tag temp___851) = Aunit__test_suites__test_suite.__tag) /\ (if ((Aunit__test_suites__test_suite.tests__pred temp___851)) then (
   (let temp___853 = (Aunit__test_suites__test_suite.rec__tests (Aunit__test_suites__test_suite.__split_fields temp___851)) in (
    ((Aunit__test_suites__test_lists__list.attr__tag temp___853) = Aunit__test_suites__test_lists__list.__tag)))
  ) else true) )

end

(* Module giving axioms for type "test_suite_elt_kind" defined at aunit-test_suites.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__test_suite_elt_kind__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__test_suites__test_suite_elt_kind

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_857 : int) (temp___is_init_854 : bool) (temp___do_constant_855 : bool) (temp___do_toplevel_856 : bool)  =
  (if (( temp___is_init_854 \/ (Aunit__test_suites__test_suite_elt_kind.first <= Aunit__test_suites__test_suite_elt_kind.last) )) then (
   (Aunit__test_suites__test_suite_elt_kind.dynamic_property Aunit__test_suites__test_suite_elt_kind.first Aunit__test_suites__test_suite_elt_kind.last temp___expr_857)) else true)
 
 predicate default_initial_assumption #"aunit-test_suites.ads" 63 0 0# "inline" 
   (temp___858 : int) (temp___859 : bool)  =
  true

end

(* Module giving axioms for type "cursor" defined at ada_containers-aunit_lists.ads:53 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__test_lists__cursor__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor

 predicate dynamic_invariant #"aunit-test_suites.ads" 63 0 0# "inline" 
   (temp___expr_863 : Aunit__test_suites__test_lists__cursor.cursor) (temp___is_init_860 : bool) (temp___do_constant_861 : bool) (temp___do_toplevel_862 : bool)  =
  true
 
 predicate default_initial_assumption #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___864 : Aunit__test_suites__test_lists__cursor.cursor) (temp___865 : bool)  =
  true

end

(* Module giving axioms for type "TlistC" defined at ada_containers-aunit_lists.ads:51 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__test_lists__TlistC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 53 0 0# "inline" 
   (temp___expr_869 : Aunit__test_suites__test_lists__list.list) (temp___is_init_866 : bool) (temp___do_constant_867 : bool) (temp___do_toplevel_868 : bool)  =
  true

end

(* Module giving axioms for type "Ttest_suiteC" defined at aunit-test_suites.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Aunit__test_suites__Ttest_suiteC__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_suite

 predicate dynamic_invariant #"ada_containers-aunit_lists.ads" 51 0 0# "inline" 
   (temp___expr_873 : Aunit__test_suites__test_suite.test_suite) (temp___is_init_870 : bool) (temp___do_constant_871 : bool) (temp___do_toplevel_872 : bool)  =
  true

end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"aunit-test_suites.ads" 82 0 0# "inline" 
   (temp___expr_877 : int) (temp___is_init_874 : bool) (temp___do_constant_875 : bool) (temp___do_toplevel_876 : bool)  =
  (if (( temp___is_init_874 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_877)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___878 : int) (temp___879 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_883 : BV32.t) (temp___is_init_880 : bool) (temp___do_constant_881 : bool) (temp___do_toplevel_882 : bool)  =
  (if (( temp___is_init_880 \/ (BV32.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_883)) else true)
 
 predicate default_initial_assumption #"system.ads" 108 0 0# "inline" 
   (temp___884 : BV32.t) (temp___885 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 108 0 0# "inline" 
   (temp___expr_889 : int) (temp___is_init_886 : bool) (temp___do_constant_887 : bool) (temp___do_toplevel_888 : bool)  =
  (if (( temp___is_init_886 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_889)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___890 : int) (temp___891 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_895 : int) (temp___is_init_892 : bool) (temp___do_constant_893 : bool) (temp___do_toplevel_894 : bool)  =
  (if (( temp___is_init_892 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_895)) else true)
 
 predicate default_initial_assumption #"system.ads" 100 0 0# "inline" 
   (temp___896 : int) (temp___897 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 100 0 0# "inline" 
   (temp___expr_901 : int) (temp___is_init_898 : bool) (temp___do_constant_899 : bool) (temp___do_toplevel_900 : bool)  =
  (if (( temp___is_init_898 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_901)) else true)
 
 predicate default_initial_assumption #"system.ads" 101 0 0# "inline" 
   (temp___902 : int) (temp___903 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 101 0 0# "inline" 
   (temp___expr_907 : int) (temp___is_init_904 : bool) (temp___do_constant_905 : bool) (temp___do_toplevel_906 : bool)  =
  (if (( temp___is_init_904 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_907)) else true)
 
 predicate default_initial_assumption #"system.ads" 102 0 0# "inline" 
   (temp___908 : int) (temp___909 : bool)  =
  true

end

(* Module giving axioms for type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__Tpriorities_mappingB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priorities_mapping__axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 predicate dynamic_invariant #"system.ads" 102 0 0# "inline" 
   (temp___expr_913 : Array__Int__Standard__integer.map) (temp___is_init_910 : bool) (temp___do_constant_911 : bool) (temp___do_toplevel_912 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 161 0 0# "inline" 
   (temp___915 : Array__Int__Standard__integer.map) (temp___916 : bool)  =
  true

end

(* Module giving axioms for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T4s__axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining the value of constant "null_time" defined at aunit-time_measure.ads:43, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Aunit__time_measure__null_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__calendar__time
 use        Ada__calendar__time_of
 use        Aunit__time_measure__time
 use        Aunit__time_measure__null_time

 axiom null_time__def_axiom :
  ((Aunit__time_measure__null_time.null_time ) = { Aunit__time_measure__time.__split_fields = { Aunit__time_measure__time.rec__start = (Ada__calendar__time_of.time_of 1901 1 1 0); Aunit__time_measure__time.rec__stop = (Ada__calendar__time_of.time_of 1901 1 1 0) } })

end

(* Module for defining the value of constant "null_id" defined at aunit-assertions.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Aunit__assertions__null_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Aunit__assertions__null_id

 axiom null_id__def_axiom :
  ((Aunit__assertions__null_id.null_id ) = 0)

end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__list_od__e_id

 axiom e_id__def_axiom :
  ((Types__list_od__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at types.ads:21, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Types__list_od__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Stations__list_tracks__e_id

 axiom e_id__def_axiom :
  ((Stations__list_tracks__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at stations.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Stations__list_tracks__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_trains__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_trains__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:14, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_trains__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "e_id" defined at list.ads:22 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__e_id__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Railsystems__list_stations__e_id

 axiom e_id__def_axiom :
  ((Railsystems__list_stations__e_id.e_id ) = 0)

end

(* Module for defining the value of constant "no_found" defined at list.ads:23 instantiated at railsystems.ads:20, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Railsystems__list_stations__no_found__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 4294967296)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 30)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 31)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 15)

end

(* Module for defining the value of constant "null_address" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV32.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__underlying_priorities__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__underlying_priorities
 use        Array__Int__Standard__integer
 use        System__underlying_priorities__aggregate_def
 use        Array__Int__Standard__integer

 axiom underlying_priorities__def_axiom :
  ((System__underlying_priorities.underlying_priorities ) = (System__underlying_priorities__aggregate_def.system__underlying_priorities__aggregate_def ( -15 ) ( -7 ) ( -6 ) ( -5 ) ( -4 ) ( -3 ) ( -2 ) ( -1 ) 0 1 2 3 4 5 6 15))

end

(* Module for declaring a program function (and possibly an axiom) for "is_active" defined at aunit-test_filters.ads:42, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__is_active__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__test_filter
 use        Aunit__test_filters__is_active

 val is_active #"aunit-test_filters.ads" 42 0 0# 
   (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
  requires { true }
  ensures { (result = (Aunit__test_filters__is_active.is_active filter t)) }
 
 namespace Dispatch
  val is_active #"aunit-test_filters.ads" 42 0 0# 
    (filter : Aunit__test_filters__test_filter.test_filter) (t : Aunit__tests__test.test) : bool
   requires { true }
   ensures { (result = (Aunit__test_filters__is_active.Dispatch.is_active filter t)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "set_name" defined at aunit-test_filters.ads:51, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__set_name__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Aunit__test_filters__name_filter
 use        Aunit__test_filters__name_filter__axiom

 val set_name #"aunit-test_filters.ads" 51 0 0# 
   (filter__split_fields : Aunit__test_filters__name_filter.__split_fields__ref) (filter__attr__tag : int) (name : Standard__string.string) : unit
  requires { true }
  ensures { (Aunit__test_filters__name_filter__axiom.dynamic_invariant { Aunit__test_filters__name_filter.__split_fields = filter__split_fields.Aunit__test_filters__name_filter.__split_fields__content; Aunit__test_filters__name_filter.attr__tag = filter__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, filter__split_fields}
 
 namespace Dispatch
  val set_name #"aunit-test_filters.ads" 51 0 0# 
    (filter__split_fields : Aunit__test_filters__name_filter.__split_fields__ref) (filter__attr__tag : int) (name : Standard__string.string) : unit
   requires { true }
   ensures { (Aunit__test_filters__name_filter__axiom.dynamic_invariant { Aunit__test_filters__name_filter.__split_fields = filter__split_fields.Aunit__test_filters__name_filter.__split_fields__content; Aunit__test_filters__name_filter.attr__tag = filter__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, filter__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "is_active__2" defined at aunit-test_filters.ads:64, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_filters__is_active__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__tests__test
 use        Aunit__test_filters__name_filter
 use        Aunit__test_filters__is_active__2

 val is_active__2 #"aunit-test_filters.ads" 64 0 0# 
   (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) : bool
  requires { true }
  ensures { (result = (Aunit__test_filters__is_active__2.is_active__2 filter t __HEAP.Main.__type_of_heap__content)) }
 
 namespace Dispatch
  val is_active__2 #"aunit-test_filters.ads" 64 0 0# 
    (filter : Aunit__test_filters__name_filter.name_filter) (t : Aunit__tests__test.test) : bool
   requires { true }
   ensures { (result = (Aunit__test_filters__is_active__2.Dispatch.is_active__2 filter t __HEAP.Main.__type_of_heap__content)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "file" defined at g-souinf.ads:49, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__file__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__file

 val file #"g-souinf.ads" 49 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__file.file ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom file__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__file.file __void_param)].
   ( true -> (let result = (Gnat__source_info__file.file __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line" defined at g-souinf.ads:54, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__line__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive__axiom
 use        Gnat__source_info__line

 val line #"g-souinf.ads" 54 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (Gnat__source_info__line.line ())) /\ (Standard__positive__axiom.dynamic_invariant result True False True) ) }
 
 axiom line__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__line.line __void_param)].
   ( true -> (let result = (Gnat__source_info__line.line __void_param) in (
    (Standard__positive__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "source_location" defined at g-souinf.ads:59, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__source_location__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__source_location

 val source_location #"g-souinf.ads" 59 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__source_location.source_location ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom source_location__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__source_location.source_location __void_param)].
   ( true -> (let result = (Gnat__source_info__source_location.source_location __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "enclosing_entity" defined at g-souinf.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__enclosing_entity__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__enclosing_entity

 val enclosing_entity #"g-souinf.ads" 68 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__enclosing_entity.enclosing_entity ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom enclosing_entity__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__enclosing_entity.enclosing_entity __void_param)].
   ( true -> (let result = (Gnat__source_info__enclosing_entity.enclosing_entity __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "compilation_iso_date" defined at g-souinf.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__compilation_iso_date__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__compilation_iso_date

 val compilation_iso_date #"g-souinf.ads" 82 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__compilation_iso_date.compilation_iso_date ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom compilation_iso_date__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__compilation_iso_date.compilation_iso_date __void_param)].
   ( true -> (let result = (Gnat__source_info__compilation_iso_date.compilation_iso_date __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "compilation_date" defined at g-souinf.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__compilation_date__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__compilation_date

 val compilation_date #"g-souinf.ads" 86 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__compilation_date.compilation_date ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom compilation_date__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__compilation_date.compilation_date __void_param)].
   ( true -> (let result = (Gnat__source_info__compilation_date.compilation_date __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "compilation_time" defined at g-souinf.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__source_info__compilation_time__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string__axiom
 use        Gnat__source_info__compilation_time

 val compilation_time #"g-souinf.ads" 91 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (Gnat__source_info__compilation_time.compilation_time ())) /\ (Standard__string__axiom.dynamic_invariant result True False True) ) }
 
 axiom compilation_time__post_axiom :
  (forall __void_param : unit [(Gnat__source_info__compilation_time.compilation_time __void_param)].
   ( true -> (let result = (Gnat__source_info__compilation_time.compilation_time __void_param) in (
    (Standard__string__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clock" defined at a-calend.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__clock__axiom
 use        Ada__calendar__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__clock

 val volatile__effect #"a-calend.ads" 58 0 0#  : Main.__private__ref 
 
 val clock #"a-calend.ads" 58 0 0# 
   (__void_param : unit) : Ada__calendar__time.time
  requires { true }
  ensures { (Ada__calendar__time__axiom.dynamic_invariant result True False True) }
  writes {volatile__effect}
 
 axiom clock__post_axiom :
  (forall ada__calendar__clock_time : Main.__private [(Ada__calendar__clock.clock ada__calendar__clock_time)].
   ( true -> (let result = (Ada__calendar__clock.clock ada__calendar__clock_time) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "year" defined at a-calend.ads:66, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__year__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__year

 val year #"a-calend.ads" 66 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__year.year date)) /\ (Ada__calendar__year_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom year__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__year.year date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__year.year date) in (
    (Ada__calendar__year_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "month" defined at a-calend.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__month__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__month

 val month #"a-calend.ads" 67 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__month.month date)) /\ (Ada__calendar__month_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom month__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__month.month date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__month.month date) in (
    (Ada__calendar__month_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "day" defined at a-calend.ads:68, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__day__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day

 val day #"a-calend.ads" 68 0 0# 
   (date : Ada__calendar__time.time) : int
  requires { true }
  ensures { ( (result = (Ada__calendar__day.day date)) /\ (Ada__calendar__day_number__axiom.dynamic_invariant result True False True) ) }
 
 axiom day__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__day.day date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__day.day date) in (
    (Ada__calendar__day_number__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "seconds" defined at a-calend.ads:69, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__seconds__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom
 use        Ada__calendar__seconds

 val seconds #"a-calend.ads" 69 0 0# 
   (date : Ada__calendar__time.time) : Ada__calendar__day_duration.day_duration
  requires { true }
  ensures { ( (result = (Ada__calendar__seconds.seconds date)) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom seconds__post_axiom :
  (forall date : Ada__calendar__time.time [(Ada__calendar__seconds.seconds date)].
   ( (Ada__calendar__time__axiom.dynamic_invariant date True True True) -> (let result = (Ada__calendar__seconds.seconds date) in (
    (Ada__calendar__day_duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "split" defined at a-calend.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__split__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__year_number__axiom
 use        Ada__calendar__month_number__axiom
 use        Ada__calendar__day_number__axiom
 use        Ada__calendar__day_duration
 use        Ada__calendar__day_duration__axiom

 val split #"a-calend.ads" 71 0 0# 
   (date : Ada__calendar__time.time) (year : int__ref) (month : int__ref) (day : int__ref) (seconds : Ada__calendar__day_duration.day_duration__ref) : unit
  requires { true }
  ensures { ( ( ( (Ada__calendar__year_number__axiom.dynamic_invariant year.int__content True True True) /\ (Ada__calendar__month_number__axiom.dynamic_invariant month.int__content True True True) ) /\ (Ada__calendar__day_number__axiom.dynamic_invariant day.int__content True True True) ) /\ (Ada__calendar__day_duration__axiom.dynamic_invariant seconds.Ada__calendar__day_duration.day_duration__content True True True) ) }
  writes {year, month, day, seconds}

end

(* Module for declaring a program function (and possibly an axiom) for "time_of" defined at a-calend.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__time_of__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__year_number
 use        Ada__calendar__month_number
 use        Ada__calendar__day_number
 use        Ada__calendar__day_duration
 use        Ada__calendar__time_of

 val time_of #"a-calend.ads" 82 0 0# 
   (year : int) (month : int) (day : int) (seconds : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__time_of.time_of year month day seconds)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom time_of__post_axiom :
  (forall year month day : int.
  (forall seconds : Main.__fixed [(Ada__calendar__time_of.time_of year month day seconds)].
   ( ( ( ( (Ada__calendar__year_number.in_range year) /\ (Ada__calendar__month_number.in_range month) ) /\ (Ada__calendar__day_number.in_range day) ) /\ (Ada__calendar__day_duration.in_range seconds) ) -> (let result = (Ada__calendar__time_of.time_of year month day seconds) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at a-calend.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd

 val oadd #"a-calend.ads" 102 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd.oadd left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Oadd.oadd left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Oadd.oadd left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at a-calend.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oadd__2__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Oadd__2

 val oadd__2 #"a-calend.ads" 103 0 0# 
   (left : Main.__fixed) (right : Ada__calendar__time.time) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Oadd__2.oadd__2 left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left : Main.__fixed.
  (forall right : Ada__calendar__time.time [(Ada__calendar__Oadd__2.oadd__2 left right)].
   ( ( (Standard__duration.in_range left) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Oadd__2.oadd__2 left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at a-calend.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract

 val osubtract #"a-calend.ads" 104 0 0# 
   (left : Ada__calendar__time.time) (right : Main.__fixed) : Ada__calendar__time.time
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract.osubtract left right)) /\ (Ada__calendar__time__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left : Ada__calendar__time.time.
  (forall right : Main.__fixed [(Ada__calendar__Osubtract.osubtract left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Standard__duration.in_range right) ) -> (let result = (Ada__calendar__Osubtract.osubtract left right) in (
    (Ada__calendar__time__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at a-calend.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Osubtract__2__axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration__axiom
 use        Ada__calendar__time
 use        Ada__calendar__time__axiom
 use        Ada__calendar__Osubtract__2

 val osubtract__2 #"a-calend.ads" 105 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (Ada__calendar__Osubtract__2.osubtract__2 left right)) /\ (Standard__duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left right : Ada__calendar__time.time [(Ada__calendar__Osubtract__2.osubtract__2 left right)].
   ( ( (Ada__calendar__time__axiom.dynamic_invariant left True True True) /\ (Ada__calendar__time__axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__calendar__Osubtract__2.osubtract__2 left right) in (
    (Standard__duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at a-calend.ads:111, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Olt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Olt

 val olt #"a-calend.ads" 111 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at a-calend.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ole__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ole

 val ole #"a-calend.ads" 112 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at a-calend.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Ogt

 val ogt #"a-calend.ads" 113 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at a-calend.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__calendar__Oge__axiom
 use import "_gnatprove_standard".Main
 use        Ada__calendar__time
 use        Ada__calendar__Oge

 val oge #"a-calend.ads" 114 0 0# 
   (left : Ada__calendar__time.time) (right : Ada__calendar__time.time) : bool
  requires { true }
  ensures { (result = (Ada__calendar__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "start_measure" defined at aunit-time_measure.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__start_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom

 val start_measure #"aunit-time_measure.ads" 46 0 0# 
   (t__split_fields : Aunit__time_measure__time.__split_fields__ref) : unit
  requires { true }
  ensures { (Aunit__time_measure__time__axiom.dynamic_invariant { Aunit__time_measure__time.__split_fields = t__split_fields.Aunit__time_measure__time.__split_fields__content } True True True) }
  writes {t__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "stop_measure" defined at aunit-time_measure.ads:49, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__stop_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom

 val stop_measure #"aunit-time_measure.ads" 49 0 0# 
   (t__split_fields : Aunit__time_measure__time.__split_fields__ref) : unit
  requires { true }
  ensures { (Aunit__time_measure__time__axiom.dynamic_invariant { Aunit__time_measure__time.__split_fields = t__split_fields.Aunit__time_measure__time.__split_fields__content } True True True) }
  writes {t__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "get_measure" defined at aunit-time_measure.ads:52, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__time_measure__get_measure__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom
 use        Aunit__time_measure__aunit_duration
 use        Aunit__time_measure__aunit_duration__axiom
 use        Aunit__time_measure__get_measure

 val get_measure #"aunit-time_measure.ads" 52 0 0# 
   (t : Aunit__time_measure__time.time) : Aunit__time_measure__aunit_duration.aunit_duration
  requires { true }
  ensures { ( (result = (Aunit__time_measure__get_measure.get_measure t)) /\ (Aunit__time_measure__aunit_duration__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_measure__post_axiom :
  (forall t : Aunit__time_measure__time.time [(Aunit__time_measure__get_measure.get_measure t)].
   ( (Aunit__time_measure__time__axiom.dynamic_invariant t True True True) -> (let result = (Aunit__time_measure__get_measure.get_measure t) in (
    (Aunit__time_measure__aunit_duration__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_results__result_lists__list.list) (right : Aunit__test_results__result_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__result_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__length.length container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__length.Dispatch.length container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__result_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_results__result_lists__cursor.cursor) (j : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (source__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = target__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = source__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_results__result_lists__cursor.cursor) (position : Aunit__test_results__result_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = container__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__first.first container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__first.Dispatch.first container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__first.first container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__first.first container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__first.Dispatch.first container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__first.Dispatch.first container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__last.last container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_results__result_lists__list.list) : Aunit__test_results__result_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_results__result_lists__last.Dispatch.last container)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__last.last container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__last.last container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__test_results__result_lists__list.list [(Aunit__test_results__result_lists__last.Dispatch.last container)].
   ( (Aunit__test_results__result_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_results__result_lists__last.Dispatch.last container) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__test_results__result_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__result_lists__next.next position __HEAP)].
   ( (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_results__result_lists__next.next position __HEAP) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom
 use        Aunit__test_results__result_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : Aunit__test_results__result_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_results__result_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__test_results__result_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__result_lists__previous.previous position __HEAP)].
   ( (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_results__result_lists__previous.previous position __HEAP) in (
    (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_results__result_lists__cursor__axiom.dynamic_invariant position.Aunit__test_results__result_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_results.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__result_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__cursor
 use        Aunit__test_results__result_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_results__result_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__result_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_elapsed" defined at aunit-test_results.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__set_elapsed__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val set_elapsed #"aunit-test_results.ads" 99 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (t : Aunit__time_measure__time.time) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  writes {r__split_fields}
 
 namespace Dispatch
  val set_elapsed #"aunit-test_results.ads" 99 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (t : Aunit__time_measure__time.time) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   writes {r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "error_count" defined at aunit-test_results.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__error_count__axiom
 use        Aunit__test_results__e_count
 use        Aunit__test_results__e_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__error_count
 use        Aunit__test_results__e_count

 val error_count #"aunit-test_results.ads" 102 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__error_count.error_count r Aunit__test_results__e_count.e_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val error_count #"aunit-test_results.ads" 102 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__error_count.Dispatch.error_count r Aunit__test_results__e_count.e_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom error_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__e_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__error_count.error_count r aunit__test_results__e_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__error_count.error_count r aunit__test_results__e_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom error_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__e_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__error_count.Dispatch.error_count r aunit__test_results__e_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__error_count.Dispatch.error_count r aunit__test_results__e_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "errors" defined at aunit-test_results.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__errors__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val errors #"aunit-test_results.ads" 105 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (e__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (e__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = e__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = e__attr__tag } True True True) ) }
  writes {r__split_fields, e__split_fields}
 
 namespace Dispatch
  val errors #"aunit-test_results.ads" 105 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (e__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (e__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = e__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = e__attr__tag } True True True) ) }
   writes {r__split_fields, e__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "failure_count" defined at aunit-test_results.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__failure_count__axiom
 use        Aunit__test_results__f_count
 use        Aunit__test_results__f_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__failure_count
 use        Aunit__test_results__f_count

 val failure_count #"aunit-test_results.ads" 109 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__failure_count.failure_count r Aunit__test_results__f_count.f_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val failure_count #"aunit-test_results.ads" 109 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__failure_count.Dispatch.failure_count r Aunit__test_results__f_count.f_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom failure_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__f_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__failure_count.failure_count r aunit__test_results__f_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__failure_count.failure_count r aunit__test_results__f_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom failure_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__f_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__failure_count.Dispatch.failure_count r aunit__test_results__f_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__failure_count.Dispatch.failure_count r aunit__test_results__f_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "failures" defined at aunit-test_results.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__failures__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val failures #"aunit-test_results.ads" 112 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (f__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (f__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = f__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = f__attr__tag } True True True) ) }
  writes {r__split_fields, f__split_fields}
 
 namespace Dispatch
  val failures #"aunit-test_results.ads" 112 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (f__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (f__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = f__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = f__attr__tag } True True True) ) }
   writes {r__split_fields, f__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "elapsed" defined at aunit-test_results.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__elapsed__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__time_measure__time
 use        Aunit__time_measure__time__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__elapsed

 val elapsed #"aunit-test_results.ads" 115 0 0# 
   (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
  requires { true }
  ensures { ( (result = (Aunit__test_results__elapsed.elapsed r)) /\ (Aunit__time_measure__time__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val elapsed #"aunit-test_results.ads" 115 0 0# 
    (r : Aunit__test_results__result.result__) : Aunit__time_measure__time.time
   requires { true }
   ensures { ( (result = (Aunit__test_results__elapsed.Dispatch.elapsed r)) /\ (Aunit__time_measure__time__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom elapsed__post_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__elapsed.elapsed r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__elapsed.elapsed r) in (
    (Aunit__time_measure__time__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom elapsed__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__elapsed.Dispatch.elapsed r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__elapsed.Dispatch.elapsed r) in (
    (Aunit__time_measure__time__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "start_test" defined at aunit-test_results.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__start_test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val start_test #"aunit-test_results.ads" 118 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (subtest_count : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  writes {r__split_fields}
 
 namespace Dispatch
  val start_test #"aunit-test_results.ads" 118 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (subtest_count : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   writes {r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "success_count" defined at aunit-test_results.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__success_count__axiom
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__success_count
 use        Aunit__test_results__s_count

 val success_count #"aunit-test_results.ads" 121 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__success_count.success_count r Aunit__test_results__s_count.s_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val success_count #"aunit-test_results.ads" 121 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__success_count.Dispatch.success_count r Aunit__test_results__s_count.s_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom success_count__post_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__s_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__success_count.success_count r aunit__test_results__s_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__success_count.success_count r aunit__test_results__s_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom success_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__.
  (forall aunit__test_results__s_count : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_results__success_count.Dispatch.success_count r aunit__test_results__s_count __HEAP)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__success_count.Dispatch.success_count r aunit__test_results__s_count __HEAP) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "successes" defined at aunit-test_results.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__successes__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result_lists__list
 use        Aunit__test_results__result_lists__list__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val successes #"aunit-test_results.ads" 124 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (s__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (s__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = s__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = s__attr__tag } True True True) ) }
  writes {r__split_fields, s__split_fields}
 
 namespace Dispatch
  val successes #"aunit-test_results.ads" 124 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) (s__split_fields : Aunit__test_results__result_lists__list.__split_fields__ref) (s__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) /\ (Aunit__test_results__result_lists__list__axiom.dynamic_invariant { Aunit__test_results__result_lists__list.__split_fields = s__split_fields.Aunit__test_results__result_lists__list.__split_fields__content; Aunit__test_results__result_lists__list.attr__tag = s__attr__tag } True True True) ) }
   writes {r__split_fields, s__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "successful" defined at aunit-test_results.ads:127, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__successful__axiom
 use        Aunit__test_results__s_count
 use        Aunit__test_results__s_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__successful
 use        Aunit__test_results__s_count

 val successful #"aunit-test_results.ads" 127 0 0# 
   (r : Aunit__test_results__result.result__) : bool
  requires { true }
  ensures { (result = (Aunit__test_results__successful.successful r Aunit__test_results__s_count.s_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) }
 
 namespace Dispatch
  val successful #"aunit-test_results.ads" 127 0 0# 
    (r : Aunit__test_results__result.result__) : bool
   requires { true }
   ensures { (result = (Aunit__test_results__successful.Dispatch.successful r Aunit__test_results__s_count.s_count.Main.__private__content __HEAP.Main.__type_of_heap__content)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "test_count" defined at aunit-test_results.ads:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__test_count__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom
 use        Aunit__test_results__test_count

 val test_count #"aunit-test_results.ads" 130 0 0# 
   (r : Aunit__test_results__result.result__) : int
  requires { true }
  ensures { ( (result = (Aunit__test_results__test_count.test_count r)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val test_count #"aunit-test_results.ads" 130 0 0# 
    (r : Aunit__test_results__result.result__) : int
   requires { true }
   ensures { ( (result = (Aunit__test_results__test_count.Dispatch.test_count r)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom test_count__post_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__test_count.test_count r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__test_count.test_count r) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom test_count__post__dispatch_axiom :
  (forall r : Aunit__test_results__result.result__ [(Aunit__test_results__test_count.Dispatch.test_count r)].
   ( (Aunit__test_results__result__axiom.dynamic_invariant r True True True) -> (let result = (Aunit__test_results__test_count.Dispatch.test_count r) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at aunit-test_results.ads:133, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_results__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_results__result
 use        Aunit__test_results__result__axiom

 val clear #"aunit-test_results.ads" 133 0 0# 
   (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, r__split_fields}
 
 namespace Dispatch
  val clear #"aunit-test_results.ads" 133 0 0# 
    (r__split_fields : Aunit__test_results__result.__split_fields__ref) (r__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_results__result__axiom.dynamic_invariant { Aunit__test_results__result.__split_fields = r__split_fields.Aunit__test_results__result.__split_fields__content; Aunit__test_results__result.attr__tag = r__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, r__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "assert" defined at aunit-assertions.ads:48, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__assert__axiom
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Aunit__assertions__failures
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test

 val assert__ #"aunit-assertions.ads" 48 0 0# 
   (condition : bool) (message : Standard__string.string) (source : Standard__string.string) (line : int) : unit
  requires { true }
  ensures { true }
  reads {Aunit__assertions__failures.failures, Aunit__assertions__the_current_test.the_current_test, __HEAP}
  writes {Aunit__assertions__failures.failures}

end

(* Module for declaring a program function (and possibly an axiom) for "assert__2" defined at aunit-assertions.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__assert__2__axiom
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__string
 use        Aunit__assertions__assert__2
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test

 val assert__2 #"aunit-assertions.ads" 57 0 0# 
   (condition : bool) (message : Standard__string.string) (source : Standard__string.string) (line : int) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__assert__2.assert__2 condition message source line Aunit__assertions__failures.failures.Main.__private__content Aunit__assertions__the_current_test.the_current_test.Main.__private__content __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "assert__3" defined at aunit-assertions.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__assert__3__axiom
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Aunit__assertions__failures
 use        Aunit__assertions__failures
 use        Aunit__assertions__the_current_test

 val assert__3 #"aunit-assertions.ads" 72 0 0# 
   (actual : Standard__string.string) (expected : Standard__string.string) (message : Standard__string.string) (source : Standard__string.string) (line : int) : unit
  requires { true }
  ensures { true }
  reads {Aunit__assertions__failures.failures, Aunit__assertions__the_current_test.the_current_test, __HEAP}
  writes {Aunit__assertions__failures.failures}

end

(* Module for declaring a program function (and possibly an axiom) for "init_test" defined at aunit-assertions.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__init_test__axiom
 use        Aunit__assertions__current_id
 use        Aunit__assertions__current_id
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__test__axiom
 use        Aunit__assertions__current_id
 use        Aunit__assertions__current_id

 val init_test #"aunit-assertions.ads" 101 0 0# 
   (t__split_fields : Aunit__assertions__test.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__assertions__test__axiom.dynamic_invariant { Aunit__assertions__test.__split_fields = t__split_fields.Aunit__assertions__test.__split_fields__content; Aunit__assertions__test.attr__tag = t__attr__tag } True True True) }
  reads {Aunit__assertions__current_id.current_id}
  writes {Aunit__assertions__current_id.current_id, t__split_fields}
 
 namespace Dispatch
  val init_test #"aunit-assertions.ads" 101 0 0# 
    (t__split_fields : Aunit__assertions__test.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__assertions__test__axiom.dynamic_invariant { Aunit__assertions__test.__split_fields = t__split_fields.Aunit__assertions__test.__split_fields__content; Aunit__assertions__test.attr__tag = t__attr__tag } True True True) }
   reads {Aunit__assertions__current_id.current_id}
   writes {Aunit__assertions__current_id.current_id, t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear_failures" defined at aunit-assertions.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__clear_failures__axiom
 use        Aunit__assertions__failures
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__failures
 use        Aunit__assertions__failures

 val clear_failures #"aunit-assertions.ads" 104 0 0# 
   (t : Aunit__assertions__test.test) : unit
  requires { true }
  ensures { true }
  reads {Aunit__assertions__failures.failures, __HEAP}
  writes {Aunit__assertions__failures.failures, __HEAP}
 
 namespace Dispatch
  val clear_failures #"aunit-assertions.ads" 104 0 0# 
    (t : Aunit__assertions__test.test) : unit
   requires { true }
   ensures { true }
   reads {Aunit__assertions__failures.failures, __HEAP}
   writes {Aunit__assertions__failures.failures, __HEAP}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "has_failures" defined at aunit-assertions.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__has_failures__axiom
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__has_failures
 use        Aunit__assertions__failures

 val has_failures #"aunit-assertions.ads" 107 0 0# 
   (t : Aunit__assertions__test.test) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__has_failures.has_failures t Aunit__assertions__failures.failures.Main.__private__content __HEAP.Main.__type_of_heap__content)) }
 
 namespace Dispatch
  val has_failures #"aunit-assertions.ads" 107 0 0# 
    (t : Aunit__assertions__test.test) : bool
   requires { true }
   ensures { (result = (Aunit__assertions__has_failures.Dispatch.has_failures t Aunit__assertions__failures.failures.Main.__private__content __HEAP.Main.__type_of_heap__content)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first_failure" defined at aunit-assertions.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__first_failure__axiom
 use        Aunit__assertions__failures
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__test__axiom
 use        Aunit__assertions__failure_iter
 use        Aunit__assertions__failure_iter__axiom
 use        Aunit__assertions__first_failure
 use        Aunit__assertions__failures

 val first_failure #"aunit-assertions.ads" 113 0 0# 
   (t : Aunit__assertions__test.test) : Aunit__assertions__failure_iter.failure_iter
  requires { true }
  ensures { ( (result = (Aunit__assertions__first_failure.first_failure t Aunit__assertions__failures.failures.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Aunit__assertions__failure_iter__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first_failure #"aunit-assertions.ads" 113 0 0# 
    (t : Aunit__assertions__test.test) : Aunit__assertions__failure_iter.failure_iter
   requires { true }
   ensures { ( (result = (Aunit__assertions__first_failure.Dispatch.first_failure t Aunit__assertions__failures.failures.Main.__private__content __HEAP.Main.__type_of_heap__content)) /\ (Aunit__assertions__failure_iter__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first_failure__post_axiom :
  (forall t : Aunit__assertions__test.test.
  (forall aunit__assertions__failures : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__assertions__first_failure.first_failure t aunit__assertions__failures __HEAP)].
   ( (Aunit__assertions__test__axiom.dynamic_invariant t True True True) -> (let result = (Aunit__assertions__first_failure.first_failure t aunit__assertions__failures __HEAP) in (
    (Aunit__assertions__failure_iter__axiom.dynamic_invariant result True False True)))
    ))))
 
 axiom first_failure__post__dispatch_axiom :
  (forall t : Aunit__assertions__test.test.
  (forall aunit__assertions__failures : Main.__private.
  (forall __HEAP : Main.__type_of_heap [(Aunit__assertions__first_failure.Dispatch.first_failure t aunit__assertions__failures __HEAP)].
   ( (Aunit__assertions__test__axiom.dynamic_invariant t True True True) -> (let result = (Aunit__assertions__first_failure.Dispatch.first_failure t aunit__assertions__failures __HEAP) in (
    (Aunit__assertions__failure_iter__axiom.dynamic_invariant result True False True)))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "has_failure" defined at aunit-assertions.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__has_failure__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter
 use        Aunit__assertions__has_failure

 val has_failure #"aunit-assertions.ads" 114 0 0# 
   (i : Aunit__assertions__failure_iter.failure_iter) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__has_failure.has_failure i __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at aunit-assertions.ads:117, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__next__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_iter
 use        Aunit__assertions__failure_iter__axiom

 val next #"aunit-assertions.ads" 117 0 0# 
   (i__split_fields : Aunit__assertions__failure_iter.__split_fields__ref) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_iter__axiom.dynamic_invariant { Aunit__assertions__failure_iter.__split_fields = i__split_fields.Aunit__assertions__failure_iter.__split_fields__content } True True True) }
  reads {__HEAP}
  writes {i__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "copy_id" defined at aunit-assertions.ads:125, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__copy_id__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__test
 use        Aunit__assertions__test__axiom

 val copy_id #"aunit-assertions.ads" 125 0 0# 
   (from : Aunit__assertions__test.test) (to____split_fields : Aunit__assertions__test.__split_fields__ref) (to____attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__assertions__test__axiom.dynamic_invariant { Aunit__assertions__test.__split_fields = to____split_fields.Aunit__assertions__test.__split_fields__content; Aunit__assertions__test.attr__tag = to____attr__tag } True True True) }
  writes {to____split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__assertions__failure_lists__list.list) (right : Aunit__assertions__failure_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__failure_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__assertions__failure_lists__list.list) (right : Aunit__assertions__failure_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__assertions__failure_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom
 use        Aunit__assertions__failure_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__assertions__failure_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__assertions__failure_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__length.length container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__length.Dispatch.length container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__failure_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__assertions__failure_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__assertions__failure_lists__cursor.cursor) (j : Aunit__assertions__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__assertions__failure_lists__cursor.cursor) (j : Aunit__assertions__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__assertions__failure_lists__cursor.cursor) (j : Aunit__assertions__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__assertions__failure_lists__cursor.cursor) (j : Aunit__assertions__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (source__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__assertions__failure_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = target__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = source__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (position : Aunit__assertions__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__assertions__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__assertions__failure_lists__cursor.cursor) (position : Aunit__assertions__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant { Aunit__assertions__failure_lists__list.__split_fields = container__split_fields.Aunit__assertions__failure_lists__list.__split_fields__content; Aunit__assertions__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom
 use        Aunit__assertions__failure_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__assertions__failure_lists__first.first container)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__assertions__failure_lists__first.Dispatch.first container)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__first.first container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__first.first container) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__first.Dispatch.first container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__first.Dispatch.first container) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__list
 use        Aunit__assertions__failure_lists__list__axiom
 use        Aunit__assertions__failure_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__assertions__failure_lists__last.last container)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__assertions__failure_lists__list.list) : Aunit__assertions__failure_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__assertions__failure_lists__last.Dispatch.last container)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__last.last container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__last.last container) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__assertions__failure_lists__list.list [(Aunit__assertions__failure_lists__last.Dispatch.last container)].
   ( (Aunit__assertions__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__assertions__failure_lists__last.Dispatch.last container) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) : Aunit__assertions__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__assertions__failure_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__assertions__failure_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__assertions__failure_lists__next.next position __HEAP)].
   ( (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__assertions__failure_lists__next.next position __HEAP) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom
 use        Aunit__assertions__failure_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) : Aunit__assertions__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__assertions__failure_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__assertions__failure_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__assertions__failure_lists__previous.previous position __HEAP)].
   ( (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__assertions__failure_lists__previous.previous position __HEAP) in (
    (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__assertions__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__assertions__failure_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-assertions.ads:145, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__assertions__failure_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__assertions__failure_lists__cursor
 use        Aunit__assertions__failure_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__assertions__failure_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__assertions__failure_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "run_test" defined at aunit-simple_test_cases.ads:53, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__simple_test_cases__run_test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case
 use        Aunit__simple_test_cases__test_case__axiom

 val run_test #"aunit-simple_test_cases.ads" 53 0 0# 
   (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val run_test #"aunit-simple_test_cases.ads" 53 0 0# 
    (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "set_up" defined at aunit-simple_test_cases.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__simple_test_cases__set_up__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case
 use        Aunit__simple_test_cases__test_case__axiom

 val set_up #"aunit-simple_test_cases.ads" 57 0 0# 
   (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val set_up #"aunit-simple_test_cases.ads" 57 0 0# 
    (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "tear_down" defined at aunit-simple_test_cases.ads:60, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__simple_test_cases__tear_down__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__simple_test_cases__test_case
 use        Aunit__simple_test_cases__test_case__axiom

 val tear_down #"aunit-simple_test_cases.ads" 60 0 0# 
   (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val tear_down #"aunit-simple_test_cases.ads" 60 0 0# 
    (test__split_fields : Aunit__simple_test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__simple_test_cases__test_case__axiom.dynamic_invariant { Aunit__simple_test_cases__test_case.__split_fields = test__split_fields.Aunit__simple_test_cases__test_case.__split_fields__content; Aunit__simple_test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "register_tests" defined at aunit-test_cases.ads:54, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__register_tests__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case
 use        Aunit__test_cases__test_case__axiom

 val register_tests #"aunit-test_cases.ads" 54 0 0# 
   (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val register_tests #"aunit-test_cases.ads" 54 0 0# 
    (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "set_up_case" defined at aunit-test_cases.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__set_up_case__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case
 use        Aunit__test_cases__test_case__axiom

 val set_up_case #"aunit-test_cases.ads" 57 0 0# 
   (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val set_up_case #"aunit-test_cases.ads" 57 0 0# 
    (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "tear_down_case" defined at aunit-test_cases.ads:60, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__tear_down_case__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case
 use        Aunit__test_cases__test_case__axiom

 val tear_down_case #"aunit-test_cases.ads" 60 0 0# 
   (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val tear_down_case #"aunit-test_cases.ads" 60 0 0# 
    (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "routine_count" defined at aunit-test_cases.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__registration__routine_count__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_cases__test_case
 use        Aunit__test_cases__test_case__axiom
 use        Aunit__test_cases__registration__routine_count

 val routine_count #"aunit-test_cases.ads" 71 0 0# 
   (test : Aunit__test_cases__test_case.test_case) : int
  requires { true }
  ensures { ( (result = (Aunit__test_cases__registration__routine_count.routine_count test)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom routine_count__post_axiom :
  (forall test : Aunit__test_cases__test_case.test_case [(Aunit__test_cases__registration__routine_count.routine_count test)].
   ( (Aunit__test_cases__test_case__axiom.dynamic_invariant test True True True) -> (let result = (Aunit__test_cases__registration__routine_count.routine_count test) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "run_test" defined at aunit-test_cases.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__run_test__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__test_case
 use        Aunit__test_cases__test_case__axiom

 val run_test #"aunit-test_cases.ads" 98 0 0# 
   (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
  writes {test__split_fields}
 
 namespace Dispatch
  val run_test #"aunit-test_cases.ads" 98 0 0# 
    (test__split_fields : Aunit__test_cases__test_case.__split_fields__ref) (test__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__test_case__axiom.dynamic_invariant { Aunit__test_cases__test_case.__split_fields = test__split_fields.Aunit__test_cases__test_case.__split_fields__content; Aunit__test_cases__test_case.attr__tag = test__attr__tag } True True True) }
   writes {test__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_cases__routine_lists__list.list) (right : Aunit__test_cases__routine_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__routine_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_cases__routine_lists__list.list) (right : Aunit__test_cases__routine_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_cases__routine_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__test_cases__routine_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__test_cases__routine_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__length.length container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__length.Dispatch.length container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__routine_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_cases__routine_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__routine_lists__cursor.cursor) (j : Aunit__test_cases__routine_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__routine_lists__cursor.cursor) (j : Aunit__test_cases__routine_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__routine_lists__cursor.cursor) (j : Aunit__test_cases__routine_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__routine_lists__cursor.cursor) (j : Aunit__test_cases__routine_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = target__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = source__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (position : Aunit__test_cases__routine_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__test_cases__routine_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__routine_lists__cursor.cursor) (position : Aunit__test_cases__routine_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant { Aunit__test_cases__routine_lists__list.__split_fields = container__split_fields.Aunit__test_cases__routine_lists__list.__split_fields__content; Aunit__test_cases__routine_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom
 use        Aunit__test_cases__routine_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__routine_lists__first.first container)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_cases__routine_lists__first.Dispatch.first container)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__first.first container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__first.first container) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__first.Dispatch.first container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__first.Dispatch.first container) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__list
 use        Aunit__test_cases__routine_lists__list__axiom
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom
 use        Aunit__test_cases__routine_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__routine_lists__last.last container)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_cases__routine_lists__list.list) : Aunit__test_cases__routine_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_cases__routine_lists__last.Dispatch.last container)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__last.last container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__last.last container) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__test_cases__routine_lists__list.list [(Aunit__test_cases__routine_lists__last.Dispatch.last container)].
   ( (Aunit__test_cases__routine_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__routine_lists__last.Dispatch.last container) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom
 use        Aunit__test_cases__routine_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) : Aunit__test_cases__routine_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__routine_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__test_cases__routine_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_cases__routine_lists__next.next position __HEAP)].
   ( (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_cases__routine_lists__next.next position __HEAP) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom
 use        Aunit__test_cases__routine_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) : Aunit__test_cases__routine_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__routine_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__test_cases__routine_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_cases__routine_lists__previous.previous position __HEAP)].
   ( (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_cases__routine_lists__previous.previous position __HEAP) in (
    (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_cases__routine_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__routine_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__routine_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__routine_lists__cursor
 use        Aunit__test_cases__routine_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_cases__routine_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__routine_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_cases__failure_lists__list.list) (right : Aunit__test_cases__failure_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__failure_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_cases__failure_lists__list.list) (right : Aunit__test_cases__failure_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_cases__failure_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__test_cases__failure_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__test_cases__failure_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__length.length container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__length.Dispatch.length container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__failure_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_cases__failure_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__failure_lists__cursor.cursor) (j : Aunit__test_cases__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__failure_lists__cursor.cursor) (j : Aunit__test_cases__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__failure_lists__cursor.cursor) (j : Aunit__test_cases__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_cases__failure_lists__cursor.cursor) (j : Aunit__test_cases__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (source__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = target__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = source__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (position : Aunit__test_cases__failure_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__test_cases__failure_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_cases__failure_lists__cursor.cursor) (position : Aunit__test_cases__failure_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant { Aunit__test_cases__failure_lists__list.__split_fields = container__split_fields.Aunit__test_cases__failure_lists__list.__split_fields__content; Aunit__test_cases__failure_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom
 use        Aunit__test_cases__failure_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__failure_lists__first.first container)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_cases__failure_lists__first.Dispatch.first container)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__first.first container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__first.first container) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__first.Dispatch.first container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__first.Dispatch.first container) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__list
 use        Aunit__test_cases__failure_lists__list__axiom
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom
 use        Aunit__test_cases__failure_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__failure_lists__last.last container)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_cases__failure_lists__list.list) : Aunit__test_cases__failure_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_cases__failure_lists__last.Dispatch.last container)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__last.last container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__last.last container) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__test_cases__failure_lists__list.list [(Aunit__test_cases__failure_lists__last.Dispatch.last container)].
   ( (Aunit__test_cases__failure_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_cases__failure_lists__last.Dispatch.last container) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom
 use        Aunit__test_cases__failure_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) : Aunit__test_cases__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__failure_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__test_cases__failure_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_cases__failure_lists__next.next position __HEAP)].
   ( (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_cases__failure_lists__next.next position __HEAP) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom
 use        Aunit__test_cases__failure_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) : Aunit__test_cases__failure_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_cases__failure_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__test_cases__failure_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_cases__failure_lists__previous.previous position __HEAP)].
   ( (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_cases__failure_lists__previous.previous position __HEAP) in (
    (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_cases__failure_lists__cursor__axiom.dynamic_invariant position.Aunit__test_cases__failure_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_cases.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_cases__failure_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_cases__failure_lists__cursor
 use        Aunit__test_cases__failure_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_cases__failure_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__test_cases__failure_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__contains__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__contains

 val contains #"list.ads" 46 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (d : Types__list_od__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Types__list_od__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_first.get_first a)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_first.get_first a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_first.get_first a) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_last.get_last a)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_last.get_last a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_last.get_last a) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Types__list_od__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr [(Types__list_od__get_size.get_size a)].
   ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Types__list_od__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (location : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element.get_element a location)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall location : int [(Types__list_od__get_element.get_element a location)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Types__list_od__get_element.get_element a location) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Types__list_od__data_type
 use        Types__list_od__data_type__axiom
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom
 use        Types__list_od__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) (id : int) : Types__list_od__data_type.data_type
  requires { true }
  ensures { ( (result = (Types__list_od__get_element_by_id.get_element_by_id a id)) /\ (Types__list_od__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Types__list_od__list_ptr.list_ptr.
  (forall id : int [(Types__list_od__get_element_by_id.get_element_by_id a id)].
   ( ( (Types__list_od__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Types__list_od__get_element_by_id.get_element_by_id a id) in (
    (Types__list_od__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__full__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__full

 val full #"list.ads" 62 0 0# 
   (a : Types__list_od__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Types__list_od__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__append__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (d : Types__list_od__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__replace__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (location : int) (newvalue : Types__list_od__data.data) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__data_type
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) (id : int) (newvalue : Types__list_od__data_type.data_type) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at types.ads:21, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Types__list_od__init__axiom
 use import "_gnatprove_standard".Main
 use        Types__list_od__list_ptr
 use        Types__list_od__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Types__list_od__list_ptr.__split_fields__ref) (a__split_discrs : Types__list_od__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Types__list_od__list_ptr__axiom.dynamic_invariant { Types__list_od__list_ptr.__split_fields = a__split_fields.Types__list_od__list_ptr.__split_fields__content; Types__list_od__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__contains__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__contains

 val contains #"list.ads" 46 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (d : Stations__list_tracks__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_first.get_first a)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_first.get_first a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_first.get_first a) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_last.get_last a)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_last.get_last a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_last.get_last a) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr [(Stations__list_tracks__get_size.get_size a)].
   ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Stations__list_tracks__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (location : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element.get_element a location)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall location : int [(Stations__list_tracks__get_element.get_element a location)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Stations__list_tracks__get_element.get_element a location) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__data_type__axiom
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom
 use        Stations__list_tracks__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) (id : int) : Stations__list_tracks__data_type.data_type
  requires { true }
  ensures { ( (result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id)) /\ (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Stations__list_tracks__list_ptr.list_ptr.
  (forall id : int [(Stations__list_tracks__get_element_by_id.get_element_by_id a id)].
   ( ( (Stations__list_tracks__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Stations__list_tracks__get_element_by_id.get_element_by_id a id) in (
    (Stations__list_tracks__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__full__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__full

 val full #"list.ads" 62 0 0# 
   (a : Stations__list_tracks__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Stations__list_tracks__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__append__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (d : Stations__list_tracks__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__replace__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (location : int) (newvalue : Stations__list_tracks__data.data) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) (id : int) (newvalue : Stations__list_tracks__data_type.data_type) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at stations.ads:10, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stations__list_tracks__init__axiom
 use import "_gnatprove_standard".Main
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Stations__list_tracks__list_ptr.__split_fields__ref) (a__split_discrs : Stations__list_tracks__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Stations__list_tracks__list_ptr__axiom.dynamic_invariant { Stations__list_tracks__list_ptr.__split_fields = a__split_fields.Stations__list_tracks__list_ptr.__split_fields__content; Stations__list_tracks__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "print" defined at sprint.ads:3, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print #"sprint.ads" 3 0 0# 
   (s : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_natural" defined at sprint.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_natural__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_natural #"sprint.ads" 4 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_train_state" defined at sprint.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_train_state__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_train_state #"sprint.ads" 5 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "print_station_locations" defined at sprint.ads:6, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Sprint__print_station_locations__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val print_station_locations #"sprint.ads" 6 0 0# 
   (s : Standard__string.string) (n : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__contains

 val contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (d : Railsystems__list_trains__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_first.get_first a)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_first.get_first a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_first.get_first a) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_last.get_last a)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_last.get_last a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_last.get_last a) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr [(Railsystems__list_trains__get_size.get_size a)].
   ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_trains__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (location : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element.get_element a location)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_trains__get_element.get_element a location)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_trains__get_element.get_element a location) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__data_type__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom
 use        Railsystems__list_trains__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) (id : int) : Railsystems__list_trains__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_trains__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_trains__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_trains__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_trains__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__full

 val full #"list.ads" 62 0 0# 
   (a : Railsystems__list_trains__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_trains__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__append__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (d : Railsystems__list_trains__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__replace__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (location : int) (newvalue : Railsystems__list_trains__data.data) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) (id : int) (newvalue : Railsystems__list_trains__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at railsystems.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_trains__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Railsystems__list_trains__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_trains__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_trains__list_ptr__axiom.dynamic_invariant { Railsystems__list_trains__list_ptr.__split_fields = a__split_fields.Railsystems__list_trains__list_ptr.__split_fields__content; Railsystems__list_trains__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "contains" defined at list.ads:46 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__contains__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__contains

 val contains #"list.ads" 46 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (d : Railsystems__list_stations__data_type.data_type) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__contains.contains a d)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_first" defined at list.ads:48 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_first__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_first

 val get_first #"list.ads" 48 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_first.get_first a)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_first__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_first.get_first a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_first.get_first a) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_last" defined at list.ads:51 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_last__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_last

 val get_last #"list.ads" 51 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_last.get_last a)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_last__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_last.get_last a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_last.get_last a) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_size" defined at list.ads:54 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_size

 val get_size #"list.ads" 54 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : int
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_size.get_size a)) /\ (Standard__natural__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_size__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr [(Railsystems__list_stations__get_size.get_size a)].
   ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) -> (let result = (Railsystems__list_stations__get_size.get_size a) in (
    (Standard__natural__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element" defined at list.ads:57 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element

 val get_element #"list.ads" 57 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (location : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element.get_element a location)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall location : int [(Railsystems__list_stations__get_element.get_element a location)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range location) ) -> (let result = (Railsystems__list_stations__get_element.get_element a location) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_element_by_id" defined at list.ads:60 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__get_element_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__data_type__axiom
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom
 use        Railsystems__list_stations__get_element_by_id

 val get_element_by_id #"list.ads" 60 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) (id : int) : Railsystems__list_stations__data_type.data_type
  requires { true }
  ensures { ( (result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id)) /\ (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True) ) }
 
 axiom get_element_by_id__post_axiom :
  (forall a : Railsystems__list_stations__list_ptr.list_ptr.
  (forall id : int [(Railsystems__list_stations__get_element_by_id.get_element_by_id a id)].
   ( ( (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant a True True True) /\ (Standard__natural.in_range id) ) -> (let result = (Railsystems__list_stations__get_element_by_id.get_element_by_id a id) in (
    (Railsystems__list_stations__data_type__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "full" defined at list.ads:62 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__full__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__full

 val full #"list.ads" 62 0 0# 
   (a : Railsystems__list_stations__list_ptr.list_ptr) : bool
  requires { true }
  ensures { (result = (Railsystems__list_stations__full.full a)) }

end

(* Module for declaring a program function (and possibly an axiom) for "append" defined at list.ads:64 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__append__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val append #"list.ads" 64 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (d : Railsystems__list_stations__data_type.data_type) (id : int) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "delete_all" defined at list.ads:70 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__delete_all__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val delete_all #"list.ads" 70 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace" defined at list.ads:78 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__replace__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val replace #"list.ads" 78 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (location : int) (newvalue : Railsystems__list_stations__data.data) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replace_by_id" defined at list.ads:82 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__replace_by_id__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val replace_by_id #"list.ads" 82 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) (id : int) (newvalue : Railsystems__list_stations__data_type.data_type) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at list.ads:86 instantiated at railsystems.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__list_stations__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__list_ptr__axiom

 val init #"list.ads" 86 0 0# 
   (a__split_fields : Railsystems__list_stations__list_ptr.__split_fields__ref) (a__split_discrs : Railsystems__list_stations__list_ptr.__split_discrs) : unit
  requires { true }
  ensures { (Railsystems__list_stations__list_ptr__axiom.dynamic_invariant { Railsystems__list_stations__list_ptr.__split_fields = a__split_fields.Railsystems__list_stations__list_ptr.__split_fields__content; Railsystems__list_stations__list_ptr.__split_discrs = a__split_discrs } True True True) }
  writes {a__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at railsystems.ads:35, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__init__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val init #"railsystems.ads" 35 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrain" defined at railsystems.ads:36, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_trains__data_type
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__list_trains__get_element
 use        Railsystems__list_trains__get_element_by_id
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrain #"railsystems.ads" 36 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) : unit
  requires { ( ( ( (id > 0) /\ (id < 101) ) /\ (if (( (id > 0) /\ (id < 101) )) then (
   ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element_by_id.get_element_by_id (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) id)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Railsystems__list_trains__data_type.rec__id (Railsystems__list_trains__data_type.__split_fields (Railsystems__list_trains__get_element.get_element (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addtrack" defined at railsystems.ads:46, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addtrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_element
 use        Stations__list_tracks__get_element_by_id
 use        Railsystems__railsystem__T13s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addtrack #"railsystems.ads" 46 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (id : int) (origin : int) (destination : int) (lineorigin : int) (linedestination : int) : unit
  requires { ( ( ( ( ( ( ( ( ( (id >= 1) /\ (id <= 100) ) /\ (origin <> 0) ) /\ (destination <> 0) ) /\ (lineorigin <> 0) ) /\ (linedestination <> 0) ) /\ (origin <> destination) ) /\ (lineorigin <> linedestination) ) /\ (if ((id <> 0)) then (
   ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element_by_id.get_element_by_id (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) id)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Stations__list_tracks__data_type.rec__id (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Railsystems__railsystem__T13s.to_base (Railsystems__railsystem.rec__all_tracks (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> id) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addstation" defined at railsystems.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addstation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_size
 use        Railsystems__list_stations__get_element
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addstation #"railsystems.ads" 67 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (stationid : int) (location : int) : unit
  requires { ( ( ( (stationid >= 1) /\ (stationid <= 100) ) /\ (if ((stationid <> 0)) then (
   ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) stationid)))) = 0)) else (
   true)) ) /\ (exists index  : int.
   ( ( (1 <= index) /\ (index <= (Railsystems__list_stations__get_size.get_size (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))))) ) /\ ((Standard__natural.to_rep (Railsystems__list_stations__data_type.rec__id (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element.get_element (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) index)))) <> stationid) )) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacestation" defined at railsystems.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacestation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Stations__station
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacestation #"railsystems.ads" 79 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (stationid : int) (station : Stations__station.station) : unit
  requires { ( ( (stationid > 0) /\ ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields station))) <> 0) ) /\ (stationid < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrain" defined at railsystems.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrain #"railsystems.ads" 85 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (trainid : int) (train : Trains__train.train) : unit
  requires { ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) > 0) /\ ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) <> 0) ) /\ ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields train))) < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "replacetrack" defined at railsystems.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__replacetrack__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Tracks__track
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val replacetrack #"railsystems.ads" 91 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (trackid : int) (track : Tracks__track.track) : unit
  requires { ( ( (trackid > 0) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields track))) <> 0) ) /\ (trackid < 101) ) }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "addincomingoutgoingtracksforeachstation" defined at railsystems.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__addincomingoutgoingtracksforeachstation__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom

 val addincomingoutgoingtracksforeachstation #"railsystems.ads" 97 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) : unit
  requires { true }
  ensures { (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) }
  writes {r_system__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "settrainlocation" defined at railsystems.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__settrainlocation__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__natural
 use        Array__Int__Standard__character
 use        Tracks__track
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Temp___828

 val settrainlocation #"railsystems.ads" 98 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (train__split_fields : Trains__train.__split_fields__ref) (locationname : Standard__string.string) (locationid : int) : unit
  requires { ( ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) /\ ((Array__Int__Standard__character.bool_eq (Standard__string.to_array locationname) (Standard__string.first locationname) (Standard__string.last locationname) Temp___828.temp___828 1 4) = True) ) /\ (locationid >= 1) ) /\ (locationid <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) }
  ensures { ( ( ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) /\ ((Standard__natural.to_rep (Tracks__track.rec__id (Tracks__track.__split_fields (Trains__train_location.rec__track (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) }
  writes {train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "gettrackbyname" defined at railsystems.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrackbyname__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Tracks__track
 use        Tracks__track__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname

 val gettrackbyname #"railsystems.ads" 152 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (origin : int) (destination : int) : Tracks__track.track
  requires { ( (origin <> 0) /\ (destination <> 0) ) }
  ensures { ( (result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination)) /\ (Tracks__track__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrackbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall origin destination : int [(Railsystems__gettrackbyname.gettrackbyname r_system origin destination)].
   ( ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range origin) ) /\ (Types__station_locations.in_range destination) ) /\ ( (origin <> 0) /\ (destination <> 0) ) ) -> (let result = (Railsystems__gettrackbyname.gettrackbyname r_system origin destination) in (
    (Tracks__track__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "go" defined at railsystems.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__go__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__character
 use        Types__train_state
 use        Types__station_locations
 use        Tracks__track
 use        Stations__list_tracks__data_type
 use        Stations__list_tracks__list_ptr
 use        Stations__list_tracks__get_size
 use        Stations__list_tracks__get_element
 use        Stations__station__T9s
 use        Stations__station
 use        Trains__train_location__T3s
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_stations__data_type
 use        Railsystems__list_stations__list_ptr
 use        Railsystems__list_stations__get_element_by_id
 use        Railsystems__railsystem__T11s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrackbyname
 use        Array__Int__Standard__character
 use        Temp___829

 val go #"railsystems.ads" 106 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (count : int) : unit
  requires { ( ( ( ( ((Standard__natural.to_rep (Trains__train.rec__id (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) /\ ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) <> 0) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ (if (( ((let temp___830 = (Trains__train_location.rec__currentlocation (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content })))) in (
   (Array__Int__Standard__character.bool_eq temp___830 Trains__train_location__T3s.first Trains__train_location__T3s.last Temp___829.temp___829 1 7)))
   = True) /\ ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0) )) then (
   (forall index : int.
    ( ( (1 <= index) /\ (index <= (Stations__list_tracks__get_size.get_size (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))))) ) -> (if (((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) <> 0)) then (
     (if (((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__trackslinedestination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) index)))) = (Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))) then (
      (if (( ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) index)))) <> 0) /\ ((Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) index)))) <> 0) )) then (
       (if (((Standard__natural.to_rep (Tracks__track.rec__trainid (Tracks__track.__split_fields (Railsystems__gettrackbyname.gettrackbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__origin (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) index)))) (Types__station_locations.to_rep (Stations__list_tracks__data_type.rec__destination (Stations__list_tracks__data_type.__split_fields (Stations__list_tracks__get_element.get_element (Stations__station__T9s.to_base (Railsystems__list_stations__data_type.rec__outgoing (Railsystems__list_stations__data_type.__split_fields (Railsystems__list_stations__get_element_by_id.get_element_by_id (Railsystems__railsystem__T11s.to_base (Railsystems__railsystem.rec__all_stations (Railsystems__railsystem.__split_fields { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content }))) (Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))))))) index)))))))) = 0)) then (
        ((Standard__natural.to_rep (Stations__station.rec__id (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0)) else (
        true))) else (
       true))) else (
      true))) else (
     true)) ))) else (
   true)) ) }
  ensures { ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "getstationbyname" defined at railsystems.ads:147, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__getstationbyname__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Types__station_locations
 use        Stations__station
 use        Stations__station__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val getstationbyname #"railsystems.ads" 147 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (stationlocation : int) : Stations__station.station
  requires { (stationlocation <> 0) }
  ensures { ( (result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation)) /\ (Stations__station__axiom.dynamic_invariant result True False True) ) }
 
 axiom getstationbyname__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall stationlocation : int [(Railsystems__getstationbyname.getstationbyname r_system stationlocation)].
   ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Types__station_locations.in_range stationlocation) ) /\ (stationlocation <> 0) ) -> (let result = (Railsystems__getstationbyname.getstationbyname r_system stationlocation) in (
    (Stations__station__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "preparetrain" defined at railsystems.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__preparetrain__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Types__train_state
 use        Types__station_locations
 use        Stations__station
 use        Trains__train_location
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__getstationbyname

 val preparetrain #"railsystems.ads" 134 0 0# 
   (r_system__split_fields : Railsystems__railsystem.__split_fields__ref) (train__split_fields : Trains__train.__split_fields__ref) (origin : int) (destination : int) (starttime : int) : unit
  requires { ( ( ( ( (origin <> 0) /\ (destination <> 0) ) /\ (origin <> destination) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Railsystems__getstationbyname.getstationbyname { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } origin)))) = 0) ) /\ ((Standard__natural.to_rep (Stations__station.rec__trainid (Stations__station.__split_fields (Trains__train_location.rec__station (Trains__train_location.__split_fields (Trains__train.rec__location (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))))))) = 0) ) }
  ensures { ( ( ( ((Types__station_locations.to_rep (Trains__train.rec__origin (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = origin) /\ ((Types__station_locations.to_rep (Trains__train.rec__destination (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = destination) ) /\ ((Types__train_state.to_rep (Trains__train.rec__state (Trains__train.__split_fields { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content }))) = 2) ) /\ ( (Railsystems__railsystem__axiom.dynamic_invariant { Railsystems__railsystem.__split_fields = r_system__split_fields.Railsystems__railsystem.__split_fields__content } True True True) /\ (Trains__train__axiom.dynamic_invariant { Trains__train.__split_fields = train__split_fields.Trains__train.__split_fields__content } True True True) ) ) }
  writes {r_system__split_fields, train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "gettrainbyid" defined at railsystems.ads:157, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__gettrainbyid__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Trains__train
 use        Trains__train__axiom
 use        Railsystems__list_trains__list_ptr
 use        Railsystems__list_trains__get_size
 use        Railsystems__railsystem__T9s
 use        Railsystems__railsystem
 use        Railsystems__railsystem__axiom
 use        Railsystems__gettrainbyid

 val gettrainbyid #"railsystems.ads" 157 0 0# 
   (r_system : Railsystems__railsystem.railsystem) (id : int) : Trains__train.train
  requires { ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) }
  ensures { ( (result = (Railsystems__gettrainbyid.gettrainbyid r_system id)) /\ (Trains__train__axiom.dynamic_invariant result True False True) ) }
 
 axiom gettrainbyid__post_axiom :
  (forall r_system : Railsystems__railsystem.railsystem.
  (forall id : int [(Railsystems__gettrainbyid.gettrainbyid r_system id)].
   ( ( ( (Railsystems__railsystem__axiom.dynamic_invariant r_system True True True) /\ (Standard__natural.in_range id) ) /\ ( (id >= 1) /\ (id <= (Railsystems__list_trains__get_size.get_size (Railsystems__railsystem__T9s.to_base (Railsystems__railsystem.rec__all_trains (Railsystems__railsystem.__split_fields r_system))))) ) ) -> (let result = (Railsystems__gettrainbyid.gettrainbyid r_system id) in (
    (Trains__train__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "set_up_case" defined at railsystems-test.ads:9, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__test__set_up_case__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc
 use        Railsystems__test__tc__axiom

 val set_up_case #"railsystems-test.ads" 9 0 0# 
   (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
  writes {t__split_fields}
 
 namespace Dispatch
  val set_up_case #"railsystems-test.ads" 9 0 0# 
    (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
   writes {t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "set_up" defined at railsystems-test.ads:11, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__test__set_up__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc
 use        Railsystems__test__tc__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system

 val set_up #"railsystems-test.ads" 11 0 0# 
   (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
  reads {Railsystems__test__rail_system.rail_system}
  writes {Railsystems__test__rail_system.rail_system, t__split_fields}
 
 namespace Dispatch
  val set_up #"railsystems-test.ads" 11 0 0# 
    (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
   reads {Railsystems__test__rail_system.rail_system}
   writes {Railsystems__test__rail_system.rail_system, t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "tear_down" defined at railsystems-test.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__test__tear_down__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc
 use        Railsystems__test__tc__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system

 val tear_down #"railsystems-test.ads" 12 0 0# 
   (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
  reads {Railsystems__test__rail_system.rail_system}
  writes {Railsystems__test__rail_system.rail_system, t__split_fields}
 
 namespace Dispatch
  val tear_down #"railsystems-test.ads" 12 0 0# 
    (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
   reads {Railsystems__test__rail_system.rail_system}
   writes {Railsystems__test__rail_system.rail_system, t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "tear_down_case" defined at railsystems-test.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__test__tear_down_case__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc
 use        Railsystems__test__tc__axiom
 use        Railsystems__test__rail_system
 use        Railsystems__test__rail_system

 val tear_down_case #"railsystems-test.ads" 14 0 0# 
   (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
  reads {Railsystems__test__rail_system.rail_system}
  writes {Railsystems__test__rail_system.rail_system, t__split_fields}
 
 namespace Dispatch
  val tear_down_case #"railsystems-test.ads" 14 0 0# 
    (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
   reads {Railsystems__test__rail_system.rail_system}
   writes {Railsystems__test__rail_system.rail_system, t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "register_tests__2" defined at railsystems-test.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Railsystems__test__register_tests__2__axiom
 use import "_gnatprove_standard".Main
 use        Railsystems__test__tc
 use        Railsystems__test__tc__axiom

 val register_tests__2 #"railsystems-test.ads" 16 0 0# 
   (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
  requires { true }
  ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
  reads {__HEAP}
  writes {t__split_fields}
 
 namespace Dispatch
  val register_tests__2 #"railsystems-test.ads" 16 0 0# 
    (t__split_fields : Railsystems__test__tc.__split_fields__ref) (t__attr__tag : int) : unit
   requires { true }
   ensures { (Railsystems__test__tc__axiom.dynamic_invariant { Railsystems__test__tc.__split_fields = t__split_fields.Railsystems__test__tc.__split_fields__content; Railsystems__test__tc.attr__tag = t__attr__tag } True True True) }
   reads {__HEAP}
   writes {t__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq__2" defined at ada_containers-aunit_lists.ads:59 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__Oeq__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__Oeq__2

 val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
   (left : Aunit__test_suites__test_lists__list.list) (right : Aunit__test_suites__test_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_suites__test_lists__Oeq__2.oeq__2 left right)) }
 
 namespace Dispatch
  val oeq__2 #"ada_containers-aunit_lists.ads" 59 0 0# 
    (left : Aunit__test_suites__test_lists__list.list) (right : Aunit__test_suites__test_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_suites__test_lists__Oeq__2.Dispatch.oeq__2 left right)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "length" defined at ada_containers-aunit_lists.ads:61 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__length__axiom
 use import "_gnatprove_standard".Main
 use        Ada_containers__count_type__axiom
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__length

 val length #"ada_containers-aunit_lists.ads" 61 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : int
  requires { true }
  ensures { ( (result = (Aunit__test_suites__test_lists__length.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val length #"ada_containers-aunit_lists.ads" 61 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : int
   requires { true }
   ensures { ( (result = (Aunit__test_suites__test_lists__length.Dispatch.length container)) /\ (Ada_containers__count_type__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom length__post_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__length.length container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__length.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__post__dispatch_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__length.Dispatch.length container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__length.Dispatch.length container) in (
    (Ada_containers__count_type__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at ada_containers-aunit_lists.ads:63 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__is_empty__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__is_empty

 val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : bool
  requires { true }
  ensures { (result = (Aunit__test_suites__test_lists__is_empty.is_empty container)) }
 
 namespace Dispatch
  val is_empty #"ada_containers-aunit_lists.ads" 63 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : bool
   requires { true }
   ensures { (result = (Aunit__test_suites__test_lists__is_empty.Dispatch.is_empty container)) }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at ada_containers-aunit_lists.ads:65 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__clear__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom

 val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val clear #"ada_containers-aunit_lists.ads" 65 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "move" defined at ada_containers-aunit_lists.ads:83 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__move__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom

 val move #"ada_containers-aunit_lists.ads" 83 0 0# 
   (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {__HEAP, target__split_fields, source__split_fields}
 
 namespace Dispatch
  val move #"ada_containers-aunit_lists.ads" 83 0 0# 
    (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {__HEAP, target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "insert__3" defined at ada_containers-aunit_lists.ads:100 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__insert__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom

 val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {container__split_fields, position}
 
 namespace Dispatch
  val insert__3 #"ada_containers-aunit_lists.ads" 100 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at ada_containers-aunit_lists.ads:116 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__delete__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom

 val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) (count : int) : unit
  requires { true }
  ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields, position}
 
 namespace Dispatch
  val delete #"ada_containers-aunit_lists.ads" 116 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) (count : int) : unit
   requires { true }
   ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_first" defined at ada_containers-aunit_lists.ads:121 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__delete_first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom

 val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_first #"ada_containers-aunit_lists.ads" 121 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "delete_last" defined at ada_containers-aunit_lists.ads:125 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__delete_last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom

 val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {__HEAP, container__split_fields}
 
 namespace Dispatch
  val delete_last #"ada_containers-aunit_lists.ads" 125 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (count : int) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {__HEAP, container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reverse_elements" defined at ada_containers-aunit_lists.ads:129 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__reverse_elements__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom

 val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  writes {container__split_fields}
 
 namespace Dispatch
  val reverse_elements #"ada_containers-aunit_lists.ads" 129 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap" defined at ada_containers-aunit_lists.ads:131 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__swap__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor

 val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_suites__test_lists__cursor.cursor) (j : Aunit__test_suites__test_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap #"ada_containers-aunit_lists.ads" 131 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_suites__test_lists__cursor.cursor) (j : Aunit__test_suites__test_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "swap_links" defined at ada_containers-aunit_lists.ads:135 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__swap_links__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor

 val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_suites__test_lists__cursor.cursor) (j : Aunit__test_suites__test_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val swap_links #"ada_containers-aunit_lists.ads" 135 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (i : Aunit__test_suites__test_lists__cursor.cursor) (j : Aunit__test_suites__test_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice" defined at ada_containers-aunit_lists.ads:139 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__splice__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor

 val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
   (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
  requires { true }
  ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields}
 
 namespace Dispatch
  val splice #"ada_containers-aunit_lists.ads" 139 0 0# 
    (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) : unit
   requires { true }
   ensures { ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__2" defined at ada_containers-aunit_lists.ads:144 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__splice__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom

 val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
   (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { ( ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
  reads {__HEAP}
  writes {target__split_fields, source__split_fields, position}
 
 namespace Dispatch
  val splice__2 #"ada_containers-aunit_lists.ads" 144 0 0# 
    (target__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (target__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (source__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (source__attr__tag : int) (position : Aunit__test_suites__test_lists__cursor.cursor__ref) : unit
   requires { true }
   ensures { ( ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = target__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = target__attr__tag } True True True) /\ (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = source__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = source__attr__tag } True True True) ) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) ) }
   reads {__HEAP}
   writes {target__split_fields, source__split_fields, position}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "splice__3" defined at ada_containers-aunit_lists.ads:150 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__splice__3__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor

 val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
   (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (position : Aunit__test_suites__test_lists__cursor.cursor) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
  reads {__HEAP}
  writes {container__split_fields}
 
 namespace Dispatch
  val splice__3 #"ada_containers-aunit_lists.ads" 150 0 0# 
    (container__split_fields : Aunit__test_suites__test_lists__list.__split_fields__ref) (container__attr__tag : int) (before : Aunit__test_suites__test_lists__cursor.cursor) (position : Aunit__test_suites__test_lists__cursor.cursor) : unit
   requires { true }
   ensures { (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant { Aunit__test_suites__test_lists__list.__split_fields = container__split_fields.Aunit__test_suites__test_lists__list.__split_fields__content; Aunit__test_suites__test_lists__list.attr__tag = container__attr__tag } True True True) }
   reads {__HEAP}
   writes {container__split_fields}

 end

end

(* Module for declaring a program function (and possibly an axiom) for "first" defined at ada_containers-aunit_lists.ads:155 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__first__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom
 use        Aunit__test_suites__test_lists__first

 val first #"ada_containers-aunit_lists.ads" 155 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_suites__test_lists__first.first container)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val first #"ada_containers-aunit_lists.ads" 155 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_suites__test_lists__first.Dispatch.first container)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom first__post_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__first.first container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__first.first container) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom first__post__dispatch_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__first.Dispatch.first container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__first.Dispatch.first container) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "last" defined at ada_containers-aunit_lists.ads:159 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__last__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__list
 use        Aunit__test_suites__test_lists__list__axiom
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom
 use        Aunit__test_suites__test_lists__last

 val last #"ada_containers-aunit_lists.ads" 159 0 0# 
   (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_suites__test_lists__last.last container)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 namespace Dispatch
  val last #"ada_containers-aunit_lists.ads" 159 0 0# 
    (container : Aunit__test_suites__test_lists__list.list) : Aunit__test_suites__test_lists__cursor.cursor
   requires { true }
   ensures { ( (result = (Aunit__test_suites__test_lists__last.Dispatch.last container)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }

 end
 
 axiom last__post_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__last.last container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__last.last container) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))
 
 axiom last__post__dispatch_axiom :
  (forall container : Aunit__test_suites__test_lists__list.list [(Aunit__test_suites__test_lists__last.Dispatch.last container)].
   ( (Aunit__test_suites__test_lists__list__axiom.dynamic_invariant container True True True) -> (let result = (Aunit__test_suites__test_lists__last.Dispatch.last container) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "next" defined at ada_containers-aunit_lists.ads:163 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__next__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom
 use        Aunit__test_suites__test_lists__next

 val next #"ada_containers-aunit_lists.ads" 163 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) : Aunit__test_suites__test_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_suites__test_lists__next.next position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom next__post_axiom :
  (forall position : Aunit__test_suites__test_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_suites__test_lists__next.next position __HEAP)].
   ( (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_suites__test_lists__next.next position __HEAP) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "next__2" defined at ada_containers-aunit_lists.ads:165 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__next__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom

 val next__2 #"ada_containers-aunit_lists.ads" 165 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "previous" defined at ada_containers-aunit_lists.ads:167 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__previous__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom
 use        Aunit__test_suites__test_lists__previous

 val previous #"ada_containers-aunit_lists.ads" 167 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) : Aunit__test_suites__test_lists__cursor.cursor
  requires { true }
  ensures { ( (result = (Aunit__test_suites__test_lists__previous.previous position __HEAP.Main.__type_of_heap__content)) /\ (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True) ) }
 
 axiom previous__post_axiom :
  (forall position : Aunit__test_suites__test_lists__cursor.cursor.
  (forall __HEAP : Main.__type_of_heap [(Aunit__test_suites__test_lists__previous.previous position __HEAP)].
   ( (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position True True True) -> (let result = (Aunit__test_suites__test_lists__previous.previous position __HEAP) in (
    (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "previous__2" defined at ada_containers-aunit_lists.ads:169 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__previous__2__axiom
 use import "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__cursor__axiom

 val previous__2 #"ada_containers-aunit_lists.ads" 169 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor__ref) : unit
  requires { true }
  ensures { (Aunit__test_suites__test_lists__cursor__axiom.dynamic_invariant position.Aunit__test_suites__test_lists__cursor.cursor__content True True True) }
  reads {__HEAP}
  writes {position}

end

(* Module for declaring a program function (and possibly an axiom) for "has_element" defined at ada_containers-aunit_lists.ads:185 instantiated at aunit-test_suites.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Aunit__test_suites__test_lists__has_element__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Aunit__test_suites__test_lists__cursor
 use        Aunit__test_suites__test_lists__has_element

 val has_element #"ada_containers-aunit_lists.ads" 185 0 0# 
   (position : Aunit__test_suites__test_lists__cursor.cursor) : bool
  requires { true }
  ensures { (result = (Aunit__test_suites__test_lists__has_element.has_element position __HEAP.Main.__type_of_heap__content)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end
